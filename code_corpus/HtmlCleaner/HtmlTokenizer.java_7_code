    private String identifier() throws IOException {
        asExpected = true;

        if (!isIdentifierStartChar()) {
            asExpected = false;
            return null;
        }

        commonStr.delete(0, commonStr.length());

        while (!isAllRead() && isIdentifierChar()) {
            saveCurrentSafe();
            commonStr.append(working[pos]);
            go();
        }

        // strip invalid characters from the end
        while (commonStr.length() > 0 && Utils.isIdentifierHelperChar(commonStr.charAt(commonStr.length() - 1))) {
            commonStr.deleteCharAt(commonStr.length() - 1);
        }

        if (commonStr.length() == 0) {
            return null;
        }

        String id = commonStr.toString();

        final int columnIndex = id.indexOf(':');
        if (columnIndex >= 0) {
            final String prefix = id.substring(0, columnIndex);
            String suffix = id.substring(columnIndex + 1);
            final int nextColumnIndex = suffix.indexOf(':');
            if (nextColumnIndex >= 0) {
                suffix = suffix.substring(0, nextColumnIndex);
            }
            id = isNamespacesAware ? (prefix + ":" + suffix) : suffix;
        }

        return id;
    }

    private void ignoreUntil(final char ch) throws IOException {
        while (!isAllRead()) {
            go();
            if (isChar(ch)) {
                break;
            }
        }
    }

