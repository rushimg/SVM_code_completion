    private class HeadlessTagNode extends TagNode {
        private HeadlessTagNode(final TagNode wrappedNode) {
            super("");
            getAttributes().putAll(wrappedNode.getAttributes());
            getChildren().addAll(wrappedNode.getChildren());
            setDocType(wrappedNode.getDocType());
            final Map<String, String> nsDecls = getNamespaceDeclarations();
            if (nsDecls != null) {
                final Map<String, String> wrappedNSDecls = wrappedNode.getNamespaceDeclarations();
                if (wrappedNSDecls != null) {
                    nsDecls.putAll(wrappedNSDecls);
                }
            }

        }
    }

    protected CleanerProperties props;

    protected Serializer(final CleanerProperties props) {
        this.props = props;
    }

