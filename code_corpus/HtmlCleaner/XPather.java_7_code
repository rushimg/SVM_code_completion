    private boolean evaluateLogic(final Collection first, final Collection second, final String logicOperator) {
        if (first == null || first.isEmpty() || second == null || second.isEmpty()) {
            return false;
        }
        final Object elem1 = first.iterator().next();
        final Object elem2 = second.iterator().next();
        if (elem1 instanceof Number && elem2 instanceof Number) {
            final double d1 = ((Number) elem1).doubleValue();
            final double d2 = ((Number) elem2).doubleValue();
            if ("=".equals(logicOperator)) {
                return d1 == d2;
            } else if ("<".equals(logicOperator)) {
                return d1 < d2;
            } else if (">".equals(logicOperator)) {
                return d1 > d2;
            } else if ("<=".equals(logicOperator)) {
                return d1 <= d2;
            } else if (">=".equals(logicOperator)) {
                return d1 >= d2;
            }
        } else {
            final String s1 = toText(elem1);
            final String s2 = toText(elem2);
            final int result = s1.compareTo(s2);
            if ("=".equals(logicOperator)) {
                return result == 0;
            } else if ("<".equals(logicOperator)) {
                return result < 0;
            } else if (">".equals(logicOperator)) {
                return result > 0;
            } else if ("<=".equals(logicOperator)) {
                return result <= 0;
            } else if (">=".equals(logicOperator)) {
                return result >= 0;
            }
        }

        return false;
    }

