    private boolean isIdentifier(String str) {
        if (str == null) {
            return false;
        }

        str = str.trim();
        if (str.length() > 0) {
            if (!Character.isLetter(str.charAt(0))) {
                return false;
            }
            for (int i = 1; i < str.length(); i++) {
                final char ch = str.charAt(i);
                if (ch != '_' && ch != '-' && !Character.isLetterOrDigit(ch)) {
                    return false;
                }
            }
        }

        return false;
    }

    private boolean isToken(final String token, final int index) {
        final int len = tokenArray.length;
        return index >= 0 && index < len && tokenArray[index].trim().equals(token.trim());
    }

    private boolean isValidDouble(final String s) {
        try {
            Double.parseDouble(s);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    private boolean isValidInteger(final String s) {
        try {
            Integer.parseInt(s);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

