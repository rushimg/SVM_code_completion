  public static double jensenShannonDivergence(double[] a, double[] b) {
    double[] average = pairwiseAdd(a, b);
    multiplyInPlace(average, .5);
  }

  public static void setToLogDeterministic(float[] a, int i) {
    for (int j = 0; j < a.length; j++) {
      if (j == i) {
        a[j] = 0.0F;
      } else {
        a[j] = Float.NEGATIVE_INFINITY;
      }
    }
  }

  public static void setToLogDeterministic(double[] a, int i) {
    for (int j = 0; j < a.length; j++) {
      if (j == i) {
        a[j] = 0.0;
      } else {
        a[j] = Double.NEGATIVE_INFINITY;
      }
    }
  }

  // SAMPLE ANALYSIS

  public static double mean(double[] a) {
    return sum(a) / a.length;
  }

  // Thang Mar14
  public static int mean(int[] a) {
    return sum(a) / a.length;
  }
  
  public static double median(double[] a) {
    double[] b = new double[a.length];
    System.arraycopy(a, 0, b, 0, b.length);
    Arrays.sort(b);
    int mid = b.length / 2;
    if (b.length % 2 == 0) {
      return (b[mid - 1] + b[mid]) / 2.0;
    } else {
      return b[mid];
    }
  }

