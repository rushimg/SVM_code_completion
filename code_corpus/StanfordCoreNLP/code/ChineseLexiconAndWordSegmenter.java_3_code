  public ChineseLexiconAndWordSegmenter(String segmenterFileOrUrl, Options op) {
    ChineseLexiconAndWordSegmenter cs = getSegmenterDataFromFile(segmenterFileOrUrl, op);
    this.op = cs.op; // in case a serialized options was read in
    chineseLexicon = cs.chineseLexicon;
    wordSegmenter = cs.wordSegmenter;
  }

  public static ChineseLexiconAndWordSegmenter getSegmenterDataFromFile(String parserFileOrUrl, Options op) {
    ChineseLexiconAndWordSegmenter cs = getSegmenterDataFromSerializedFile(parserFileOrUrl);
    if (cs == null) {
//      pd = getSegmenterDataFromTextFile(parserFileOrUrl, op);
    }
    return cs;
  }

  protected static ChineseLexiconAndWordSegmenter getSegmenterDataFromSerializedFile(String serializedFileOrUrl) {
    ChineseLexiconAndWordSegmenter cs = null;
    try {
      System.err.print("Loading segmenter from serialized file " + serializedFileOrUrl + " ...");
      ObjectInputStream in;
      InputStream is;
      if (serializedFileOrUrl.startsWith("http://")) {
        URL u = new URL(serializedFileOrUrl);
        URLConnection uc = u.openConnection();
        is = uc.getInputStream();
      } else {
        is = new FileInputStream(serializedFileOrUrl);
      }
      if (serializedFileOrUrl.endsWith(".gz")) {
        // it's faster to do the buffering _outside_ the gzipping as here
        in = new ObjectInputStream(new BufferedInputStream(new GZIPInputStream(is)));
      } else {
        in = new ObjectInputStream(new BufferedInputStream(is));
      }
      cs = (ChineseLexiconAndWordSegmenter) in.readObject();
      in.close();
      System.err.println(" done.");
      return cs;
    } catch (InvalidClassException ice) {
      // For this, it's not a good idea to continue and try it as a text file!
      System.err.println();   // as in middle of line from above message
      throw new RuntimeException(ice);
    } catch (FileNotFoundException fnfe) {
      // For this, it's not a good idea to continue and try it as a text file!
      System.err.println();   // as in middle of line from above message
      throw new RuntimeException(fnfe);
    } catch (StreamCorruptedException sce) {
      // suppress error message, on the assumption that we've really got
      // a text grammar, and that'll be tried next
    } catch (Exception e) {
      System.err.println();   // as in middle of line from above message
      e.printStackTrace();
    }
    return null;
  }

