  public static void mergeChunks(List<CoreMap> chunkList, String origText,
                                 int chunkIndexStart, int chunkIndexEnd)
  {
    CoreMap newChunk = getMergedChunk(chunkList, origText, chunkIndexStart, chunkIndexEnd);
    int nChunksToRemove = chunkIndexEnd - chunkIndexStart - 1;
    for (int i = 0; i < nChunksToRemove; i++) {
      chunkList.remove(chunkIndexStart);
    }
    chunkList.set(chunkIndexStart, newChunk);
  }

  public static Character getFirstNonWsChar(CoreMap sent)
  {
    String sentText = sent.get(CoreAnnotations.TextAnnotation.class);
    for (int j = 0; j < sentText.length(); j++) {
      char c = sentText.charAt(j);
      if (!Character.isWhitespace(c)) {
        return c;
      }
    }
    return null;
  }

  public static Integer getFirstNonWsCharOffset(CoreMap sent, boolean relative)
  {
    String sentText = sent.get(CoreAnnotations.TextAnnotation.class);
    for (int j = 0; j < sentText.length(); j++) {
      char c = sentText.charAt(j);
      if (!Character.isWhitespace(c)) {
        if (relative) {
          return j;
        } else {
          return j + sent.get(CoreAnnotations.CharacterOffsetBeginAnnotation.class);
        }
      }
    }
    return null;
  }

  public static String getTrimmedText(CoreMap sent)
  {
    String sentText = sent.get(CoreAnnotations.TextAnnotation.class);
    return sentText.trim();
  }

