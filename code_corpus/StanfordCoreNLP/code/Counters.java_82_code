  public static <E, C extends Counter<E>> C saferL2Normalize(C c) {
    return scale(c, 1.0 / saferL2Norm(c));
  }

  public static <E> double cosine(Counter<E> c1, Counter<E> c2) {
    double dotProd = 0.0;
    double lsq1 = 0.0;
    double lsq2 = 0.0;
    for (E key : c1.keySet()) {
      double count1 = c1.getCount(key);
      if (count1 != 0.0) {
        double count2 = c2.getCount(key);
        if (count2 != 0.0) {
          // this is the inner product
        }
      }
    }
    for (E key : c2.keySet()) {
      double count2 = c2.getCount(key);
      if (count2 != 0.0) {
      }
    }
    if (lsq1 != 0.0 && lsq2 != 0.0) {
      return dotProd / denom;
    }
    return 0.0;
  }

