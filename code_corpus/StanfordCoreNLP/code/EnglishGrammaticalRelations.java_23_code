  public static final GrammaticalRelation CLAUSAL_COMPLEMENT =
    new GrammaticalRelation(Language.English, "ccomp", "clausal complement",
        new String[] { // note if you add more words in the pattern, be sure to add them in the ADV_CLAUSE_MODIFIER too!
          "VP < (S=target < (VP !<, TO|VBG|VBN) !$-- NP)",
          "VP < (SBAR=target < (S <+(S) VP) <, (IN|DT < /^(?i:that|whether)$/))",
          "VP < (SBAR=target < (SBAR < (S <+(S) VP) <, (IN|DT < /^(?i:that|whether)$/)) < CC|CONJP)",
          "VP < (SBAR=target < (S < VP) !$-- NP !<, (IN|WHADVP) !<2 (IN|WHADVP $- ADVP|RB))",
          "VP < (SBAR=target < (S < VP) !$-- NP <, (WHADVP < (WRB < /^(?i:how)$/)))",
          "VP < @SBARQ=target",  // Direct question: She asked "Who is in trouble"
          "VP < (/^VB/ < " + haveRegex + ") < (S=target < @NP < VP)",
          // !$-- @SBAR|S handles cases where the answer to the question
          //   "What do they ccompVerb?"
          //   is already answered by a different node
          // the ccompObjVerbRegex/NP test distinguishes "He told me why ..."
          //   vs "They know my order when ..."
          // to find "...", he said or "...?" he asked.
          // We eliminate conflicts with conj by looking for CC
          // Matching against "!< (VP < TO|VBG|VBN)" matches against vmod
          // "!< (VP <1 (VP [ <1 VBG|VBN | <2 (VBG|VBN $-- ADVP) ])))" also matches against vmod
          "@S|SINV < (@S|SBARQ=target $+ /^(,|\\.|'')$/ !$- /^(?:CC|CONJP|:)$/ !$- (/^(?:,)$/ $- CC|CONJP) !< (VP < TO|VBG|VBN) !< (VP <1 (VP [ <1 VBG|VBN | <2 (VBG|VBN $-- ADVP) ]))) !< (@S !== =target $++ =target !$++ @CC|CONJP)",
          // ADVP is things like "As long as they spend ..."
          // < WHNP captures phrases such as "no matter what", "no matter how", etc
          "ADVP < (SBAR=target [ < WHNP | ( < (IN < /^(?i:as|that)/) < (S < (VP !< TO))) ])",
          "ADJP < (SBAR=target !< (IN < as) < S)", // ADJP is things like "sure (that) he'll lose" or for/to ones or object of comparison with than "than we were led to expect"; Leave aside as in "as clever as we thought.
          // That ... he know
          "S <, (SBAR=target <, (IN < /^(?i:that|whether)$/) !$+ VP)",
          // JJ catches a couple of funny NPs with heads like "enough"
          // Note that we eliminate SBAR which also match an vmod pattern
          "@NP < JJ|NN|NNS < (SBAR=target [ !<(S < (VP < TO )) | !$-- NP|NN|NNP|NNS ] )"
        });
  public static class ClausalComplementGRAnnotation extends GrammaticalRelationAnnotation { }


