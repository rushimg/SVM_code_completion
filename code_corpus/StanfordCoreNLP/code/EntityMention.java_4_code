  @Override
  public boolean equals(Object other) {
    if(! (other instanceof EntityMention)) return false;
    ExtractionObject o = (ExtractionObject) other;
    if(o.objectId.equals(objectId) && o.sentence == sentence) return true;
    return false;
  }

  @Override
  public boolean equals(Object other) {
    if(! (other instanceof EntityMention)) return false;
    EntityMention otherEnt = (EntityMention) other;
    return equals(otherEnt, true);
  }

  public boolean headIncludes(EntityMention otherEnt, boolean useSubType) {
    return otherEnt.getSyntacticHeadTokenPosition() >= getHeadTokenStart() &&
            otherEnt.getSyntacticHeadTokenPosition() < getHeadTokenEnd() &&
            ((type != null && otherEnt.type != null && type.equals(otherEnt.type)) || (type == null && otherEnt.type == null)) &&
            ( ! useSubType || ((subType != null && otherEnt.subType != null && subType.equals(otherEnt.subType)) || (subType == null && otherEnt.subType == null)));
  }

  public boolean equals(EntityMention otherEnt, boolean useSubType) {
    //
    // two mentions are equal if they are over the same sentence,
    // have the same head span, the same type/subtype, and the same text.
    // We need this for scoring NER, and in various places in KBP
    //
    if(sentence.get(CoreAnnotations.TextAnnotation.class).equals(otherEnt.sentence.get(CoreAnnotations.TextAnnotation.class)) && textEquals(otherEnt) && labelEquals(otherEnt, useSubType)){
      return true;
    }
