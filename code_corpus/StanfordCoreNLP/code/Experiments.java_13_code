  public void ptilde(int ySize) {
    int maxX = 0;
    int maxY = 0;
    this.ySize = ySize;
    for (int[] sample : vArray) {
      if (maxX < sample[0]) {
        maxX = sample[0];
      }
      if (maxY < sample[1]) {
        maxY = sample[1];
      }
    }
    px = new int[maxX + 1];
    maxY = ySize - 1;
    py = new int[ySize];
    pxy = new int[maxX + 1][dim];
    xSize = maxX + 1;
    ySize = maxY + 1;
    //GlobalHolder.xSize=xSize;
    //GlobalHolder.ySize=ySize;
    int[] yArr = new int[dim];
    for (int[] sample : vArray) {
      int xC = sample[0];
      int yC = sample[1];
      px[xC]++;
      py[yC]++;
      for (int j = 0; j < dim; j++) {
        yArr[j] = pxy[xC][j] > 0 ? pxy[xC][j] % ySize : -1;
      }
      for (int j = 0; j < dim; j++) {
        if (yArr[j] == -1) {
          pxy[xC][j] = ySize + yC;
          break;
        }
        if (yC == yArr[j]) {
          pxy[xC][j] += ySize;
          break;
        }
      } // for dim

      //System.out.println(" Exception more than  "+dim);

    }// for i
    // check for same x with different y

    System.out.println("ySize is" + ySize);

    for (int y = 0; y < ySize; y++) {
      double sum = 0.0;
      for (int x = 0; x < xSize; x++) {
        double p1 = ptildeXY(x, y);
        sum = sum + p1;
      }
      if (Math.abs(ptildeY(y) - sum) > 0.00001) {
        System.out.println("Experiments error: for y=" + y + ", ptildeY(y)=" + ptildeY(y) + " but Sum_x ptildeXY(x,y)=" + sum);
      } else {
        System.out.println("Experiments: for y " + y + " Sum_x ptildeXY(x,y)=" + sum);
      }
    } // for y
  }


  public double ptildeX(int x) {
    if (x > xSize - 1) {
      return 0.0;
    }
    return px[x] / (double) vArray.length;
  }


  public double ptildeY(int y) {
    if (y > ySize - 1) {
      return 0.0;
    }
    return py[y] / (double) size();
  }

  public double ptildeXY(int x, int y) {
    for (int j = 0; j < dim; j++) {
      if (y == pxy[x][j] % ySize) {
        return (pxy[x][j] / ySize) / (double) size();
      }
    }
    return 0.0;
  }

  public int[] get(int index) {
    return vArray[index];
  }

