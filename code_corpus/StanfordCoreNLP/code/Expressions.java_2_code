  public abstract static class WrappedExpression implements Expression {
    protected Expression expr;

    public Tags getTags() {
      return expr.getTags();
    }

    public void setTags(Tags tags) {
      expr.setTags(tags);
    }

    public String getType() {
      return expr.getType();
    }

    public Expression simplify(Env env) {
      return expr.simplify(env);
    }

    public boolean hasValue() {
      return expr.hasValue();
    }

    public Value evaluate(Env env, Object... args) {
      return expr.evaluate(env, args);
    }

    @Override
    public boolean equals(Object o) {
      if (this == o) return true;
      if (!(o instanceof WrappedExpression)) return false;

      WrappedExpression that = (WrappedExpression) o;

      if (expr != null ? !expr.equals(that.expr) : that.expr != null) return false;

      return true;
    }

    @Override
    public int hashCode() {
      return expr != null ? expr.hashCode() : 0;
    }
  }

