    parser.setOptionFlags(new String[] {
        "-outputFormat", "penn,typedDependenciesCollapsed",
        "-maxLength", "100",
        "-retainTmpSubcategories"
    });

    this.preProcessSentences = preProcessSentences;
    this.calculateHeadSpan = calculateHeadSpan;
    this.forceGenerationOfIndexSpans = forceGenerationOfIndexSpans;
  }

  public void setProcessor(StanfordCoreNLP p) {
    this.processor = p;
  }

  public void setUseNewHeadFinder(boolean useNewHeadFinder) {
    this.useNewHeadFinder = useNewHeadFinder;
  }

  public Annotator getParser() {
    if(parserProcessor == null){
      parserProcessor = StanfordCoreNLP.getExistingAnnotator("parse");
      assert(parserProcessor != null);
    }
    return parserProcessor;
  }

  public void setLoggerLevel(Level level) {
    logger.setLevel(level);
  }
  public Level getLoggerLevel() {
    return logger.getLevel();
  }

