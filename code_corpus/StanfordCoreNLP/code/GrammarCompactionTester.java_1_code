public class GrammarCompactionTester {

  // for debugging
  //  public static MergeableGraph debugGraph = null;

  ExhaustivePCFGParser parser = null;
  ExhaustiveDependencyParser dparser = null;
  BiLexPCFGParser bparser = null;
  Scorer scorer = null;
  Options op;

  //  TreebankLangParserParams tlpParams = new EnglishTreebankParserParams();
  // tlpParams may be changed to something else later, so don't use it till
  // after options are parsed.


  GrammarCompactor compactor = null;

  Map<String, List<List<String>>> allTestPaths = Generics.newHashMap();
  Map<String, List<List<String>>> allTrainPaths = Generics.newHashMap();

  String asciiOutputPath = null;
  String path = "/u/nlp/stuff/corpora/Treebank3/parsed/mrg/wsj";
  int trainLow = 200, trainHigh = 2199, testLow = 2200, testHigh = 2219;

  String suffixOrderString = null;
  String minArcNumString = null;
  String maxMergeCostString = null;
  String sizeCutoffString = null;
  String minPortionArcsString = null;
  String ignoreUnsupportedSuffixesString = "false";
  String splitParamString = null;
  String costModelString = null;
  String verboseString = null;
  String minArcCostString = null;
  String trainThresholdString = null;
  String heldoutThresholdString = null;
  int markovOrder = -1;
  String smoothParamString = null;
  String scoringData = null;
  String allowEpsilonsString = null;
  boolean saveGraphs = false;
  private int indexRangeLow;
  private int indexRangeHigh;
  private String outputFile = null;
  private String inputFile = null;
  private boolean toy = false;

