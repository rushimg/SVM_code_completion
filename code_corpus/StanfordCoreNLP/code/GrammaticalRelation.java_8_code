      String[] names = s.split("_");
      String specific = names.length > 1? names[1] : null;
      reln = new GrammaticalRelation(language, names[0], null, null, null, specific);
      String name;
      String specific;
      int underscorePosition = s.indexOf('_');
      if (underscorePosition > 0) {
        name = s.substring(0, underscorePosition);
        specific = s.substring(underscorePosition + 1);
      } else {
        name = s;
        specific = null;
      }
      reln = new GrammaticalRelation(language, name, null, null, null, specific);

    }
    return reln;
  }

  private static Map<String, SoftReference<GrammaticalRelation>> valueOfCache = new HashMap<String, SoftReference<GrammaticalRelation>>();
  public static GrammaticalRelation valueOf(String s) {
    GrammaticalRelation value = null;
    SoftReference<GrammaticalRelation> possiblyCachedValue = valueOfCache.get(s);
    if (possiblyCachedValue != null) { value = possiblyCachedValue.get(); }
    if (value == null) {
      value = valueOf(Language.English, s);
      valueOfCache.put(s, new SoftReference<GrammaticalRelation>(value));
    }
    return value;
  }

