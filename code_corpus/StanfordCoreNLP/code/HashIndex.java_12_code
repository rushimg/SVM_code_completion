  @Override
  public int indexOf(E o, boolean add) {
    Integer index = indexes.get(o);
    if (index == null) {
      if (add && ! locked) {
        try {
          semaphore.acquire();
          index = indexes.get(o);
          if (index == null) {
            index = objects.size();
            objects.add(o);
            indexes.put(o, index);
          }
          semaphore.release();
        } catch (InterruptedException e) {
          throw new RuntimeInterruptedException(e);
        }
      } else {
        return -1;
      }
    }
    return index;
  }

  private final Semaphore semaphore = new Semaphore(1);

  // TODO: delete this when breaking serialization because we can leach off of AbstractCollection
