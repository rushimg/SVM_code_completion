  public boolean contains(E p)
  {
    // Check that the start point is before p
    boolean check1 = (includesBegin())? (first.compareTo(p) <= 0):(first.compareTo(p) < 0);
    // Check that the end point is after p
    boolean check2 = (includesEnd())? (second.compareTo(p) >= 0):(second.compareTo(p) > 0);
    return (check1 && check2);
  }

  public boolean containsOpen(E p)
  {
    // Check that the start point is before p
    boolean check1 = first.compareTo(p) <= 0;
    // Check that the end point is after p
    boolean check2 = second.compareTo(p) >= 0;
    return (check1 && check2);
  }

  public boolean contains(Interval<E> other)
  {
    boolean containsOtherBegin = (other.includesBegin())? contains(other.getBegin()): containsOpen(other.getBegin());
    boolean containsOtherEnd = (other.includesEnd())? contains(other.getEnd()): containsOpen(other.getEnd());
    return (containsOtherBegin && containsOtherEnd);
  }

