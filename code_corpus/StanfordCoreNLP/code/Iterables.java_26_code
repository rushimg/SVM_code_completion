  public static <T> Iterable<T> sample(Iterable<T> items, int n, int k, Random random) {

    // assemble a list of all indexes
    List<Integer> indexes = new ArrayList<Integer>();
    for (int i = 0; i < n; ++i) {
      indexes.add(i);
    }

    // shuffle the indexes and select the first k
    Collections.shuffle(indexes, random);
    final Set<Integer> indexSet = Generics.newHashSet(indexes.subList(0, k));

    // filter down to only the items at the selected indexes
    return Iterables.filter(items, new Function<T, Boolean>() {
      private int index = -1;
      public Boolean apply(T item) {
        ++this.index;
        return indexSet.contains(this.index);
      }
    });
  }

