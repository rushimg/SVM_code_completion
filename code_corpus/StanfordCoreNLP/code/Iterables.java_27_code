  //  public static <E> Collection<E> toCollection(final Iterable<E> iter) {
  //    return new AbstractCollection<E>() {
  //      int size = -1;
  //
  //      @Override
  //      public Iterator<E> iterator() {
  //        return iter.iterator();
  //      }
  //
  //      @Override
  //      public int size() {
  //        if (size < 0) {
  //          size = 0;
  //          for (E elem : iter) { size++; }
  //        }
  //        return size;
  //      }
  //    };
  //  }

  //
  //  public static <E,L extends List<E>> L toList(Iterable<E> iter, Class<L> type) {
  //    try {
  //      type.newInstance();
  //    } catch (InstantiationException e) {
  //      e.printStackTrace();
  //    } catch (IllegalAccessException e) {
  //      e.printStackTrace();
  //    }
  //  }

