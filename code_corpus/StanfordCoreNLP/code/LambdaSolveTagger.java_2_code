  //@SuppressWarnings("unused")
  //private static final boolean VERBOSE = false;


  LambdaSolveTagger(Problem p1, double eps1, byte[][] fnumArr) {
    p = p1;
    eps = eps1;
    // newtonerr = nerr1;
    lambda = new double[p1.fSize];
    // lambda_converged = new boolean[p1.fSize];
    // cdm 2008: Below line is memory hog. Is there anything we can do to avoid this square array allocation?
    probConds = new double[p1.data.xSize][p1.data.ySize];
    this.fnumArr = fnumArr;
    zlambda = new double[p1.data.xSize];
    ftildeArr = new double[p.fSize];
    initCondsZlambdaEtc();
    super.setBinary();
  }


