  public List<Tree> parseMultiple(final List<? extends List<? extends HasWord>> sentences, final int nthreads) {
    MulticoreWrapper<List<? extends HasWord>, Tree> wrapper = new MulticoreWrapper<List<? extends HasWord>, Tree>(nthreads, new ThreadsafeProcessor<List<? extends HasWord>, Tree>() {
        public Tree process(List<? extends HasWord> sentence) {
          return parse(sentence);
        }
        public ThreadsafeProcessor<List<? extends HasWord>, Tree> newInstance() {
          return this;
        }
      });
    List<Tree> trees = new ArrayList<Tree>();
    for (List<? extends HasWord> sentence : sentences) {
      wrapper.put(sentence);
      while (wrapper.peek()) {
        trees.add(wrapper.poll());
      }
    }
    wrapper.join();
    while (wrapper.peek()) {
      trees.add(wrapper.poll());
    }
    return trees;
  }

