  public class QNInfo {
    // Diagonal Options
    // Linesearch Options
    // Memory stuff
    private List<double[]> s = null;
    private List<double[]> y = null;
    private List<Double> rho = null;
    private double gamma;
    public double[] d = null;
    private int mem;
    private int maxMem = 20;
    public eScaling scaleOpt = eScaling.SCALAR;

    public QNInfo(int size) {
      s = new ArrayList<double[]>();
      y = new ArrayList<double[]>();
      rho = new ArrayList<Double>();
      gamma = 1;
      mem = size;
    }

    public QNInfo() {
      s = new ArrayList<double[]>();
      y = new ArrayList<double[]>();
      rho = new ArrayList<Double>();
      gamma = 1;
      mem = maxMem;
    }

    public QNInfo(List<double[]> sList, List<double[]> yList) {
      s = new ArrayList<double[]>();
      y = new ArrayList<double[]>();
      rho = new ArrayList<Double>();
      gamma = 1;
      setHistory(sList, yList);
    }

    public int size() {
      return s.size();
    }

    public double getRho(int ind) {
      return rho.get(ind);
    }

    public double[] getS(int ind) {
      return s.get(ind);
    }

    public double[] getY(int ind) {
      return y.get(ind);
    }

    public void useDiagonalScaling() {
      this.scaleOpt = eScaling.DIAGONAL;
    }

    public void useScalarScaling() {
      this.scaleOpt = eScaling.SCALAR;
    }

