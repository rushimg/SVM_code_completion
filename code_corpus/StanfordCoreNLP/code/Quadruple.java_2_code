  public static <T1, T2, T3, T4> Quadruple<T1, T2, T3, T4> makeQuadruple(T1 t1, T2 t2, T3 t3, T4 t4) {
    return new Quadruple<T1, T2, T3, T4>(t1, t2, t3, t4);
  }

  public List<Object> asList() {
    return CollectionUtils.makeList(first, second, third, fourth);
  }

  @SuppressWarnings("unchecked")
  @Override
  public int compareTo(Quadruple<T1, T2, T3, T4> another) {
    int comp = ((Comparable<T1>) first()).compareTo(another.first());
    if (comp != 0) {
      return comp;
    } else {
      comp = ((Comparable<T2>) second()).compareTo(another.second());
      if (comp != 0) {
        return comp;
      } else {
        comp = ((Comparable<T3>) third()).compareTo(another.third());
        if (comp != 0) {
          return comp;
        } else {
          return ((Comparable<T4>) fourth()).compareTo(another.fourth());
        }
      }
    }
  }
  
