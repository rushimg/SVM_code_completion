  public String toDotFormat(String graphname) {
    return toDotFormat(graphname, IndexedWord.WORD_TAG_INDEX_FORMAT);
  }

  public String toDotFormat(String graphname, String indexedWordFormat) {
    StringBuilder output = new StringBuilder();
    output.append("digraph " + graphname + " {\n");
    for (IndexedWord word : graph.getAllVertices()) {
      output.append("  N_" + word.index() + " [label=\"" +
                    word.toString(indexedWordFormat) +
                    "\"];\n");
    }
    for (SemanticGraphEdge edge : graph.edgeIterable()) {
      output.append("  N_" + edge.getSource().index() +
                    " -> N_" + edge.getTarget().index() +
                    " [label=\"" + edge.getRelation() + "\"];\n");
    }
    output.append("}\n");
    return output.toString();
  }

  public SemanticGraphEdge addEdge(IndexedWord s, IndexedWord d, GrammaticalRelation reln, double weight, boolean isExtra) {
    SemanticGraphEdge newEdge = new SemanticGraphEdge(s, d, reln, weight, isExtra);
    graph.add(s, d, newEdge);
    return newEdge;
  }

  // =======================================================================

