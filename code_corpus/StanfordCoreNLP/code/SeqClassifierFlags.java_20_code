  public boolean keepEmptySentences = false;
  public boolean useBilingualNERPrior = false;

  public int samplingSpeedUpThreshold = -1;
  public String entityMatrixCh = null;
  public String entityMatrixEn = null;

  public int multiThreadGibbs = 0;
  public boolean matchNERIncentive = false;

  public boolean useEmbedding = false;
  public boolean prependEmbedding = false;
  public String embeddingWords = null;
  public String embeddingVectors = null;
  public boolean transitionEdgeOnly = false;
  // L1-prior used in OWLQN
  public double priorLambda = 0;
  public boolean addCapitalFeatures = false;
  public int arbitraryInputLayerSize = -1;
  public boolean noEdgeFeature = false;
  public boolean terminateOnEvalImprovement = false;
  public int terminateOnEvalImprovementNumOfEpoch = 1;
  public boolean useMemoryEvaluator = true;
  public boolean suppressTestDebug = false;
  public boolean useOWLQN = false;
  public boolean printWeights = false;
  public int totalDataSlice = 10;
  public int numOfSlices = 0;
  public boolean regularizeSoftmaxTieParam = false;
  public double softmaxTieLambda = 0;
  public int totalFeatureSlice = 10;
  public int numOfFeatureSlices = 0;
  public boolean addBiasToEmbedding = false;
  public boolean hardcodeSoftmaxOutputWeights = false;

  public boolean useNERPriorBIO = false;
  public String entityMatrix = null;
  public int multiThreadClassifier = 0;
  public boolean useDualDecomp = false;
  public boolean biAlignmentPriorIsPMI = true;
  public boolean dampDDStepSizeWithAlignmentProb = false;
  public boolean dualDecompAlignment = false;
  public double dualDecompInitialStepSizeAlignment = 0.1;
  public boolean dualDecompNotBIO = false;
  public String berkeleyAlignerLoadPath = null;
  public boolean useBerkeleyAlignerForViterbi = false;
  public boolean useBerkeleyCompetitivePosterior = false;
  public boolean useDenero = true;
  public double alignDDAlpha = 1;
  public boolean factorInBiEdgePotential = false;
  public boolean noNeighborConstraints = false;
  public boolean includeC2EViterbi = true;
  public boolean initWithPosterior = true;
  public int nerSkipFirstK = 0;
  public int nerSlowerTimes = 1;
  public boolean powerAlignProb = false;
  public boolean powerAlignProbAsAddition = false;
  public boolean initWithNERPosterior = false;
  public boolean applyNERPenalty = true;
  public boolean printFactorTable = false;
  public boolean useAdaGradFOBOS = false;
  public double initRate = 0.1;
  public boolean groupByFeatureTemplate = false;
  public boolean groupByOutputClass = false;
  public double priorAlpha = 0;

  public String splitWordRegex = null;
  public boolean groupByInput = false;
  public boolean groupByHiddenUnit = false;

  public String unigramLM = null;
  public String bigramLM = null;
  public int wordSegBeamSize = 1000;
  public String vocabFile = null;
  public String normalizedFile = null;
  public boolean averagePerceptron = true;
  public String loadCRFSegmenterPath = null;
  public String loadPCTSegmenterPath = null;
  public String crfSegmenterProp = null;
  public String pctSegmenterProp = null;
  public String intermediateSegmenterOut = null;
  public String intermediateSegmenterModel = null;

  public int dualDecompMaxItr = 0;
  public double dualDecompInitialStepSize = 0.1;
  public boolean dualDecompDebug = false;
  public boolean useCWSWordFeatures = false;
  public boolean useCWSWordFeaturesAll = false;
  public boolean useCWSWordFeaturesBigram = false;
  public boolean pctSegmenterLenAdjust = false;
  public boolean useTrainLexicon = false;
  public boolean useCWSFeatures = true;
  public boolean appendLC = false;
  public boolean perceptronDebug = false;
  public boolean pctSegmenterScaleByCRF = false;
  public double pctSegmenterScale = 0.0;
  public boolean separateASCIIandRange = true;
  public double dropoutRate = 0.0;
  public double dropoutScale = 1.0;
  public int multiThreadGrad = 1;
  public int maxQNItr = 0;
  public boolean dropoutApprox = false;
  public String unsupDropoutFile = null;
  public double unsupDropoutScale = 1.0;
  public int startEvaluateIters = 0;
  public int multiThreadPerceptron = 1;
  public boolean lazyUpdate = false;
  public int featureCountThresh = 0;
  public transient String serializeWeightsTo = null;
  public boolean geDebug = false;
  public boolean doFeatureDiscovery = false;
  public transient String loadWeightsFrom = null;
  public transient String loadClassIndexFrom = null;
  public transient String serializeClassIndexTo = null;
  public boolean learnCHBasedOnEN = true;
  public boolean learnENBasedOnCH = false;
  public String loadWeightsFromEN = null;
  public String loadWeightsFromCH = null;
  public String serializeToEN = null;
  public String serializeToCH = null;
  public String testFileEN = null;
  public String testFileCH = null;
  public String unsupFileEN = null;
  public String unsupFileCH = null;
  public String unsupAlignFile = null;
  public String supFileEN = null;
  public String supFileCH = null;
  public transient String serializeFeatureIndexTo = null;
  public String loadFeatureIndexFromEN = null;
  public String loadFeatureIndexFromCH = null;
  public double lambdaEN = 1.0;
  public double lambdaCH = 1.0;
  public boolean alternateTraining = false;
  public boolean weightByEntropy = false;
  public boolean useKL = false;
  public boolean useHardGE = false;
  public boolean useCRFforUnsup = false;
  public boolean useGEforSup = false;
  public boolean useKnownLCWords = true;
  // allow for multiple feature factories.
  public String[] featureFactories = null;
  public List<Object[]> featureFactoriesArgs = null;
  public boolean useNoisyLabel = false;
  public String errorMatrix = null;
  public boolean printTrainLabels = false;

  // Inference label dictionary cutoff
  public int labelDictionaryCutoff = -1;

  public boolean useAdaDelta = false;
  public boolean useAdaDiff = false;
  public double adaGradEps = 1e-3;
  public double adaDeltaRho = 0.95;

  public boolean useRandomSeed = false;
  public boolean terminateOnAvgImprovement = false;

  public boolean strictGoodCoNLL = false;
  public boolean removeStrictGoodCoNLLDuplicates = false;

  // "ADD VARIABLES ABOVE HERE"


  public transient List<String> phraseGazettes = null;
  public transient Properties props = null;


  public SeqClassifierFlags() {
  }

