  public static SsurgPred assemblePredFromXML(Element elt) throws Exception {
    String eltName = elt.getTagName();
    if (eltName.equals(SsurgeonPattern.PREDICATE_AND_TAG)) {
      SsurgAndPred andPred = new SsurgAndPred();
      for (Element childElt : getChildElements(elt)) {
        SsurgPred childPred = assemblePredFromXML(childElt);
        andPred.add(childPred);
        return andPred;
      }
    } else if (eltName.equals(SsurgeonPattern.PREDICATE_OR_TAG)) {
      SsurgOrPred orPred = new SsurgOrPred();
      for (Element childElt : getChildElements(elt)) {
        SsurgPred childPred = assemblePredFromXML(childElt);
        orPred.add(childPred);
        return orPred;
      }
    } else if (eltName.equals(SsurgeonPattern.PRED_WORDLIST_TEST_TAG)) {
      String id = elt.getAttribute(SsurgeonPattern.PRED_ID_ATTR);
      String resourceID = elt.getAttribute("resourceID");
      String typeStr = elt.getAttribute("type");
      String matchName = getEltText(elt).trim(); // node name to match on
      if (matchName == null) {
        throw new Exception("Could not find match name for "+elt.toString());
      }
      if (id == null) {
        throw new Exception("No ID attribute for element = "+elt.toString());
      }
      return new WordlistTest(id, resourceID, typeStr, matchName);
    }
    
    // Not a valid node, error out!
    throw new Exception("Invalid node encountered during Ssurgeon predicate processing, node name="+eltName);
  }
  
  
  
