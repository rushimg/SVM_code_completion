// TODO: can we break this class up in some way?  Perhaps we can
// spread some functionality into TestSentence and some into MaxentTagger
// TODO: at the very least, it doesn't seem to make sense to make it
// an object with state, rather than just some static methods
public class TestClassifier {

  private final TaggedFileRecord fileRecord;
  private int numRight;
  private int numWrong;
  private int unknownWords;
  private int numWrongUnknown;
  private int numCorrectSentences;
  private int numSentences;

  private ConfusionMatrix<String> confusionMatrix;

  // TODO: only one boolean here instead of 4?  They all use the same
  // debug status
  private boolean writeUnknDict;
  private boolean writeWords;
  private boolean writeTopWords;
  private boolean writeConfusionMatrix;

  MaxentTagger maxentTagger;
  TaggerConfig config;
  String saveRoot;

  public TestClassifier(MaxentTagger maxentTagger) throws IOException {
    this(maxentTagger, maxentTagger.config.getFile());
  }

  public TestClassifier(MaxentTagger maxentTagger, String testFile) throws IOException {
    this.maxentTagger = maxentTagger;
    this.config = maxentTagger.config;
    setDebug(config.getDebug());

    fileRecord = TaggedFileRecord.createRecord(config, testFile);

    saveRoot = config.getDebugPrefix();
    if (saveRoot == null || saveRoot.equals("")) {
      saveRoot = fileRecord.filename();
    }

    test();

    if (writeConfusionMatrix) {
      PrintFile pf = new PrintFile(saveRoot + ".confusion");
      pf.print(confusionMatrix.toString());
      pf.close();
    }
  }

  private void processResults(TestSentence testS,
                              PrintFile wordsFile, PrintFile unknDictFile,
                              PrintFile topWordsFile, boolean verboseResults) {
    numSentences++;

    testS.writeTagsAndErrors(testS.finalTags, unknDictFile, verboseResults);
    if (writeUnknDict) testS.printUnknown(numSentences, unknDictFile);
    if (writeTopWords) testS.printTop(topWordsFile);

    testS.updateConfusionMatrix(testS.finalTags, confusionMatrix);

    numWrong = numWrong + testS.numWrong;
    numRight = numRight + testS.numRight;
    unknownWords = unknownWords + testS.numUnknown;
    numWrongUnknown = numWrongUnknown + testS.numWrongUnknown;
    if (testS.numWrong == 0) {
      numCorrectSentences++;
    }
    if (verboseResults) {
      System.err.println("Sentence number: " + numSentences + "; length " + (testS.size-1) +
                         "; correct: " + testS.numRight + "; wrong: " + testS.numWrong +
                         "; unknown wrong: " + testS.numWrongUnknown);
      System.err.println("  Total tags correct: " + numRight + "; wrong: " + numWrong +
                         "; unknown wrong: " + numWrongUnknown);
    }
  }

