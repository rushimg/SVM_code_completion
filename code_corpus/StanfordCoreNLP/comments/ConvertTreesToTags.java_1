/**
 * A short utility program that dumps out trees from multiple files
 * into one file of tagged text.  Useful for combining many parse tree
 * training files into one tagger training file, since the tagger
 * doesn't have convenient ways of reading in an entire directory.
 * <br>
 * There are a few command line arguments available:
 * <table>
 * <tr>
 * <td> -output &lt;filename&gt; </td>
 * <td> File to output the data to </td>
 * </tr>
 * <tr>
 * <td> -tagSeparator &lt;separator&gt; </td>
 * <td> Separator to use between word and tag </td>
 * </tr>
 * <tr>
 * <td> -treeRange &lt;range&gt; </td>
 * <td> If tree files have numbers, they will be filtered out if not
 *      in this range.  Can be null. </td>
 * </tr>
 * <tr>
 * <td> -inputEncoding &lt;encoding&gt; </td>
 * <td> Encoding to use when reading tree files </td>
 * </tr>
 * <tr>
 * <td> -outputEncoding &lt;encoding&gt; </td>
 * <td> Encoding to use when writing tags </td>
 * </tr>
 * <tr>
 * <td> -treeFilter &lt;classname&gt; </td>
 * <td> A Filter&lt;Tree&gt; to load by reflection which eliminates 
 *      trees from the data read </td>
 * </tr>
 * <tr>
 * <td> -noTags </td>
 * <td> If present, will only output the words, no tags at all
 * </tr>
 * <tr>
 * <td> -noSpaces </td>
 * <td> If present, words will be concatenated together </td>
 * </tr>
 * </table>
 *
 * All other arguments will be treated as filenames to read.
 *
 * @author John Bauer
 */
