  /**
   * Creates a <code>FileSequentialCollection</code> from the passed in
   * <code>Collection</code>.  The constructor iterates through the
   * collection.  For each element, if it is a <code>File</code> or
   * <code>String</code> then these file paths are processed as
   * explained below.
   * If the argument is of some other type, an
   * <code>IllegalArgumentException</code> is thrown.  For the files
   * specified, if they are not directories, they are included in the
   * collection.  If they are directories, files inside them are
   * included iff they match the <code>FileFilter</code>.  This will
   * include recursive directory descent iff the <code>FileFilter</code>
   * accepts directories.
   * If the path is a directory then only
   * files within the directory (perhaps recursively) that satisfy the
   * filter are processed.  If the <code>path</code>is a file, then
   * that file is processed regardless of whether it satisfies the
   * filter.  (This semantics was adopted, since otherwise there was no
   * easy way to go through all the files in a directory without
   * descending recursively via the specification of a
   * <code>FileFilter</code>.)
   *
   * @param c    The collection of file or directory to load from
   * @param filt A FileFilter of files to load.  This may be
   *             <code>null</code>, in which case all files are accepted.
   */
