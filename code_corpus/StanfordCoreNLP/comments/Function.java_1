/**
 * An interface for classes that act as a function transforming one object
 * to another.
 * <p>
 * <i>Implementation note:</i> A function by itself is not serializable.
 * We do however also provide an interface
 * {@link edu.stanford.nlp.process.SerializableFunction} for
 * the common case of a function that should be Serializable.
 *
 * @author Dan Klein
 * @param <T1> The domain of the function
 * @param <T2> The range of the function
 */
