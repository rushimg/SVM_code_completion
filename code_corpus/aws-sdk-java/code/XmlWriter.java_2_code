public class XmlWriter {
    List<String> tags = new ArrayList<String>();
    StringBuilder sb = new StringBuilder();

    public XmlWriter start(String name) {
        sb.append("<").append(name).append(">");
        tags.add(name);
        return this;
    }

    public XmlWriter start(String name, String attr, String value) {
        sb.append("<").append(name);
        writeAttr(attr, value);
        sb.append(">");
        tags.add(name);
        return this;
    }

    public XmlWriter start(String name, String[] attrs, String[] values) {
        sb.append("<").append(name);
        for (int i = 0; i < Math.min(attrs.length, values.length); i++) {
            writeAttr(attrs[i], values[i]);
        }
        sb.append(">");
        tags.add(name);
        return this;
    }

    public XmlWriter end() {
        assert(tags.size() > 0);
        String name = tags.remove(tags.size() - 1);
        sb.append("</").append(name).append(">");
        return this;
    }

    public byte[] getBytes() {
        assert(tags.size() == 0);
        try {
            return this.toString().getBytes(Constants.DEFAULT_ENCODING);
        } catch (UnsupportedEncodingException e) {
            return this.toString().toString().getBytes();
        }
    }

    public String toString() {
        return sb.toString();
    }

    public XmlWriter value(String value) {
        appendEscapedString(value, sb);
        return this;
    }

    private void writeAttr(String name, String value) {
        sb.append(' ').append(name).append("=\"");
        appendEscapedString(value, sb);
        sb.append("\"");
    }

