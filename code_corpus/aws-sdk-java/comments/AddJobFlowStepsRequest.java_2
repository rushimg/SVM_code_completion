/**
 * Container for the parameters to the {@link com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduce#addJobFlowSteps(AddJobFlowStepsRequest) AddJobFlowSteps operation}.
 * <p>
 * AddJobFlowSteps adds new steps to a running job flow. A maximum of 256 steps are allowed in each job flow.
 * </p>
 * <p>
 * If your job flow is long-running (such as a Hive data warehouse) or complex, you may require more than 256 steps to process your data. You can bypass
 * the 256-step limitation in various ways, including using the SSH shell to connect to the master node and submitting queries directly to the software
 * running on the master node, such as Hive and Hadoop. For more information on how to do this, go to <a
 * href="http://docs.aws.amazon.com/ElasticMapReduce/latest/DeveloperGuide/AddMoreThan256Steps.html"> Add More than 256 Steps to a Job Flow </a> in the
 * <i>Amazon Elastic MapReduce Developer's Guide</i> .
 * </p>
 * <p>
 * A step specifies the location of a JAR file stored either on the master node of the job flow or in Amazon S3. Each step is performed by the main
 * function of the main class of the JAR file. The main class can be specified either in the manifest of the JAR or by using the MainFunction parameter
 * of the step.
 * </p>
 * <p>
 * Elastic MapReduce executes each step in the order listed. For a step to be considered complete, the main function must exit with a zero exit code and
 * all Hadoop jobs started while the step was running must have completed and run successfully.
 * </p>
 * <p>
 * You can only add steps to a job flow that is in one of the following states: STARTING, BOOTSTRAPPING, RUNNING, or WAITING.
 * </p>
 *
 * @see com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduce#addJobFlowSteps(AddJobFlowStepsRequest)
 */
