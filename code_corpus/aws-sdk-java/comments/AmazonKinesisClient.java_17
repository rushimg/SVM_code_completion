    /**
     * <p>
     * This operation deletes a stream and all of its shards and data. You
     * must shut down any applications that are operating on the stream
     * before you delete the stream. If an application attempts to operate on
     * a deleted stream, it will receive the exception
     * <code>ResourceNotFoundException</code> .
     * </p>
     * <p>
     * If the stream is in the ACTIVE state, you can delete it. After a
     * <code>DeleteStream</code> request, the specified stream is in the
     * DELETING state until Amazon Kinesis completes the deletion.
     * </p>
     * <p>
     * <b>Note:</b> Amazon Kinesis might continue to accept data read and
     * write operations, such as PutRecord and GetRecords, on a stream in the
     * DELETING state until the stream deletion is complete.
     * </p>
     * <p>
     * When you delete a stream, any shards in that stream are also deleted.
     * </p>
     * <p>
     * You can use the DescribeStream operation to check the state of the
     * stream, which is returned in <code>StreamStatus</code> .
     * </p>
     * <p>
     * <code>DeleteStream</code> has a limit of 5 transactions per second
     * per account.
     * </p>
     *
     * @param deleteStreamRequest Container for the necessary parameters to
     *           execute the DeleteStream service method on AmazonKinesis.
     * 
     * 
     * @throws LimitExceededException
     * @throws ResourceNotFoundException
     *
     * @throws AmazonClientException
     *             If any internal errors are encountered inside the client while
     *             attempting to make the request or handle the response.  For example
     *             if a network connection is not available.
     * @throws AmazonServiceException
     *             If an error response is returned by AmazonKinesis indicating
     *             either a problem with the data in the request, or a server side issue.
     */
