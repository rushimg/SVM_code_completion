/**
 * Container for the parameters to the {@link com.amazonaws.services.securitytoken.AWSSecurityTokenService#assumeRoleWithSAML(AssumeRoleWithSAMLRequest) AssumeRoleWithSAML operation}.
 * <p>
 * Returns a set of temporary security credentials for users who have been authenticated via a SAML authentication response. This operation provides a
 * mechanism for tying an enterprise identity store or directory to role-based AWS access without user-specific credentials or configuration.
 * </p>
 * <p>
 * The temporary security credentials returned by this operation consist of an access key ID, a secret access key, and a security token. Applications
 * can use these temporary security credentials to sign calls to AWS services. The credentials are valid for the duration that you specified when calling
 * <code>AssumeRoleWithSAML</code> , which can be up to 3600 seconds (1 hour) or until the time specified in the SAML authentication response's
 * <code>NotOnOrAfter</code> value, whichever is shorter.
 * </p>
 * <p>
 * <b>NOTE:</b>The maximum duration for a session is 1 hour, and the minimum duration is 15 minutes, even if values outside this range are specified.
 * </p>
 * <p>
 * Optionally, you can pass an AWS IAM access policy to this operation. The temporary security credentials that are returned by the operation have the
 * permissions that are associated with the access policy of the role being assumed, except for any permissions explicitly denied by the policy you pass.
 * This gives you a way to further restrict the permissions for the federated user. These policies and any applicable resource-based policies are
 * evaluated when calls to AWS are made using the temporary security credentials.
 * </p>
 * <p>
 * Before your application can call <code>AssumeRoleWithSAML</code> , you must configure your SAML identity provider (IdP) to issue the claims required
 * by AWS. Additionally, you must use AWS Identity and Access Management (AWS IAM) to create a SAML provider entity in your AWS account that represents
 * your identity provider, and create an AWS IAM role that specifies this SAML provider in its trust policy.
 * </p>
 * <p>
 * Calling <code>AssumeRoleWithSAML</code> does not require the use of AWS security credentials. The identity of the caller is validated by using keys
 * in the metadata document that is uploaded for the SAML provider entity for your identity provider.
 * </p>
 * <p>
 * For more information, see the following resources:
 * </p>
 * 
 * <ul>
 * <li> <a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingSAML.html"> Creating Temporary Security Credentials for SAML Federation </a> in
 * the <i>Using Temporary Security Credentials</i> guide. </li>
 * <li> <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/idp-managing-identityproviders.html"> SAML Providers </a> in the <i>Using IAM</i>
 * guide. </li>
 * <li> <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml-IdP-tasks.html"> Configuring a Relying Party and Claims in the Using
 * IAM guide. </a> </li>
 * <li> <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml.html"> Creating a Role for SAML-Based Federation </a> in the <i>Using
 * IAM</i> guide. </li>
 * 
 * </ul>
 * <p>
 * </p>
 * <p>
 * </p>
 * <p>
 * </p>
 * <p>
 * </p>
 *
 * @see com.amazonaws.services.securitytoken.AWSSecurityTokenService#assumeRoleWithSAML(AssumeRoleWithSAMLRequest)
 */
