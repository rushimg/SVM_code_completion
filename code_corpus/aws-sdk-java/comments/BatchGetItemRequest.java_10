    /**
     * A map of one or more table names and, for each table, the
     * corresponding primary keys for the items to retrieve. Each table name
     * can be invoked only once. <p>Each element in the map consists of the
     * following: <ul> <li> <p><i>Keys</i> - An array of primary key
     * attribute values that define specific items in the table. </li> <li>
     * <p><i>AttributesToGet</i> - One or more attributes to be retrieved
     * from the table or index. By default, all attributes are returned. If a
     * specified attribute is not found, it does not appear in the result.
     * </li> <li> <p><i>ConsistentRead</i> - If <code>true</code>, a strongly
     * consistent read is used; if <code>false</code> (the default), an
     * eventually consistent read is used. </li> </ul>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b>1 - 100<br/>
     *
     * @param requestItems A map of one or more table names and, for each table, the
     *         corresponding primary keys for the items to retrieve. Each table name
     *         can be invoked only once. <p>Each element in the map consists of the
     *         following: <ul> <li> <p><i>Keys</i> - An array of primary key
     *         attribute values that define specific items in the table. </li> <li>
     *         <p><i>AttributesToGet</i> - One or more attributes to be retrieved
     *         from the table or index. By default, all attributes are returned. If a
     *         specified attribute is not found, it does not appear in the result.
     *         </li> <li> <p><i>ConsistentRead</i> - If <code>true</code>, a strongly
     *         consistent read is used; if <code>false</code> (the default), an
     *         eventually consistent read is used. </li> </ul>
     */
