/**
 * Container for the parameters to the {@link com.amazonaws.services.securitytoken.AWSSecurityTokenService#decodeAuthorizationMessage(DecodeAuthorizationMessageRequest) DecodeAuthorizationMessage operation}.
 * <p>
 * Decodes additional information about the authorization status of a request from an encoded message returned in response to an AWS request.
 * </p>
 * <p>
 * For example, if a user is not authorized to perform an action that he or she has requested, the request returns a
 * <code>Client.UnauthorizedOperation</code> response (an HTTP 403 response). Some AWS actions additionally return an encoded message that can provide
 * details about this authorization failure.
 * </p>
 * <p>
 * <b>NOTE:</b> Only certain AWS actions return an encoded authorization message. The documentation for an individual action indicates whether that
 * action returns an encoded message in addition to returning an HTTP code.
 * </p>
 * <p>
 * The message is encoded because the details of the authorization status can constitute privileged information that the user who requested the action
 * should not see. To decode an authorization status message, a user must be granted permissions via an AWS IAM policy to request the
 * <code>DecodeAuthorizationMessage</code> (
 * <code>sts:DecodeAuthorizationMessage</code> ) action.
 * </p>
 * <p>
 * The decoded message includes the following type of information:
 * </p>
 * 
 * <ul>
 * <li>Whether the request was denied due to an explicit deny or due to the absence of an explicit allow. For more information, see <a
 * href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AccessPolicyLanguage_EvaluationLogic.html#policy-eval-denyallow"> Determining Whether a Request
 * is Allowed or Denied </a> in <i>Using AWS IAM</i> . </li>
 * <li>The principal who made the request.</li>
 * <li>The requested action.</li>
 * <li>The requested resource.</li>
 * <li>The values of condition keys in the context of the user's request.</li>
 * 
 * </ul>
 *
 * @see com.amazonaws.services.securitytoken.AWSSecurityTokenService#decodeAuthorizationMessage(DecodeAuthorizationMessageRequest)
 */
