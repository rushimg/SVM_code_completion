    /**
     * Specifies the protocol to use for routing traffic to back-end
     * instances - HTTP, HTTPS, TCP, or SSL. This property cannot be modified
     * for the life of the load balancer. <note> If the front-end protocol is
     * HTTP or HTTPS, <code>InstanceProtocol</code> has to be at the same
     * protocol layer, i.e., HTTP or HTTPS. Likewise, if the front-end
     * protocol is TCP or SSL, InstanceProtocol has to be TCP or SSL. </note>
     * <note> If there is another listener with the same
     * <code>InstancePort</code> whose <code>InstanceProtocol</code> is
     * secure, i.e., HTTPS or SSL, the listener's
     * <code>InstanceProtocol</code> has to be secure, i.e., HTTPS or SSL. If
     * there is another listener with the same <code>InstancePort</code>
     * whose <code>InstanceProtocol</code> is HTTP or TCP, the listener's
     * <code>InstanceProtocol</code> must be either HTTP or TCP. </note>
     *
     * @return Specifies the protocol to use for routing traffic to back-end
     *         instances - HTTP, HTTPS, TCP, or SSL. This property cannot be modified
     *         for the life of the load balancer. <note> If the front-end protocol is
     *         HTTP or HTTPS, <code>InstanceProtocol</code> has to be at the same
     *         protocol layer, i.e., HTTP or HTTPS. Likewise, if the front-end
     *         protocol is TCP or SSL, InstanceProtocol has to be TCP or SSL. </note>
     *         <note> If there is another listener with the same
     *         <code>InstancePort</code> whose <code>InstanceProtocol</code> is
     *         secure, i.e., HTTPS or SSL, the listener's
     *         <code>InstanceProtocol</code> has to be secure, i.e., HTTPS or SSL. If
     *         there is another listener with the same <code>InstancePort</code>
     *         whose <code>InstanceProtocol</code> is HTTP or TCP, the listener's
     *         <code>InstanceProtocol</code> must be either HTTP or TCP. </note>
     */
