/**
 * @Workflow annotation is allowed on interfaces to define a workflow.  This 
 * interface forms the contract between the implementation of WorkflowType 
 * and clients interested in starting executions, sending signals, and getting
 * current state of execution.
 * 
 * Use {@link Execute} annotation on the method to mark it as the entry-point 
 * for WorkflowType.  @Workflow interface cannot have more than one method marked
 * with {@link Execute} annotation.
 * 
 * Use {@link Signal} annotation on the methods to mark them as signals 
 * supported by WorkflowType.  @Workflow interface can have zero or more methods
 * marked with {@link Signal} annotation.
 * 
 * Use {@link GetState} annotation on the method which framework will use to 
 * update the current workflow state for WorkflowType.  @Workflow interface 
 * cannot have more than one method marked with {@link GetState} annotation. 
 * 
 * {@link Execute}, {@link Signal} and {@link GetState} annotations are mutually
 * exclusive and cannot be used simultaneously on a method.  AWS Flow Framework
 * annotation processor will auto-generate three different clients which can 
 * be used to start new executions, sending signals and retrieving workflow states 
 * for different situations. 
 * 
 * @see DecisionContext
 * @author fateev, samar
 * 
 */
