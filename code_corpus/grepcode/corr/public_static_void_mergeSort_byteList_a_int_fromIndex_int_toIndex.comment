/**
     * Sorts the specified range of the specified array of elements.
     * 
     * <p>
     * This sort is guaranteed to be <i>stable</i>: equal elements will not be
     * reordered as a result of the sort.
     * <p>
     * 
     * The sorting algorithm is a modified mergesort (in which the merge is
     * omitted if the highest element in the low sublist is less than the lowest
     * element in the high sublist). This algorithm offers guaranteed n*log(n)
     * performance, and can approach linear performance on nearly sorted lists.
     * 
     * @param a
     *            the array to be sorted.
     * @param fromIndex
     *            the index of the first element (inclusive) to be sorted.
     * @param toIndex
     *            the index of the last element (exclusive) to be sorted.
     * @throws IllegalArgumentException
     *             if <tt>fromIndex &gt; toIndex</tt>
     * @throws ArrayIndexOutOfBoundsException
     *             if <tt>fromIndex &lt; 0</tt> or
     *             <tt>toIndex &gt; a.length</tt>
     */