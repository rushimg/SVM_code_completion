public final class FutureRequestExecutionMetrics {

    private final AtomicLong activeConnections = new AtomicLong();
    private final AtomicLong scheduledConnections = new AtomicLong();
    private final DurationCounter successfulConnections = new DurationCounter();
    private final DurationCounter failedConnections = new DurationCounter();
    private final DurationCounter requests = new DurationCounter();
    private final DurationCounter tasks = new DurationCounter();

    FutureRequestExecutionMetrics() {
    }

    AtomicLong getActiveConnections() {
        return activeConnections;
    }

    AtomicLong getScheduledConnections() {
        return scheduledConnections;
    }

    DurationCounter getSuccessfulConnections() {
        return successfulConnections;
    }

    DurationCounter getFailedConnections() {
        return failedConnections;
    }

    DurationCounter getRequests() {
        return requests;
    }

    DurationCounter getTasks() {
        return tasks;
    }

    public long getActiveConnectionCount() {
        return activeConnections.get();
    }

    public long getScheduledConnectionCount() {
        return scheduledConnections.get();
    }

    public long getSuccessfulConnectionCount() {
        return successfulConnections.count();
    }

    public long getSuccessfulConnectionAverageDuration() {
        return successfulConnections.averageDuration();
    }

    public long getFailedConnectionCount() {
        return failedConnections.count();
    }

    public long getFailedConnectionAverageDuration() {
        return failedConnections.averageDuration();
    }

    public long getRequestCount() {
        return requests.count();
    }

    public long getRequestAverageDuration() {
        return requests.averageDuration();
    }

    public long getTaskCount() {
        return tasks.count();
    }

    public long getTaskAverageDuration() {
        return tasks.averageDuration();
    }

    @Override
    public String toString() {
        final StringBuilder builder = new StringBuilder();
        builder.append("[activeConnections=").append(activeConnections)
                .append(", scheduledConnections=").append(scheduledConnections)
                .append(", successfulConnections=").append(successfulConnections)
                .append(", failedConnections=").append(failedConnections)
                .append(", requests=").append(requests)
                .append(", tasks=").append(tasks)
                .append("]");
        return builder.toString();
    }

