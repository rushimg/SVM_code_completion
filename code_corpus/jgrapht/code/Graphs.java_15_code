    public static <V, E> UndirectedGraph<V, E> undirectedGraph(Graph<V, E> g)
    {
        if (g instanceof DirectedGraph<?, ?>) {
            return new AsUndirectedGraph<V, E>((DirectedGraph<V, E>) g);
        } else if (g instanceof UndirectedGraph<?, ?>) {
            return (UndirectedGraph<V, E>) g;
        } else {
            throw new IllegalArgumentException(
                "Graph must be either DirectedGraph or UndirectedGraph");
        }
    }

