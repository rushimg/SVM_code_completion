    public static <V,E> Factory<Graph<V,E>> getFactory() 
    { 
        return new Factory<Graph<V,E>> () 
        {
            public Graph<V,E> create() 
            {
                return new SparseGraph<V,E>();
            }
        };
    }

    protected static final int INCOMING = 0;
    protected static final int OUTGOING = 1;
    protected static final int INCIDENT = 2;
    
    protected Map<V, Map<V,E>[]> vertex_maps; // Map of vertices to adjacency maps of vertices to {incoming, outgoing, incident} edges
    protected Map<E, Pair<V>> directed_edges;    // Map of directed edges to incident vertex sets
    protected Map<E, Pair<V>> undirected_edges;    // Map of undirected edges to incident vertex sets
    
