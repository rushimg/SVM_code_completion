	public static <V,E> Factory<Graph<V,E>> getFactory() { 
		return new Factory<Graph<V,E>> () {
			public Graph<V,E> create() {
				return new SparseMultigraph<V,E>();
			}
		};
	}
    
    // TODO: refactor internal representation: right now directed edges each have two references (in vertices and directedEdges)
    // and undirected also have two (incoming and outgoing).  
    protected Map<V, Pair<Set<E>>> vertices; // Map of vertices to Pair of adjacency sets {incoming, outgoing}
    protected Map<E, Pair<V>> edges;            // Map of edges to incident vertex pairs
    protected Set<E> directedEdges;

