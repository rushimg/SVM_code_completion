		public synchronized boolean containsVertex(V vertex) {
			return delegate.containsVertex(vertex);
		}
        
	}
	
	@SuppressWarnings("serial")
    static class SynchronizedGraph<V,E> extends SynchronizedAbstractGraph<V,E> implements Serializable {
		
		private SynchronizedGraph(Graph<V,E> delegate) {
			super(delegate);
		}
	}
	
	@SuppressWarnings("serial")
    static class SynchronizedUndirectedGraph<V,E> extends SynchronizedAbstractGraph<V,E> 
		implements UndirectedGraph<V,E>, Serializable {
		private SynchronizedUndirectedGraph(UndirectedGraph<V,E> delegate) {
			super(delegate);
		}
	}
	
	@SuppressWarnings("serial")
    static class SynchronizedDirectedGraph<V,E> extends SynchronizedAbstractGraph<V,E> 
		implements DirectedGraph<V,E>, Serializable {
		
		private SynchronizedDirectedGraph(DirectedGraph<V,E> delegate) {
			super(delegate);
		}

		@Override
	    public synchronized V getDest(E directed_edge) {
			return ((DirectedGraph<V,E>)delegate).getDest(directed_edge);
		}

		@Override
    	public synchronized V getSource(E directed_edge) {
			return ((DirectedGraph<V,E>)delegate).getSource(directed_edge);
		}

		@Override
	    public synchronized boolean isDest(V vertex, E edge) {
			return ((DirectedGraph<V,E>)delegate).isDest(vertex, edge);
		}

		@Override
    	public synchronized boolean isSource(V vertex, E edge) {
			return ((DirectedGraph<V,E>)delegate).isSource(vertex, edge);
		}
	}
	
	@SuppressWarnings("serial")
    static class SynchronizedTree<V,E> extends SynchronizedForest<V,E> implements Tree<V,E> {

