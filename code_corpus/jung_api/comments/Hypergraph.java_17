    /**
     * Removes <code>vertex</code> from this graph.
     * As a side effect, removes any edges <code>e</code> incident to <code>vertex</code> if the 
     * removal of <code>vertex</code> would cause <code>e</code> to be incident to an illegal
     * number of vertices.  (Thus, for example, incident hyperedges are not removed, but 
     * incident edges--which must be connected to a vertex at both endpoints--are removed.) 
     * 
     * <p>Fails under the following circumstances:
     * <ul>
     * <li/><code>vertex</code> is not an element of this graph
     * <li/><code>vertex</code> is <code>null</code>
     * </ul>
     * 
     * @param vertex the vertex to remove
     * @return <code>true</code> if the removal is successful, <code>false</code> otherwise
     */
