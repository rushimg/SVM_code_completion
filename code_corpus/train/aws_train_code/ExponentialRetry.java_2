/**
 * This annotation can be used for retrying failures on any asynchronous executions.
 * <p>
 * For retrying based on dynamic retry policy use {@link RetryDecorator}.
 * Both @ExponentialRetry annotation and {@link RetryDecorator} should not be
 * used simultaneously on the same asynchronous method call.
 * <p>
 * To allow retries for an individual activity, place the annotation on the desired 
 * activity method in the corresponding @Activities <b>interface</b>.  Since a new
 * activity instance is started per retry, any timeouts configured on the 
 * @ActivityRegistrationOptions apply to each individual retry of the activity.
 * <p>
 * To allow retries for an entire workflow, place the annotation on the override
 * of the workflow's @Execute method in the @Workflow's <b>implementation</b>
 * (rather than on the interface).  Since the same workflow instance is reused 
 * for each retry, any timeouts configured on the @WorkflowRegistrationOptions 
 * apply to the total time of the workflow over all retries.
 * 
 * @author fateev, samar
 *
 */
