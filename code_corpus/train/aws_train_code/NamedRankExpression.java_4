    /**
     * The expression to evaluate for ranking or thresholding while
     * processing a search request. The <code>RankExpression</code> syntax is
     * based on JavaScript expressions and supports:<ul> <li>Integer,
     * floating point, hex and octal literals</li> <li>Shortcut evaluation of
     * logical operators such that an expression <code>a || b</code>
     * evaluates to the value <code>a</code> if <code>a</code> is
     * <code>true</code> without evaluting <code>b</code> at all</li>
     * <li>JavaScript order of precendence for operators</li> <li>Arithmetic
     * operators: <code>+ - * / %</code></li> <li>Boolean operators
     * (including the ternary operator)</li> <li>Bitwise operators</li>
     * <li>Comparison operators</li> <li>Common mathematic functions:
     * <code>abs ceil erf exp floor lgamma ln log2 log10 max min sqrt
     * pow</code></li> <li>Trigonometric library functions: <code>acosh acos
     * asinh asin atanh atan cosh cos sinh sin tanh tan</code></li>
     * <li>Random generation of a number between 0 and 1:
     * <code>rand</code></li> <li>Current time in epoch:
     * <code>time</code></li> <li>The <code>min max</code> functions that
     * operate on a variable argument list</li> </ul> <p>Intermediate results
     * are calculated as double precision floating point values. The final
     * return value of a <code>RankExpression</code> is automatically
     * converted from floating point to a 32-bit unsigned integer by rounding
     * to the nearest integer, with a natural floor of 0 and a ceiling of
     * max(uint32_t), 4294967295. Mathematical errors such as dividing by 0
     * will fail during evaluation and return a value of 0. <p>The source
     * data for a <code>RankExpression</code> can be the name of an
     * <code>IndexField</code> of type uint, another
     * <code>RankExpression</code> or the reserved name
     * <i>text_relevance</i>. The text_relevance source is defined to return
     * an integer from 0 to 1000 (inclusive) to indicate how relevant a
     * document is to the search request, taking into account repetition of
     * search terms in the document and proximity of search terms to each
     * other in each matching <code>IndexField</code> in the document. <p>For
     * more information about using rank expressions to customize ranking,
     * see the Amazon CloudSearch Developer Guide.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b>1 - 10240<br/>
     */
