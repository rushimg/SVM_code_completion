    /**
     * Optional parameter. It will have one valid value: "json". If this
     * option, Message is present and set to "json", the value of Message
     * must: be a syntactically valid JSON object. It must contain at least a
     * top level JSON key of "default" with a value that is a string. For any
     * other top level key that matches one of our transport protocols (e.g.
     * "http"), then the corresponding value (if it is a string) will be used
     * for the message published for that protocol <p>Constraints: Keys in
     * the JSON object that correspond to supported transport protocols must
     * have simple JSON string values. The values will be parsed (unescaped)
     * before they are used in outgoing messages. Typically, outbound
     * notifications are JSON encoded (meaning, the characters will be
     * reescaped for sending). JSON strings are UTF-8. Values have a minimum
     * length of 0 (the empty string, "", is allowed). Values have a maximum
     * length bounded by the overall message size (so, including multiple
     * protocols may limit message sizes). Non-string values will cause the
     * key to be ignored. Keys that do not correspond to supported transport
     * protocols will be ignored. Duplicate keys are not allowed. Failure to
     * parse or validate any key or value in the message will cause the
     * Publish call to return an error (no partial delivery).
     *
     * @param messageStructure Optional parameter. It will have one valid value: "json". If this
     *         option, Message is present and set to "json", the value of Message
     *         must: be a syntactically valid JSON object. It must contain at least a
     *         top level JSON key of "default" with a value that is a string. For any
     *         other top level key that matches one of our transport protocols (e.g.
     *         "http"), then the corresponding value (if it is a string) will be used
     *         for the message published for that protocol <p>Constraints: Keys in
     *         the JSON object that correspond to supported transport protocols must
     *         have simple JSON string values. The values will be parsed (unescaped)
     *         before they are used in outgoing messages. Typically, outbound
     *         notifications are JSON encoded (meaning, the characters will be
     *         reescaped for sending). JSON strings are UTF-8. Values have a minimum
     *         length of 0 (the empty string, "", is allowed). Values have a maximum
     *         length bounded by the overall message size (so, including multiple
     *         protocols may limit message sizes). Non-string values will cause the
     *         key to be ignored. Keys that do not correspond to supported transport
     *         protocols will be ignored. Duplicate keys are not allowed. Failure to
     *         parse or validate any key or value in the message will cause the
     *         Publish call to return an error (no partial delivery).
     */
