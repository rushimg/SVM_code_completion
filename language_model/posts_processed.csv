24346893	[u'kill\\Workspace\\hawickjames\\src\\main\\java\\com\\lzkill\\main\\CountElementaryCircuitsFromRFC', u'apache', u'apache', u'0', u'lzkill</groupId>', u'0', u'', u'', u'', u'build', u'jgrapht</groupId>', u'9', u'11</version>', u'apache', u'3', u'apache', u'3', u'6</source>', u'6</target>', u'apache', u'12</version>', u'apache', u'9', u'']	I'm trying to run a JUnit test in Travis CI using Maven, but every attempt makes me face the same error:[ERROR] \luiz.kill\Workspace\hawickjames\src\main\java\com\lzkill\main\CountElementaryCircuitsFromRFC.java:[3,24] error: package org.jgrapht.graph does not existI also see this when I use m2e to fire Maven, the dependencies don't even show up Eclipse as if the download was not processed.It really looks like a javac problem. How can I make the download succeed and the compiler find the right jars?Here's my pom.xml:<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"><modelVersion>4.0.0</modelVersion><groupId>com.lzkill</groupId><artifactId>myArtifact</artifactId><version>0.0.1-SNAPSHOT</version><name>...</name><description>...</description><url>...</url><properties>    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding></properties><dependencyManagement>    <dependencies>        <dependency>            <groupId>org.jgrapht</groupId>            <artifactId>jgrapht</artifactId>            <version>0.9.0</version>        </dependency>        <dependency>            <groupId>junit</groupId>            <artifactId>junit</artifactId>            <version>4.11</version>            <scope>test</scope>        </dependency>        <dependency>            <groupId>org.apache.commons</groupId>            <artifactId>commons-lang3</artifactId>            <version>3.3.2</version>        </dependency>    </dependencies></dependencyManagement><build>    <pluginManagement>        <plugins>            <plugin>                <groupId>org.apache.maven.plugins</groupId>                <artifactId>maven-compiler-plugin</artifactId>                <version>2.3.2</version>                <configuration>                    <source>1.6</source>                    <target>1.6</target>                </configuration>            </plugin>            <plugin>                <groupId>org.apache.maven.plugins</groupId>                <artifactId>maven-surefire-plugin</artifactId>                <version>2.12</version>                <configuration>                    <testFailureIgnore>false</testFailureIgnore>                </configuration>            </plugin>            <plugin>                <groupId>org.apache.maven.plugins</groupId>                <artifactId>maven-javadoc-plugin</artifactId>                <version>2.9.1</version>                <configuration>                    <show>protected</show>                    <windowtitle>...</windowtitle>                </configuration>            </plugin>        </plugins>    </pluginManagement></build>
24359674	[u'programOptmimisers']	There is an option for this in IRIS, From hereimport org.deri.iris.optimisations.rulefilter.RuleFilter;import org.deri.iris.Configuration;Configuration config = new Configuration();config.programOptmimisers.add(new RuleFilter());However, I could not get this to work. I get a "loop exception" in the underlying JGraphT library used. Finally, I ended up writing my own rule filter. It is not difficult.We need to ensure that we only include rules that are referenced in the tail of rules leading to the final relation. 
24372270	[]	I've used th JGrapht for a library for a variety of my own graph representations.  They have a weighted graph implementation here: http://jgrapht.org/javadoc/org/jgrapht/graph/SimpleWeightedGraph.htmlThat seems to handle a lot of what you are looking for, and I've used it to represent graphs with up to around 2000 vertices, and it handles reasonably well for my needs, though I don't remember my access rate.
24517434	[u'swing', u'add', u'']	I have a SimpleWeightedGraph and I want to draw it on a JPanel in a JFrame.Unfortunately nothing is drawn...I read this article http://jgrapht.org/visualizations.html. They are using a ListenableDirectedGraph so I tried a ListenableUndirectedGraph with no success (nothing is drawn).public class DisplayGraphForm extends javax.swing.JFrame{   /**    * Creates new form DisplayGraphForm    * @param g    */    public DisplayGraphForm(SimpleWeightedGraph g)    {       initComponents(); // graphPanel added to JFrame with BorderLayout (Center)       JGraphModelAdapter adapter = new JGraphModelAdapter(g);       JGraph jgraph = new JGraph(adapter);       graphPanel.add(jgraph);     }    // ...}Thanks you!
24519791	[u'setDefaultCloseOperation', u'execute', u'add', u'pack', u'setLocationByPlatform', u'setVisible', u'invokeLater', u'valueOf', u'class);', u'addVertex', u'addVertex', u'addVertex', u'addEdge', u'setEdgeWeight', u'addEdge', u'setEdgeWeight', u'addEdge', u'setEdgeWeight', u'convertValueToString', u'getWeight']	It looks that you're leaving some important details out of your question, and without a Minimal, Complete, and Verifiable example it is hard to say where is the problem. However, note that the sample you're trying to adopt is very old. JGraph has moved on to JGraphX. Consider the following sample that demonstrates the link of JGraphT and JGraphX using JGraphXAdapter. import javax.swing.JFrame;import javax.swing.SwingUtilities;import org.jgrapht.ListenableGraph;import org.jgrapht.ext.JGraphXAdapter;import org.jgrapht.graph.DefaultWeightedEdge;import org.jgrapht.graph.ListenableDirectedWeightedGraph;import com.mxgraph.layout.mxCircleLayout;import com.mxgraph.layout.mxIGraphLayout;import com.mxgraph.swing.mxGraphComponent;public class DemoWeightedGraph {    private static void createAndShowGui() {        JFrame frame = new JFrame("DemoGraph");        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);        ListenableGraph<String, MyEdge> g = buildGraph();        JGraphXAdapter<String, MyEdge> graphAdapter =                 new JGraphXAdapter<String, MyEdge>(g);        mxIGraphLayout layout = new mxCircleLayout(graphAdapter);        layout.execute(graphAdapter.getDefaultParent());        frame.add(new mxGraphComponent(graphAdapter));        frame.pack();        frame.setLocationByPlatform(true);        frame.setVisible(true);    }    public static void main(String[] args) {        SwingUtilities.invokeLater(new Runnable() {            public void run() {                createAndShowGui();            }        });    }    public static class MyEdge extends DefaultWeightedEdge {        @Override        public String toString() {            return String.valueOf(getWeight());        }    }    public static ListenableGraph<String, MyEdge> buildGraph() {        ListenableDirectedWeightedGraph<String, MyEdge> g =             new ListenableDirectedWeightedGraph<String, MyEdge>(MyEdge.class);        String x1 = "x1";        String x2 = "x2";        String x3 = "x3";        g.addVertex(x1);        g.addVertex(x2);        g.addVertex(x3);        MyEdge e = g.addEdge(x1, x2);        g.setEdgeWeight(e, 1);        e = g.addEdge(x2, x3);        g.setEdgeWeight(e, 2);        e = g.addEdge(x3, x1);        g.setEdgeWeight(e, 3);        return g;    }}Note that MyEdge extends DefaultWeightedEdge to provide custom toString() that displays edge weight. A cleaner solution would be probably to override mxGraph.convertValueToString, examine content of cells and provide custom labels as needed. toString is a shortcut for the demo and also I noticed that DefaultWeightedEdge.getWeight() is protected, so the extension is needed anyway :) 
24621581	[u'class);', u'addVertex', u'addVertex', u'addVertex', u'addEdge', u'addEdge', u'']	I am currently writing a program that deals with graphs created by the jgrapht library. I have multiple graphs of the form:UndirectedGraph <Integer, DefaultEdge> g_x = new SimpleGraph<Integer, DefaultEdge (DefaultEdge.class);g.addVertex(1);g.addVertex(2);g.addVertex(3);g.addEdge(1, 2);g.addEdge(2, 4);...which are constant graphs associated with street maps that I am given as files. Right now I have all of my graphs declared in my main method and just reference the graph I want when a map is loaded. What I would like to do is have another file paired with each map (i.e map1.map and map1.graph) so that when I load the map from a file I can also load the graph like:map = loadMap(mapName);g_x = loadGraph(mapName);where mapName is the file name prefix and not have to store it in my source code. Is it possible to do this in java and if so how would I create the files and load them? Would it also be possible to do this with a generic Object?
24711651	[u'', u'0-SNAPSHOT', u'5:clean ', u'3:resources ', u'', u'1:compile ', u'', u'439s', u'apache', u'', u'', u'', u'apache', u'0" encoding="UTF-8"?>', u'apache', u'w3', u'apache', u'0', u'build', u'reporting', u'tendiwa</groupId>', u'0-SNAPSHOT</version>', u'apache', u'1</version>', u'8</source>', u'8</target>', u'codehaus', u'8', u'codehaus', u'1', u'sonatype', u'13', u'sf', u'0', u'jgrapht</groupId>', u'9', u'jukito</groupId>', u'5-SNAPSHOT</version>', u'vividsolutions</groupId>', u'14-SNAPSHOT</version>', u'google', u'0</version>', u'la4j</groupId>', u'4', u'math</groupId>', u'0', u'tendiwa</groupId>', u'0-SNAPSHOT</version>', u'google', u'0-beta4</version>', u'google', u'0-beta4</version>', u'codehaus', u'8', u'codehaus', u'6</artifactId>', u'0</version>', u'codehaus', u'googlecode', u'0</version>', u'2', u'jgrapht</groupId>', u'9']	I run$ mvn clean compileAnd get the folliwing output:[INFO] Scanning for projects...[INFO]                                                                        [INFO] ------------------------------------------------------------------------[INFO] Building tendiwa-core 1.0-SNAPSHOT[INFO] ------------------------------------------------------------------------[INFO][INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ tendiwa-core ---[INFO] Deleting /home/suseika/Projects/tendiwa/core/target[INFO][INFO] --- maven-resources-plugin:2.3:resources (default-resources) @ tendiwa-core ---[INFO] Using 'UTF-8' encoding to copy filtered resources.[INFO] Copying 3 resources[INFO][INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ tendiwa-core ---[INFO] Changes detected - recompiling the module![INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files[INFO] -------------------------------------------------------------[WARNING] COMPILATION WARNING :[INFO] -------------------------------------------------------------[WARNING] Found 0 errors and 0 warnings.[INFO] 1 warning[INFO] -------------------------------------------------------------[INFO] ------------------------------------------------------------------------[INFO] BUILD FAILURE[INFO] ------------------------------------------------------------------------[INFO] Total time: 2.439s[INFO] Finished at: Sat Jul 12 15:26:53 YEKT 2014[INFO] Final Memory: 12M/154M[INFO] ------------------------------------------------------------------------[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.1:compile (default-compile) on project tendiwa-core: Compilation failure[ERROR] Found 0 errors and 0 warnings.[ERROR] -> [Help 1][ERROR][ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.[ERROR] Re-run Maven using the -X switch to enable full debug logging.[ERROR][ERROR] For more information about the errors and possible solutions, please read the following articles:[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureExceptionThere clearly is an error with the maven-compiler-plugin, but for some reason it doesn't say what exactly is the error. Running with -e flag doesn't explain anything either. What can be the cause of this?Update:pom.xml:<?xml version="1.0" encoding="UTF-8"?><project xmlns="http://maven.apache.org/POM/4.0.0"         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">    <modelVersion>4.0.0</modelVersion>    <properties>        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>    </properties>    <groupId>org.tendiwa</groupId>    <artifactId>tendiwa-core</artifactId>    <version>1.0-SNAPSHOT</version>    <build>        <plugins>            <plugin>                <groupId>org.apache.maven.plugins</groupId>                <artifactId>maven-compiler-plugin</artifactId>                <version>3.1</version>                <configuration>                    <compilerId>groovy-eclipse-compiler</compilerId>                    <source>1.8</source>                    <target>1.8</target>                </configuration>                <dependencies>                    <dependency>                        <groupId>org.codehaus.groovy</groupId>                        <artifactId>groovy-eclipse-compiler</artifactId>                        <version>2.8.0-01</version>                    </dependency>                    <dependency>                        <groupId>org.codehaus.groovy</groupId>                        <artifactId>groovy-eclipse-batch</artifactId>                        <version>2.1.5-03</version>                    </dependency>                </dependencies>            </plugin>        </plugins>    </build>    <repositories>        <repository>            <id>Snapshots</id>            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>        </repository>    </repositories>    <dependencies>        <dependency>            <groupId>jgraph</groupId>            <artifactId>jgraph</artifactId>            <version>5.13.0.0</version>        </dependency>        <dependency>            <groupId>net.sf.trove4j</groupId>            <artifactId>trove4j</artifactId>            <version>3.0.3</version>        </dependency>        <dependency>            <groupId>org.jgrapht</groupId>            <artifactId>jgrapht-core</artifactId>            <version>0.9.0</version>        </dependency>        <dependency>            <groupId>org.jukito</groupId>            <artifactId>jukito</artifactId>            <version>1.5-SNAPSHOT</version>        </dependency>        <dependency>            <groupId>com.vividsolutions</groupId>            <artifactId>jts</artifactId>            <version>1.14-SNAPSHOT</version>        </dependency>        <dependency>            <groupId>com.google.guava</groupId>            <artifactId>guava</artifactId>            <version>15.0</version>        </dependency>        <dependency>            <groupId>org.la4j</groupId>            <artifactId>la4j</artifactId>            <version>0.4.9</version>        </dependency>        <dependency>            <groupId>kendzi.math</groupId>            <artifactId>kendzi-straight-skeleton</artifactId>            <version>0.0.10-SNAPSHOT</version>        </dependency>        <dependency>            <groupId>org.tendiwa</groupId>            <artifactId>twakStraightSkeleton</artifactId>            <version>1.0-SNAPSHOT</version>        </dependency>        <dependency>            <groupId>com.google.inject.extensions</groupId>            <artifactId>guice-assistedinject</artifactId>            <version>4.0-beta4</version>        </dependency>        <dependency>            <groupId>com.google.inject</groupId>            <artifactId>guice</artifactId>            <version>4.0-beta4</version>        </dependency>        <dependency>            <groupId>org.codehaus.groovy</groupId>            <artifactId>groovy-all</artifactId>            <version>1.8.6</version>        </dependency>        <dependency>            <groupId>org.codehaus.groovy.maven.runtime</groupId>            <artifactId>gmaven-runtime-1.6</artifactId>            <version>1.0</version>            <exclusions>                <exclusion>                    <groupId>org.codehaus.groovy</groupId>                    <artifactId>groovy-all-minimal</artifactId>                </exclusion>            </exclusions>        </dependency>        <dependency>            <groupId>com.googlecode.combinatoricslib</groupId>            <artifactId>combinatoricslib</artifactId>            <version>2.0</version>        </dependency>        <dependency>            <groupId>log4j</groupId>            <artifactId>log4j</artifactId>            <version>1.2.12</version>        </dependency>        <dependency>            <groupId>org.jgrapht</groupId>            <artifactId>jgrapht-ext</artifactId>            <version>0.9.1-SNAPSHOT</version>        </dependency>    </dependencies></project>
24952155	[u'project', u'0" encoding="UTF-8"?>', u'0', u'eclipse', u'eclipse', u'classpath', u'0" encoding="UTF-8"?>', u'eclipse', u'jar"/>', u'jar"/>', u'0', u'6', u'5', u'3', u'jar"/>', u'9', u'jar"/>', u'0']	It does not have any eclipse meta file so we can import it directly in eclipseCreate two files in that folder with following entry..project<?xml version="1.0" encoding="UTF-8"?><projectDescription>    <name>mallet-2.0.7</name>    <comment></comment>    <projects>    </projects>    <buildSpec>        <buildCommand>            <name>org.eclipse.jdt.core.javabuilder</name>            <arguments>            </arguments>        </buildCommand>    </buildSpec>    <natures>        <nature>org.eclipse.jdt.core.javanature</nature>    </natures></projectDescription>.classpath<?xml version="1.0" encoding="UTF-8"?><classpath>    <classpathentry kind="src" path="src"/>    <classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>    <classpathentry kind="lib" path="lib/bsh.jar"/>    <classpathentry kind="lib" path="lib/grmm-deps.jar"/>    <classpathentry kind="lib" path="lib/jdom-1.0.jar"/>    <classpathentry kind="lib" path="lib/jgrapht-0.6.0.jar"/>    <classpathentry kind="lib" path="lib/junit-4.5.jar"/>    <classpathentry kind="lib" path="lib/jwnl-1.3.jar"/>    <classpathentry kind="lib" path="lib/mallet-deps.jar"/>    <classpathentry kind="lib" path="lib/mtj-0.9.9.jar"/>    <classpathentry kind="lib" path="lib/openjgraph.jar"/>    <classpathentry kind="lib" path="lib/trove-2.0.2.jar"/>    <classpathentry kind="output" path="bin"/></classpath>In eclipse use File > import > Existing project into workspace.done
25326556	[u'edgeSet', u'unmodifiableSet', u'getGraph', u'hasNext', u'next', u'', u'add', u'getGraph']	Okay, I did some googling and apparently you're using the JGraphT library. (Protip: it helps to specify this in your question!) The JavaDoc for Graph.edgeSet() says:Returns a set of the edges contained in this graph. The set is backed  by the graph, so changes to the graph are reflected in the set. If the  graph is modified while an iteration over the set is in progress, the  results of the iteration are undefined.Now, this just means that if the edges of the Graph change, then those changes can be seen in the returned Set. Unfortunately, it doesn't say anything about changes in the returned Set causing changes to the edges of the Graph. Seeing that you're getting an UnsupportedOperationException, I would assume Graph does not allow you change the returned Set. The source code of AbstractBaseGraph confirms this assumption:/** * @see Graph#edgeSet() */public Set<E> edgeSet(){    if (unmodifiableEdgeSet == null) {        unmodifiableEdgeSet = Collections.unmodifiableSet(edgeMap.keySet());    }    return unmodifiableEdgeSet;}edgeSet() returns an unmodifiable view of a Graph's edges. You cannot change the edgeSet directly, you have to use the Graph interface to add/change/remove edges. Additionally, if you are iterating over the edgeSet while you're making these changes, you may run into undefined behavior.To solve this, I recommend first collecting the edges to be removed while iterating, and then removing them afterwards:// Collection holding the 'marked' edgesSet<DefaultWeightedEdge> toRemove = new HashSet<>();Iterator<DefaultWeightedEdge> edgeIt = FWIt.getGraph().edgeSet().iterator();while (edgeIt.hasNext()){    DefaultWeightedEdge e = edgeIt.next();    /* ... */    if (/* something */) {         // Mark the edge to be removed         toRemove.add(e);    }}// Remove the marked edges using the Graph's interfaceFWIt.getGraph().removeAllEdges(toRemove);
52062	[u'class);', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addEdge', u'addEdge', u'addEdge', u'addEdge']	Check out JGraphT for a very simple and powerful Java graph library that is pretty well done and, to allay any confusion, is different than JGraph. Some sample code:UndirectedGraph<String, DefaultEdge> g =        new SimpleGraph<String, DefaultEdge>(DefaultEdge.class);    String v1 = "v1";    String v2 = "v2";    String v3 = "v3";    String v4 = "v4";    // add the vertices    g.addVertex(v1);    g.addVertex(v2);    g.addVertex(v3);    g.addVertex(v4);    // add edges to create a circuit    g.addEdge(v1, v2);    g.addEdge(v2, v3);    g.addEdge(v3, v4);    g.addEdge(v4, v1);
52691	[]	If you were using JGraph, you should give a try to JGraphT which is designed for algorithms.  One of its features is visualization using the JGraph library. It's still developed, but pretty stable. I analyzed the complexity of JGraphT algorithms some time ago.  Some of them aren't the quickest, but if you're going to implement them on your own and need to display your graph, then it might be the best choice.  I really liked using its API, when I quickly had to write an app that was working on graph and displaying it later.
348542	[]	Possibly a duplicate of 'Good Java graph algorithm library?'. The short answer would be to look at JGraphT.
348553	[]	The two most common ways to represent a graph are adjacency matrix and adjacency lists.  Let n be the number of nodes.  Adjacency matrix A is an n x n matrix of boolean values, such that A(i, j) = 1 if nodes i and j are connected, and 0 if they are not.In adjacency lists representation for each node you maintain a list of the nodes it is connected to (adjacent to).The question now is what you want to do with the graph.  If it is something simple, it may make sense to roll your own.  If not, you may want to poke around the web for a java library to handle graphs.  JGraphT has been mentioned.If you want to use adjacency matrix, then you can easily represent it in Java as a 2D array of bool's or int's.  You would need to give each node an index.  The easiest way to do that is to keep your Node objects in an array, always in the same order.  So you would really have two data structures: an array of Nodes, which are objects that represent whatever your nodes actually are, and the adjacency matrix, which refers to the Nodes by their indices.  Once you populate the matrix, if you can easily find a node that is connected to most other nodes by adding up the values (0s and 1s) in all the columns (or rows), and finding the maximum.  Hope this helps.
440852	[]	There's also http://www.jgrapht.org, which has software licensed under the LGPL. I have to warn you though, implementing your own is fraught with danger. If you plan on using recursion on your structure (which is a graph), you'll have to ensure that it's acyclic, or you'll run into infinite loop problems. Better to use third party code where they've already dealt with the issues.
684413	[]	Check out JGraphT library, it specializes in graph algorithms and does what you need.
736189	[]	Naturally you will learn a lot about pathfinding if you write your own implementation. But you will also spend a lot of time doing it.Check out the JGraphT library that deals with graphs in general, has a nice API and supports more shortest path algorithms than just A*.
738688	[]	I'm trying to analyze the usage of "#include" in C files (what is included first, dependencies...).To do so, I extract from a C file the "#include" and I'm building a graph. I would like to identify common patterns in this graph...So far, I'm using JGraphT as the graph engine (not sure this is the correct expression) and JGraph for the rendering (however using jgraph is a bit problematic since the Layouts are no longer included in the free release). I've been unable to find any isomorphism support in jgrapht. Do you know any solution providing this kind of support (something like igraph but for java)..?I'm using java 1.5 and the proposed solution must be free...
745065	[]	JGraphT sounds like what you're after.JGraphT is a free Java graph library that provides mathematical graph-theory objects and algorithms. JGraphT supports various types of graphs.Their API can create graphs from various input and also supports creating graphs using addVertex, addEdge. They support finding shortest paths using various well know algorithms such as Bellman-Ford and Dijkstra They also have a complete javadoc available online.
756692	[]	Looks like there was a mention of isomorphism in the "experimental" package of JGraphT a few months back, but apparently no documentation.Isomorphism comparison is a fundamental requirement in cheminformatics software (technically it's monomorphism that's used). Atoms are "nodes" and bonds are "edges". Molecular graphs are undirected and can be cyclic. A few open source cheminformatics libraries written in Java are available. You might be able to find some clues for solving your problem by looking at these libraries.For example, I've written a BSD-licensed cheminformatics library called MX that implements a monomorphism algorithm based on VF. I wrote a high-level overview of how the algorithm was implemented, and you can browse the source for the mapping package in my GitHub repository. Most of the work is done in the DefaultState class.MX also includes a fast exhaustive ring detector and other graph manipulations that might be applicable to your problem.
811609	[]	You could use the JGraphT library which supports serializing graphs into a text file with the ML format. GraphMLExporter Javadoc.
826042	[]	How do you take a java library that is for the desktop or an applet and make it so you can use its functions for a web page?  I know not all things are meant for the web, but can you call a "regular" java class in an apache/tomcat setup server and it "work"?  Do you have to so something to it to get it work with a web page?I was interested in jgrapht for the web but it looks like all desktop or applet and I don't know that it would be possible to return its graphics to the browser, but maybe its libraries and a generated .png rendered by the browser.Although there is debate on applets being alive or dead, I am not interested in using one at the moment, as it appears it is dead, albeit with new possible life in the latest update 6u10.  I don't know that I want to invest in JavaFX either.
854877	[]	Summary:JGraphT if you are more interested in data structures and algorithms.JGraph if your primary focus is visualization.Jung, yWorks, and BFG are other things people tried using.Prefuse is a no no since one has to rewrite most of it.
1348993	[]	JGraphT is a nice open source graphing library licensed under the LGPL license.  I have used it in the past to deal with graphs and detecting cycles within the graphs.  It is also fairly easy to use, and you can use JGraph to visualize the graphs.
1432429	[]	Take a look at http://www.jgrapht.org/ where a free java graph library is provided. Using this library you can create all kind of graphs, and since tree's is just a subset of graphs you can also create tree's with this library. A DFS (or BFS) is easy to implement using this library, or you can use the algorithms provided by the library. However, implementing a DFS (or BFS) is a good exercise.Good Luck!
1503708	[u'm2\\repository', u'1\\atom-archiver-0', u'4\\commons-lang-2', u'4\\commons-io-1', u'3', u'2', u'1\\xom-1', u'6', u'6', u'7', u'0', u'1-beta-8\\jaxen-1', u'6', u'0\\jdom-1', u'2', u'4-SNAPSHOT\\cifxml-1', u'6', u'2-SNAPSHOT\\jumbo-converters-0', u'5', u'5', u'8\\junit-3', u'0-SNAPSHOT\\commons-cli-2', u'2-SNAPSHOT\\jumbo-units-0', u'1-SNAPSHOT\\lensfield-share-0', u'0-alpha-2\\maven-embedder-3', u'0-alpha-2\\maven-core-3', u'0-alpha-2\\maven-lifecycle-3', u'5', u'0-alpha-2\\maven-reporting-api-3', u'0-alpha-9\\doxia-sink-api-1', u'0-alpha-2\\maven-model-3', u'0-alpha-2\\maven-compat-3', u'0-beta-3', u'3\\plexus-classworlds-1', u'4\\xbean-reflect-3', u'1\\commons-logging-api-1', u'jar;%CLASSPATH%', u'0-beta-3', u'0-beta-4\\wagon-provider-api-1', u'0-alpha-2\\maven-plugin-api-3', u'0-alpha-2\\maven-project-3', u'1\\plexus-interpolation-1', u'2', u'0\\stax-api-1', u'3\\model-builder-1', u'0-alpha-2\\maven-project-builder-3', u'0\\commons-cli-1', u'0-alpha-6\\plexus-interactivity-api-1', u'0-alpha-1\\plexus-plugin-manager-1', u'0', u'0', u'0', u'0', u'1\\plexus-lang-1', u'0', u'0', u'0', u'0', u'0', u'0', u'0', u'0', u'jar;%CLASSPATH%', u'jar;%CLASSPATH%', u'0', u'1', u'1', u'1', u'1', u'5\\6', u'0', u'0', u'0', u'0', u'sat4j', u'sat4j', u'5', u'5', u'0-alpha-2\\maven-mercury-3', u'0-alpha-2\\maven-toolchain-3', u'0-beta-4\\wagon-http-lightweight-1', u'0-beta-4\\wagon-http-shared-1', u'9', u'9', u'0-beta-4\\wagon-ssh-1', u'1', u'0-beta-4\\wagon-ssh-common-1', u'0-beta-4\\wagon-ssh-external-1', u'0-beta-4\\wagon-file-1', u'2', u'2', u'2', u'3\\aduna-commons-collections-2', u'2\\aduna-commons-concurrent-2', u'3\\aduna-commons-iteration-2', u'0\\aduna-commons-i18n-1', u'2', u'3\\aduna-commons-lang-2', u'2\\aduna-commons-net-2', u'2\\aduna-commons-text-2', u'4\\aduna-commons-io-2', u'2', u'2', u'2', u'2', u'2', u'2', u'2', u'2', u'2', u'2', u'2', u'2\\aduna-commons-xml-2', u'2', u'2', u'4\\jena-2', u'7', u'4\\arq-1', u'0\\iri-1', u'1\\commons-logging-1', u'0', u'1', u'3\\servlet-api-2', u'3', u'4\\icu4j-3', u'0\\json-1', u'8\\wstx-asl-2', u'2', u'4', u'1', u'0-SNAPSHOT\\clojure-contrib-1', u'1\\pub-crawler-0', u'1\\commons-httpclient-3', u'2\\commons-codec-1', u'jar;%CLASSPATH%', u'5', u'2\\arq-2', u'2', u'2\\arq-extra-2', u'5', u'5\\iri-0', u'4', u'3', u'0\\json-jena-1', u'9\\rome-0', u'0', u'2\\vecmath-1', u'main "%LENSFIELD_HOME%\\lensfield-build\\src\\main\\clj\\lensfield\\cli']	I'm using Windows and have a batch file (contents attached below) where I'm building up a classpath before trying to run a Java class.  Unfortunately the classpath is fairly big and the file ends up being ~14kb.  When I run it I'm getting an 'input line too long' error.  I have read elsewhere that the max. size for an env variable is 8kb, but it looks unlikely that I'll be able to reduce the size of my classpath to fit that.  Is there anything else I can do to get this to run?thanks,Nickecho offsubst z: C:\Users\ned24\.m2\repositoryset CLASSPATH=c:\workspace-eclipse\lensfield-pom\lensfield-build\target\classes;%CLASSPATH%set CLASSPATH=z:\wwmm\atom-archiver\0.1\atom-archiver-0.1.jar;%CLASSPATH%set CLASSPATH=z:\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;%CLASSPATH%set CLASSPATH=z:\commons-io\commons-io\1.4\commons-io-1.4.jar;%CLASSPATH%set CLASSPATH=z:\org\freemarker\freemarker\2.3.9\freemarker-2.3.9.jar;%CLASSPATH%set CLASSPATH=z:\log4j\log4j\1.2.13\log4j-1.2.13.jar;%CLASSPATH%set CLASSPATH=z:\xom\xom\1.1\xom-1.1.jar;%CLASSPATH%set CLASSPATH=z:\xerces\xmlParserAPIs\2.6.2\xmlParserAPIs-2.6.2.jar;%CLASSPATH%set CLASSPATH=z:\xerces\xercesImpl\2.6.2\xercesImpl-2.6.2.jar;%CLASSPATH%set CLASSPATH=z:\xalan\xalan\2.7.0\xalan-2.7.0.jar;%CLASSPATH%set CLASSPATH=z:\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;%CLASSPATH%set CLASSPATH=z:\jaxen\jaxen\1.1-beta-8\jaxen-1.1-beta-8.jar;%CLASSPATH%set CLASSPATH=z:\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;%CLASSPATH%set CLASSPATH=z:\jdom\jdom\1.0\jdom-1.0.jar;%CLASSPATH%set CLASSPATH=z:\cdk\cdk-pure\1.2.1\cdk-pure-1.2.1.jar;%CLASSPATH%set CLASSPATH=z:\cml\cifxml\1.4-SNAPSHOT\cifxml-1.4-SNAPSHOT.jar;%CLASSPATH%set CLASSPATH=z:\jgrapht\jgrapht\0.6.0\jgrapht-0.6.0.jar;%CLASSPATH%set CLASSPATH=z:\cml\jumbo-converters\0.2-SNAPSHOT\jumbo-converters-0.2-SNAPSHOT.jar;%CLASSPATH%set CLASSPATH=z:\cml\jumbo\5.5.1-SNAPSHOT\jumbo-5.5.1-SNAPSHOT.jar;%CLASSPATH%set CLASSPATH=z:\cml\cmlxom\2.5.1-SNAPSHOT\cmlxom-2.5.1-SNAPSHOT.jar;%CLASSPATH%set CLASSPATH=z:\junit\junit\3.8\junit-3.8.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\commons\commons-cli\2.0-SNAPSHOT\commons-cli-2.0-SNAPSHOT.jar;%CLASSPATH%set CLASSPATH=z:\cml\jumbo-units\0.2-SNAPSHOT\jumbo-units-0.2-SNAPSHOT.jar;%CLASSPATH%set CLASSPATH=z:\org\lensfield\lensfield-share\0.1-SNAPSHOT\lensfield-share-0.1-SNAPSHOT.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\maven-embedder\3.0-alpha-2\maven-embedder-3.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\maven-core\3.0-alpha-2\maven-core-3.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\maven-lifecycle\3.0-alpha-2\maven-lifecycle-3.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\codehaus\plexus\plexus-utils\1.5.6\plexus-utils-1.5.6.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\maven-reporting-api\3.0-alpha-2\maven-reporting-api-3.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\doxia\doxia-sink-api\1.0-alpha-9\doxia-sink-api-1.0-alpha-9.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\maven-model\3.0-alpha-2\maven-model-3.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\maven-compat\3.0-alpha-2\maven-compat-3.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\codehaus\plexus\plexus-container-default\1.0-beta-3.0.5\plexus-container-default-1.0-beta-3.0.5.jar;%CLASSPATH%set CLASSPATH=z:\org\codehaus\plexus\plexus-classworlds\1.3\plexus-classworlds-1.3.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\xbean\xbean-reflect\3.4\xbean-reflect-3.4.jar;%CLASSPATH%set CLASSPATH=z:\commons-logging\commons-logging-api\1.1\commons-logging-api-1.1.jar;%CLASSPATH%set CLASSPATH=z:\com\google\code\google-collections\google-collect\snapshot-20080530\google-collect-snapshot-20080530.jar;%CLASSPATH%set CLASSPATH=z:\org\codehaus\plexus\plexus-component-annotations\1.0-beta-3.0.5\plexus-component-annotations-1.0-beta-3.0.5.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\wagon\wagon-provider-api\1.0-beta-4\wagon-provider-api-1.0-beta-4.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\maven-plugin-api\3.0-alpha-2\maven-plugin-api-3.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\maven-project\3.0-alpha-2\maven-project-3.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\codehaus\plexus\plexus-interpolation\1.1\plexus-interpolation-1.1.jar;%CLASSPATH%set CLASSPATH=z:\org\codehaus\woodstox\wstx-asl\3.2.6\wstx-asl-3.2.6.jar;%CLASSPATH%set CLASSPATH=z:\stax\stax-api\1.0\stax-api-1.0.jar;%CLASSPATH%set CLASSPATH=z:\org\sonatype\spice\model-builder\1.3\model-builder-1.3.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\maven-project-builder\3.0-alpha-2\maven-project-builder-3.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\commons-cli\commons-cli\1.0\commons-cli-1.0.jar;%CLASSPATH%set CLASSPATH=z:\org\codehaus\plexus\plexus-interactivity-api\1.0-alpha-6\plexus-interactivity-api-1.0-alpha-6.jar;%CLASSPATH%set CLASSPATH=z:\org\sonatype\plexus\plexus-plugin-manager\1.0-alpha-1\plexus-plugin-manager-1.0-alpha-1.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\mercury\mercury-plexus\1.0.0-alpha-2\mercury-plexus-1.0.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\mercury\mercury-repo-remote-m2\1.0.0-alpha-2\mercury-repo-remote-m2-1.0.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\mercury\mercury-repo-api\1.0.0-alpha-2\mercury-repo-api-1.0.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\mercury\mercury-artifact\1.0.0-alpha-2\mercury-artifact-1.0.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\codehaus\plexus\plexus-lang\1.1\plexus-lang-1.1.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\mercury\mercury-transport-api\1.0.0-alpha-2\mercury-transport-api-1.0.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\mercury\mercury-crypto-api\1.0.0-alpha-2\mercury-crypto-api-1.0.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\mercury\mercury-logging\1.0.0-alpha-2\mercury-logging-1.0.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\mercury\mercury-external\1.0.0-alpha-2\mercury-external-1.0.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\mercury\mercury-event\1.0.0-alpha-2\mercury-event-1.0.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\mercury\mercury-md-shared\1.0.0-alpha-2\mercury-md-shared-1.0.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\mercury\mercury-util\1.0.0-alpha-2\mercury-util-1.0.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\mercury\mercury-crypto-basic\1.0.0-alpha-2\mercury-crypto-basic-1.0.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\bouncycastle\bcprov-jdk15\140\bcprov-jdk15-140.jar;%CLASSPATH%set CLASSPATH=z:\bouncycastle\bcpg-jdk15\140\bcpg-jdk15-140.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\mercury\mercury-transport-http\1.0.0-alpha-2\mercury-transport-http-1.0.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\mortbay\jetty\jetty-client\6.1.12\jetty-client-6.1.12.jar;%CLASSPATH%set CLASSPATH=z:\org\mortbay\jetty\jetty-sslengine\6.1.12\jetty-sslengine-6.1.12.jar;%CLASSPATH%set CLASSPATH=z:\org\mortbay\jetty\jetty\6.1.12\jetty-6.1.12.jar;%CLASSPATH%set CLASSPATH=z:\org\mortbay\jetty\jetty-util\6.1.12\jetty-util-6.1.12.jar;%CLASSPATH%set CLASSPATH=z:\org\mortbay\jetty\servlet-api-2.5\6.1.12\servlet-api-2.5-6.1.12.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\mercury\mercury-repo-local-m2\1.0.0-alpha-2\mercury-repo-local-m2-1.0.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\mercury\mercury-repo-virtual\1.0.0-alpha-2\mercury-repo-virtual-1.0.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\mercury\mercury-repo-cache-fs\1.0.0-alpha-2\mercury-repo-cache-fs-1.0.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\mercury\mercury-md-sat\1.0.0-alpha-2\mercury-md-sat-1.0.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\sat4j\org.sat4j.core\2.0.4\org.sat4j.core-2.0.4.jar;%CLASSPATH%set CLASSPATH=z:\org\sat4j\org.sat4j.pb\2.0.4\org.sat4j.pb-2.0.4.jar;%CLASSPATH%set CLASSPATH=z:\org\slf4j\slf4j-jdk14\1.5.3\slf4j-jdk14-1.5.3.jar;%CLASSPATH%set CLASSPATH=z:\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\maven-mercury\3.0-alpha-2\maven-mercury-3.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\maven-toolchain\3.0-alpha-2\maven-toolchain-3.0-alpha-2.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\wagon\wagon-http-lightweight\1.0-beta-4\wagon-http-lightweight-1.0-beta-4.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\wagon\wagon-http-shared\1.0-beta-4\wagon-http-shared-1.0-beta-4.jar;%CLASSPATH%set CLASSPATH=z:\nekohtml\xercesMinimal\1.9.6.2\xercesMinimal-1.9.6.2.jar;%CLASSPATH%set CLASSPATH=z:\nekohtml\nekohtml\1.9.6.2\nekohtml-1.9.6.2.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\wagon\wagon-ssh\1.0-beta-4\wagon-ssh-1.0-beta-4.jar;%CLASSPATH%set CLASSPATH=z:\com\jcraft\jsch\0.1.38\jsch-0.1.38.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\wagon\wagon-ssh-common\1.0-beta-4\wagon-ssh-common-1.0-beta-4.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\wagon\wagon-ssh-external\1.0-beta-4\wagon-ssh-external-1.0-beta-4.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\maven\wagon\wagon-file\1.0-beta-4\wagon-file-1.0-beta-4.jar;%CLASSPATH%set CLASSPATH=z:\org\openrdf\sesame\sesame-repository-api\2.2.4\sesame-repository-api-2.2.4.jar;%CLASSPATH%set CLASSPATH=z:\org\openrdf\sesame\sesame-query\2.2.4\sesame-query-2.2.4.jar;%CLASSPATH%set CLASSPATH=z:\org\openrdf\sesame\sesame-model\2.2.4\sesame-model-2.2.4.jar;%CLASSPATH%set CLASSPATH=z:\info\aduna\commons\aduna-commons-collections\2.3\aduna-commons-collections-2.3.jar;%CLASSPATH%set CLASSPATH=z:\info\aduna\commons\aduna-commons-concurrent\2.2\aduna-commons-concurrent-2.2.jar;%CLASSPATH%set CLASSPATH=z:\info\aduna\commons\aduna-commons-iteration\2.3\aduna-commons-iteration-2.3.jar;%CLASSPATH%set CLASSPATH=z:\info\aduna\commons\aduna-commons-i18n\1.0\aduna-commons-i18n-1.0.jar;%CLASSPATH%set CLASSPATH=z:\org\openrdf\sesame\sesame-rio-api\2.2.4\sesame-rio-api-2.2.4.jar;%CLASSPATH%set CLASSPATH=z:\info\aduna\commons\aduna-commons-lang\2.3\aduna-commons-lang-2.3.jar;%CLASSPATH%set CLASSPATH=z:\info\aduna\commons\aduna-commons-net\2.2\aduna-commons-net-2.2.jar;%CLASSPATH%set CLASSPATH=z:\info\aduna\commons\aduna-commons-text\2.2\aduna-commons-text-2.2.jar;%CLASSPATH%set CLASSPATH=z:\info\aduna\commons\aduna-commons-io\2.4\aduna-commons-io-2.4.jar;%CLASSPATH%set CLASSPATH=z:\org\openrdf\sesame\sesame-queryresultio-api\2.2.4\sesame-queryresultio-api-2.2.4.jar;%CLASSPATH%set CLASSPATH=z:\org\openrdf\sesame\sesame-queryparser-sparql\2.2.4\sesame-queryparser-sparql-2.2.4.jar;%CLASSPATH%set CLASSPATH=z:\org\openrdf\sesame\sesame-queryparser-api\2.2.4\sesame-queryparser-api-2.2.4.jar;%CLASSPATH%set CLASSPATH=z:\org\openrdf\sesame\sesame-queryalgebra-model\2.2.4\sesame-queryalgebra-model-2.2.4.jar;%CLASSPATH%set CLASSPATH=z:\org\openrdf\sesame\sesame-repository-sail\2.2.4\sesame-repository-sail-2.2.4.jar;%CLASSPATH%set CLASSPATH=z:\org\openrdf\sesame\sesame-sail-api\2.2.4\sesame-sail-api-2.2.4.jar;%CLASSPATH%set CLASSPATH=z:\org\openrdf\sesame\sesame-sail-nativerdf\2.2.4\sesame-sail-nativerdf-2.2.4.jar;%CLASSPATH%set CLASSPATH=z:\org\openrdf\sesame\sesame-sail-inferencer\2.2.4\sesame-sail-inferencer-2.2.4.jar;%CLASSPATH%set CLASSPATH=z:\org\openrdf\sesame\sesame-queryparser-serql\2.2.4\sesame-queryparser-serql-2.2.4.jar;%CLASSPATH%set CLASSPATH=z:\org\openrdf\sesame\sesame-queryalgebra-evaluation\2.2.4\sesame-queryalgebra-evaluation-2.2.4.jar;%CLASSPATH%set CLASSPATH=z:\org\openrdf\sesame\sesame-queryresultio-sparqlxml\2.2.4\sesame-queryresultio-sparqlxml-2.2.4.jar;%CLASSPATH%set CLASSPATH=z:\info\aduna\commons\aduna-commons-xml\2.2\aduna-commons-xml-2.2.jar;%CLASSPATH%set CLASSPATH=z:\org\openrdf\sesame\sesame-rio-rdfxml\2.2.4\sesame-rio-rdfxml-2.2.4.jar;%CLASSPATH%set CLASSPATH=z:\org\openrdf\sesame\sesame-rio-turtle\2.2.4\sesame-rio-turtle-2.2.4.jar;%CLASSPATH%set CLASSPATH=z:\net\sourceforge\jena\jena\2.4\jena-2.4.jar;%CLASSPATH%set CLASSPATH=z:\antlr\antlr\2.7.5\antlr-2.7.5.jar;%CLASSPATH%set CLASSPATH=z:\net\sourceforge\jena\arq\1.4\arq-1.4.jar;%CLASSPATH%set CLASSPATH=z:\net\sourceforge\jena\iri\1.0\iri-1.0.jar;%CLASSPATH%set CLASSPATH=z:\commons-logging\commons-logging\1.1\commons-logging-1.1.jar;%CLASSPATH%set CLASSPATH=z:\logkit\logkit\1.0.1\logkit-1.0.1.jar;%CLASSPATH%set CLASSPATH=z:\avalon-framework\avalon-framework\4.1.3\avalon-framework-4.1.3.jar;%CLASSPATH%set CLASSPATH=z:\javax\servlet\servlet-api\2.3\servlet-api-2.3.jar;%CLASSPATH%set CLASSPATH=z:\concurrent\concurrent\1.3.4\concurrent-1.3.4.jar;%CLASSPATH%set CLASSPATH=z:\icu4j\icu4j\3.4\icu4j-3.4.jar;%CLASSPATH%set CLASSPATH=z:\org\json\json\1.0\json-1.0.jar;%CLASSPATH%set CLASSPATH=z:\woodstox\wstx-asl\2.8\wstx-asl-2.8.jar;%CLASSPATH%set CLASSPATH=z:\owlapi\owlapi\2.2.0\owlapi-2.2.0.jar;%CLASSPATH%set CLASSPATH=z:\org\slf4j\slf4j-log4j12\1.4.2\slf4j-log4j12-1.4.2.jar;%CLASSPATH%set CLASSPATH=z:\org\clojure\clojure-lang\1.1.0-alpha-SNAPSHOT\clojure-lang-1.1.0-alpha-SNAPSHOT.jar;%CLASSPATH%set CLASSPATH=z:\org\clojure\clojure-contrib\1.0-SNAPSHOT\clojure-contrib-1.0-SNAPSHOT.jar;%CLASSPATH%set CLASSPATH=z:\wwmm\pub-crawler\0.1\pub-crawler-0.1.jar;%CLASSPATH%set CLASSPATH=z:\commons-httpclient\commons-httpclient\3.1\commons-httpclient-3.1.jar;%CLASSPATH%set CLASSPATH=z:\commons-codec\commons-codec\1.2\commons-codec-1.2.jar;%CLASSPATH%set CLASSPATH=z:\org\dspace\foresite\SNAPSHOT\foresite-SNAPSHOT.jar;%CLASSPATH%set CLASSPATH=z:\com\hp\hpl\jena\jena\2.5.5\jena-2.5.5.jar;%CLASSPATH%set CLASSPATH=z:\com\hp\hpl\jena\arq\2.2\arq-2.2.jar;%CLASSPATH%set CLASSPATH=z:\org\apache\lucene\lucene-core\2.2.0\lucene-core-2.2.0.jar;%CLASSPATH%set CLASSPATH=z:\com\hp\hpl\jena\arq-extra\2.2\arq-extra-2.2.jar;%CLASSPATH%set CLASSPATH=z:\com\hp\hpl\jena\jenatest\2.5.5\jenatest-2.5.5.jar;%CLASSPATH%set CLASSPATH=z:\com\hp\hpl\jena\iri\0.5\iri-0.5.jar;%CLASSPATH%set CLASSPATH=z:\com\ibm\icu\icu4j\3.4.4\icu4j-3.4.4.jar;%CLASSPATH%set CLASSPATH=z:\com\hp\hpl\jena\concurrent-jena\1.3.2\concurrent-jena-1.3.2.jar;%CLASSPATH%set CLASSPATH=z:\com\hp\hpl\jena\json-jena\1.0\json-jena-1.0.jar;%CLASSPATH%set CLASSPATH=z:\rome\rome\0.9\rome-0.9.jar;%CLASSPATH%set CLASSPATH=z:\org\ccil\cowan\tagsoup\tagsoup\1.0.1\tagsoup-1.0.1.jar;%CLASSPATH%set CLASSPATH=z:\javax\vecmath\1.2\vecmath-1.2.jar;%CLASSPATH%java clojure.main "%LENSFIELD_HOME%\lensfield-build\src\main\clj\lensfield\cli.clj" %*
1704822	[]	My top choice would be JGraph as others have suggested; I am using JGraph5 because it is better documented than the newer alternative, JGraphX.  EDIT: JGraphX turns out to be the far superior version, despite the lack of documentation.  It's not that hard to figure out.JGraphDemonstration appFeature listLicensing agreementOther alternatives I've researched:JGraphT"JGraphT is a free Java graph library that provides mathematical graph-theory objects and algorithms...complete source code included, under the terms of the GNU Lesser General Public License." (http://jgrapht.sourceforge.net/)Main project repositoryExample visualizationsJUNG - Java Universal Network/Graph FrameworkMain project repositoryyEd Graph EditorImplementation of yFiles libraryDemonstration Java appletAbout yEdSaves graphs in GraphML format
1737654	[u'']	Time ago I had the same problem and did my own implementation. What I suggest you is to implement another class: Edge. Then, a Vertex will have a List of Edge.public class Edge {    private Node a, b;    private directionEnum direction;     // AB, BA or both    private int weight;    ...}It worked for me. But maybe is so simple. There is this library that maybe can help you if you look into its code: http://jgrapht.sourceforge.net/
1775745	[]	JGraphT has a nice Fibonacci Heap class. How can I use it to implement Prim's minimum spanning tree algorithm?
1806214	[u'lang', u'equals', u'equals']	According to the JavaDoc DefaultWeightedEdge hasn't implemented equals() and hashCode() and thus uses the methods defined in java.lang.Object. This means that two DefaultWeightedEdge objects a and b with the same values will not return true from a.equals(b). That would only return true if a and b actually refer to the same object.You need to use an edge implementation class that implements .equals() and hashCode() to get useful results here.
1811103	[u'eccentricities', u'get', u'get', u'get', u'get', u'get', u'get', u'get']	I had some tests working fine. Then, I moved it to a different package, and am now getting errors. Here is the code:import static org.junit.Assert.*;import java.util.HashSet;import java.util.Map;import java.util.Set;import org.jgrapht.Graphs;import org.jgrapht.WeightedGraph;import org.jgrapht.graph.DefaultWeightedEdge;import org.jgrapht.graph.SimpleWeightedGraph;import org.junit.*; @Test    public void testEccentricity() {    WeightedGraph<String, DefaultWeightedEdge> g = generateSimpleCaseGraph();    Map<String, Double> eccen = JGraphtUtilities.eccentricities(g);    assertEquals(70, eccen.get("alpha"));    assertEquals(80, eccen.get("l"));    assertEquals(130, eccen.get("l-0"));    assertEquals(100, eccen.get("l-1"));    assertEquals(90, eccen.get("r"));    assertEquals(120, eccen.get("r-0"));    assertEquals(130, eccen.get("r-1"));    }The error message is this:The method assertEquals(Object, Object) is ambiguous for the type JGraphtUtilitiesTestHow can I fix this? Why did this problem occur as I moved the class to a different package?
1813939	[]	Another approach is to move the relationship out of the objects in question.  Many times neither A nor B ever needs to know about each other; it's the using code that finds those properties convenient.  This is where graphs or bidirectional maps can come into play.Bidirectional maps can trivially be used to keep track of one to one relationships.  Graphs can be much better at keeping track of the other types of cardinality (many-to-one, many-to-many, etc.)There are a couple different graph implementations that could help on that end.  I've heard of but never used JGraphT and there is one I've used a lot called plexus (no relation to the IOC container).  http://jgrapht.sourceforge.net/ and http://plexus.sf.net/ respectively.A graph is nice because it allows complete flexibility in how different relationships are defined and the bidirectional link is maintained implicitly.The fact that both sides of the relationship need to keep themselves in synch is frequently a sign that the relationship itself is of equal importance to the endpoints and not something that each side should be attempting to encapsulate.Still, if parent and child really do need to operate on each other then one approach is to figure out which is primary and whether all operations can be done through that object.  So, for example,  in the parent child relationship can child operations be done on the parent with the parent passing a reference to itself to the children during that operation.  I'd argue that if you can't then it is a good indicator that some lines need to be redrawn in the design.Again using the parent-child example, I haven't really found a case where the parent->child and child->parent relationship was so dynamic that one end couldn't control it.  And 99% of the time that I keep a back-reference from secondary to primary, it's for convenience and the lifecycle of the relationship is well established....otherwise, I use a graph.
1827452	[]	Unfortunately, I don't know enough graph theory to give you a complete, direct answer, but I have used jgrapht in a few projects, so maybe this will help.The list of algorithms included with jgrapht is here: http://www.jgrapht.org/javadoc/org/jgrapht/alg/package-summary.html, and you can also find graph traversals implemented as iterators (if that is any help) here: http://www.jgrapht.org/javadoc/org/jgrapht/traverse/package-summary.htmlI'm pretty sure none of those algorithms will get you want you want out of the box, so you'd have to code it yourself, but I can tell you from experience that coding on top of jgrapht as opposed to starting from scratch is A LOT easier.  There is also a FibonacciHeap class that would presumably help with implementing Prim's algorithm.If you need help with the algorithm itself, there are a number of algorithms with Wikipedia entries, with detailed descriptions and pseudocode.  The Minimum spanning tree article links to them.
1842397	[u'svn']	I would start by going to the Sourceforge Developer tab for JGraphT, and follow the instructions on checking out the latest source code : svn co https://jgrapht.svn.sourceforge.net/svnroot/jgrapht jgraphtThen create a project in Eclipse from the sources, and read through the README on how to build and deploy.
2101496	[]	Re Q1: You could find on internet resources several Java implementations of Tree structure, for example this generic tree.Re Q2: One alternative is using JTree. Check the Java Tutorial trail on How to use Trees JGraphT could be a good starting point to build something like your example. Check the demo at http://jgrapht.sourceforge.net/visualizations.html
2152158	[]	JGraphT - JGraphT is a free Java graph library that provides mathematical graph-theory objects and algorithms. JGraphT supports various types of graphs including: directed and undirected graphs.graphs with weighted / unweighted / labeled or any user-defined edges.various edge multiplicity options, including: simple-graphs, multigraphs, pseudographs.unmodifiable graphs - allow modules to provide "read-only" access to internal graphs.listenable graphs - allow external listeners to track modification events.subgraphs graphs that are auto-updating subgraph views on other graphs.all compositions of above graphs(Requires Java 1.6)
2210667	[]	yEd can export graphs in GraphML format and JGraphT has a GraphMLExporter. Leaves the problem on how to get your data into those products or libraries. But at least both can create the desired format.on the other hand - GraphML is in XML format so you can easily use jdom or dom4j to create a DOM, add the nodes based on your data an serialize it to an XML file. This shouldn't be to complicated.
2320659	[]	Perhaps GraphViz would work for you?EDIT:OK, what about JGraphT
2401224	[]	How about JGraphT in combination with JGraph.Check here for a simple demo with basic interaction
2411103	[]	Have a look at yFiles, JGraph, JGraphT or the alternatives on this list.
2431001	[u'addSibling']	It looks to me like the structure is a Tree, but not the balanced or binary kind. If you want full control over how new nodes are added, then you'll have to specify how that is done, e.g. a.addSibling(b).As this is for scheduling, I am guessing siblings should be visited roughly at the same time. Your visitor, instead of backtracking, will have to spawn other visitors for where you have branching. So the third element to pop would be x, g and f.It might help you to look at JGraphT.
2443885	[]	Is there a good library (or wrapper to Java library) for graphs, and/or graph algorithms in scala?This one seems to be quite dead. This is an example for the Dijkstra algorithm in scala, but I'm looking for a library a-la JGraphT.
2448234	[]	Have you tried taking a look at java graph algorithms libraries, like JGraphIT ?
2495288	[]	jgraphAbuGraphPrefuse it seems the link is not working now, try later.JGraphTSome of those libraries let you change the shape of the nodes, you can also add images instead of basic shapes. For the conceptual graph I think prefuse will do the job.
2495373	[]	JGraphT is a free Java graph library that provides mathematical graph-theory objects and algorithms. JGraphT supports various types of graphs including:directed and undirected graphs.graphs with weighted / unweighted / labeled or any user-defined edges.various edge multiplicity options, including: simple-graphs, multigraphs, pseudographs.unmodifiable graphs - allow modules to provide "read-only" access to internal graphs.listenable graphs - allow external listeners to track modification events.subgraphs graphs that are auto-updating subgraph views on other graphs.all compositions of above graphs.http://jgrapht.sourceforge.net/
2652503	[]	Also pay attention to the JGraphT library in Java.
2727788	[]	I'm a big fan of JGraphT, a Java library for graphs. Could anyone recommend a similar Java library for trees? Preferrably FOSS.What I need is a good API, preferrably typesafe with generics which allows modelling different kinds of trees (with some user data attached to verticies/edges) and run different algorithms and operations on these trees. For instance, traverse or balance.At the moment I'm not interested in visualization of trees.
2748719	[]	You might get some answers from this thread http://stackoverflow.com/questions/51574/good-java-graph-algorithm-libraryA couple Java Graph Libraries are:Graph Visualisation Library JGraphJava Graph Algorithm Library JGraphT If neither work you'll probably want to arrange graphs using a structure like below and run the algorithm on it.public class Node<T>{    public T NodeData;    public List<Edge> edges;}public class Edge{    public Node<S> Source;    public Node<D> Destination;    public int weight;}
2752420	[]	The Stanford Parser just returns a list of dependencies between word tokens.  (We do this to avoid external library dependencies.)  But if you want to manipulate the dependencies, you'll almost certainly want to put them in a graph data structure.  We usually use jgrapht: http://jgrapht.sourceforge.net/
2845736	[]	Not in the standard libraries, but there are lots of open source options.  JGraphT looks like it probably has what you need.
2914749	[]	I am not knowing how to use the classes written in netbeans for one of my project . in which folder should i place the jgrapht package . will i have to write the import statement if yes then what do i write ?
2982014	[]	JGraphT and JGraph are another option.  JGraph is used for rendering graphs in the GUI and handling user interaction while JGraphT is the underlying graph model, data structures and algorithms.
3138922	[]	say you've created a project named 'myproject'. now you want to use jgrapht package in that project. just do the following:under 'myproject' there are four sub-directories,Source PackagesTest PackagesLibrariesTest Libraries'right click' on 'Libraries' directory. Now, a menu appears that offersAdd ProjectAdd LibraryAdd jar/folderPropertiesselect Add jar/folder. Now just locate where is your "jgrapht-jdk1.6.jar" file.hope it helps
3138976	[]	JGraphT package includes some examples to experiment oneself. HelloJGraphT.java is one of them. I can run it, without any error, in Netbeans6.0.1. But, when i use dos command prompt in the following way:javac -cp jgrapht-jdk1.6.jar HelloJGraphT.javait compiles. But, if i run it using:java HelloJGraphTit gives the following errors:Exception in thread "main" java.lang.NoClassDefFoundError: org/jgrapht/Graph  Caused by: java.lang.ClassNotFoundException: org.jgrapht.Graph          at java.net.URLClassLoader$1.run(Unknown Source)          at java.security.AccessController.doPrivileged(Native Method)          at java.net.URLClassLoader.findClass(Unknown Source)          at java.lang.ClassLoader.loadClass(Unknown Source)          at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)          at java.lang.ClassLoader.loadClass(Unknown Source)          at java.lang.ClassLoader.loadClassInternal(Unknown Source)Any clue?I'm using jdk 1.6
3938421	[]	Here is some very well-annotated Java source code implementing graph-theoretical objects and algorithms, hopefully relevant to your problem. (You probably want to start reading here.)Good luck!
3955825	[]	I know you're just trying to get your code to work, probably not looking for a library.  But FYI, you might look at JGraphT, which is a great graph library for Java.  There's a solid Dijkstra's implementation there, among other things.
4354402	[]	Check out JGraphT.
4366299	[]	I've found jgrapht pretty useful - it has all the major algorithms (e.g. Bellman-Ford, ...)
4638028	[]	The collection tdl is a list of typed dependencies.  For this sentence, it contains:det(screen-2, the-1)nsubj(great-7, screen-2)amod(4-5, iphone-4)prep_of(screen-2, 4-5)cop(great-7, is-6)(as you can see by trying it out online).So, the dependency you want, nsubj(great-7, screen-2) is right there in that list.  nsubj means that "screen" is the subject of "great".The collection of dependencies is just a Collection (List).  For doing more sophisticated further processing, people commonly want to make the dependencies into a graph structure that can be variously searched and traversed.  There are various ways of doing that.  We often use the (jgrapht)[http://www.jgrapht.org/] library.  But that's then code you are writing yourself.
4721586	[u'jar:stanford-corenlp-models-2010-11-06', u'split', u'main', u'properties', u'properties', u'tagger] ', u'tagger ', u'stanford', u'stanford', u'stanford', u'stanford', u'stanford', u'stanford', u'stanford', u'stanford', u'stanford', u'stanford', u'stanford', u'stanford', u'stanford', u'stanford', u'Main', u'', u'', u'']	I am trying to run the coreNLP package with the following programpackage corenlp;import edu.stanford.nlp.pipeline.*;import java.io.IOException;/** * * @author Karthi */public class Main {    /**     * @param args the command line arguments     */    public static void main(String[] args) throws IOException, ClassNotFoundException {        // TODO code application liogic here        String str="-cp stanford-corenlp-2010-11-12.jar:stanford-corenlp-models-2010-11-06.jar:xom-1.2.6.jar:jgrapht-0.7.3.jar -Xms3g edu.stanford.nlp.pipeline.StanfordCoreNLP [ -props <Main> ] -file <input.txt>";        args=str.split(" ");        StanfordCoreNLP scn=new StanfordCoreNLP();        scn.main(args);    }}I am not sure if the code itself is correct, but am getting the following error    Searching for resource: StanfordCoreNLP.propertiesSearching for resource: edu/stanford/nlp/pipeline/StanfordCoreNLP.propertiesLoading POS Model [edu/stanford/nlp/models/pos-tagger/wsj3t0-18-left3words/left3words-distsim-wsj-0-18.tagger] ... Loading default properties from trained tagger edu/stanford/nlp/models/pos-tagger/wsj3t0-18-left3words/left3words-distsim-wsj-0-18.taggerReading POS tagger model from edu/stanford/nlp/models/pos-tagger/wsj3t0-18-left3words/left3words-distsim-wsj-0-18.tagger ... Exception in thread "main" java.lang.OutOfMemoryError: Java heap space        at edu.stanford.nlp.tagger.maxent.MaxentTagger.readModelAndInit(MaxentTagger.java:704)        at edu.stanford.nlp.tagger.maxent.MaxentTagger.readModelAndInit(MaxentTagger.java:649)        at edu.stanford.nlp.tagger.maxent.MaxentTagger.<init>(MaxentTagger.java:268)        at edu.stanford.nlp.tagger.maxent.MaxentTagger.<init>(MaxentTagger.java:228)        at edu.stanford.nlp.pipeline.POSTaggerAnnotator.loadModel(POSTaggerAnnotator.java:57)        at edu.stanford.nlp.pipeline.POSTaggerAnnotator.<init>(POSTaggerAnnotator.java:44)        at edu.stanford.nlp.pipeline.StanfordCoreNLP$4.create(StanfordCoreNLP.java:441)        at edu.stanford.nlp.pipeline.StanfordCoreNLP$4.create(StanfordCoreNLP.java:434)        at edu.stanford.nlp.pipeline.AnnotatorPool.get(AnnotatorPool.java:62)        at edu.stanford.nlp.pipeline.StanfordCoreNLP.construct(StanfordCoreNLP.java:309)        at edu.stanford.nlp.pipeline.StanfordCoreNLP.<init>(StanfordCoreNLP.java:347)        at edu.stanford.nlp.pipeline.StanfordCoreNLP.<init>(StanfordCoreNLP.java:337)        at edu.stanford.nlp.pipeline.StanfordCoreNLP.<init>(StanfordCoreNLP.java:329)        at edu.stanford.nlp.pipeline.StanfordCoreNLP.<init>(StanfordCoreNLP.java:319)        at corenlp.Main.main(Main.java:22)Java Result: 1I tried giving these values in VM options in netbeans, but for each value i am getting error-Xms3grun:Error occurred during initialization of VMIncompatible initial and maximum heap sizes specifiedJava Result: 1BUILD SUCCESSFUL (total time: 0 seconds)-Xmx3grun:Error occurred during initialization of VMCould not create the Java virtual machine.Could not reserve enough space for object heapJava Result: 1BUILD SUCCESSFUL (total time: 0 seconds)-Xms3g -Xmx4grun:Could not create the Java virtual machine.Invalid maximum heap size: -Xmx4gThe specified size exceeds the maximum representable size.Java Result: 1BUILD SUCCESSFUL (total time: 0 seconds)
4979168	[u'util']	The java.util package contains data structures to organize data of any kind. It deals basically with abstract data structures (like List, Set, Map) which are defined via their methods and behavior (e.g. a Set does contain no elements twice, a List maintains order and allows duplicates, etc.).You as a developer are free to choose which implementation of these data structures are best suited for the kind of data you deal with (HashSet vs. TreeSet / LinkedList vs. ArrayList / etc.). For example for Sets and Maps you may choose between hash-based implementations and tree-based implementations, which may or may not be suited for what you want to do (in most cases a hash-based implementation will be the best choice, while sometimes, when order is important, a tree may be better suited for your needs - See also HashSet vs TreeSet (here at Stackoverflow)).If you are thinking of a Tree as a special kind of Graph (which it is), than youre interested in specific properties which apply to graphs, not to collections in general (which, essentially, are lists, and are in turn used to implement things like graphs).As mentioned in this thread, if youre interested in modeling Graphs, there are plenty of choices for Graph libraries. Personally I can recommend JGraphT.I dont know why there is no graph library within the JDK (and I dont know whether thats a good thing to ask?), but I guess Sun decided to leave this to developers, since most applications that require graphs also require very unique implementations.
5019707	[]	Since your sample picture is a directed graph, JGraph would be a nice tool to use. An other great option is JGraphT. Both links have sample code. The second link uses an applet, so you can see directly the graph and the necessary code, in order to create it. JGraph is very similar.
5030559	[]	JGraph is a nice tool. An other great option is JGraphT. But if you want better interactivity and Dijkstra short paths etc. then you need JUNG2. JUNG2 allows you to have any kind of vertices and edges. Your graph is created with generics, like this: Graph<V, E>. You can use any class you may need for V (vertex) and E (edge). Scaling and transforming is also easy to implement and very flexible. 
5334370	[u'decode', u'class);', u'init', u'getContentPane', u'setTitle', u'setDefaultCloseOperation', u'pack', u'setVisible', u'class);', u'add', u'indexOf', u'substring', u'parseInt', u'addVertex', u'indexOf', u'substring', u'parseInt', u'indexOf', u'substring', u'parseInt', u'indexOf', u'substring', u'parseInt', u'length', u'indexOf', u'substring', u'parseInt', u'charAt', u'indexOf', u'substring', u'parseInt', u'out', u'addEdge', u'out', u'addEdge', u'setPreferredSize', u'decode', u'setBackground', u'getVertexCell', u'getAttributes', u'getBounds', u'Double', u'getWidth', u'getHeight', u'setBounds', u'put', u'edit', u'']	Is it possible to add edges to a graph through the use of a loop?  I am parsing a String to determine the appropriate edges and labels.  For some reason it will only add the edge for the first round of the while loop used to iterate through the String.  For all of the others the following message appears...Warning: an edge was deleted because the underlying JGraphT graph refused to create it. This situation can happen when a constraint of the underlying graph is violated, e.g., an attempt to add a parallel edge or a self-loop to a graph that forbids them. To avoid this message, make sure to use a suitable underlying JGraphT graph.import java.awt.*;import java.awt.geom.*;import javax.swing.*;import org.jgraph.*;import org.jgraph.graph.*;import org.jgrapht.*;import org.jgrapht.ext.*;import org.jgrapht.graph.*;// resolve ambiguityimport org.jgrapht.graph.DefaultEdge;public class JGraphAdapterDemo    extends JApplet{    private static final long serialVersionUID = 3256444702936019250L;    private static final Color DEFAULT_BG_COLOR = Color.decode("#FAFBFF");    private static final Dimension DEFAULT_SIZE = new Dimension(530, 320);    static ListenableGraph<String, String> g =        new ListenableDirectedMultigraph<String, String>(String.class);    static int [] finalStates = new int[10];    static int startState = 0;    static char tran = ' ';    static int endState = 0;    private JGraphModelAdapter<String,String> jgAdapter;    public static void main(String [] args)    {        JGraphAdapterDemo applet = new JGraphAdapterDemo();        applet.init();        JFrame frame = new JFrame();        frame.getContentPane().add(applet);        frame.setTitle("JGraphT Adapter to JGraph Demo");        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);        frame.pack();        frame.setVisible(true);    }    public void init()    {        // create a JGraphT graph        ListenableGraph<String, String> g =            new ListenableDirectedMultigraph<String, String>(String.class);        // create a visualization using JGraph, via an adapter        jgAdapter = new JGraphModelAdapter<String, String>(g);        JGraph jgraph = new JGraph(jgAdapter);        adjustDisplaySettings(jgraph);        getContentPane().add(jgraph);        resize(DEFAULT_SIZE);        int numStates = 4;        int numSymbols;        int currentState;        int i = 0;            String input = "4 2 0 2 -1 0 a 1 1 b 3 2 c 2 3 c 3 -1";     //place input String here            int readInt = 0;            int j = 0;            String str = "";            int place = 0;            String fState;            //read in numStates, numSymbols, initialState            i=0;            //parse string             i = input.indexOf(" ",0);            str = input.substring(0,i); //number of states            numStates = Integer.parseInt(str);  //convert to int            for(int k = 0; k< numStates; k++){                g.addVertex("q"+k);            }            i++;            j = i;            i=input.indexOf(" ",j);            str = input.substring(j,i); //number of symbols            numSymbols = Integer.parseInt(str);            i++;            j = i;            i=input.indexOf(" ",j);            str = input.substring(j,i); //initial state            currentState = Integer.parseInt(str);               i++;            j = i;                  //read in finalStates            while(readInt!=-1){                i=input.indexOf(" ",j);                fState = input.substring(j,i);  //a final state                readInt = Integer.parseInt(fState);                if(readInt!=-1){                    finalStates[place] = readInt;                    i++;                    j = i;                    place++;                }//end if            }//end while            i++;            j = i;            String sState;            String eState;            while(startState!=-1&& j<(input.length()-2)){           //until end of file                i=input.indexOf(" ",j);                sState = input.substring(j,i);  //start state                startState = Integer.parseInt(sState);  //convert to int                if(startState!=-1){                                 i++;                    j = i;                    String cStr = "";                    tran = input.charAt(i);         //transition                    cStr = cStr + tran;                    i = i+2;                    j=i;                            i=input.indexOf(" ",j);                     eState = input.substring(j,i);      //end state                    endState = Integer.parseInt(eState);                    i++;                    j=i;                    String one = "q"+startState;                    String two = "q"+endState;                    System.out.println(one+ two +" "+cStr);                    g.addEdge(one, two, cStr);                    //drawEdge(one, two, cStr);                }//end if            }//end while    }    public static void drawEdge(String v, String v1, String label){        System.out.println(v +" "+v1+ " "+label);        g.addEdge(v,v1,label);    }    private void adjustDisplaySettings(JGraph jg)    {        jg.setPreferredSize(DEFAULT_SIZE);        Color c = DEFAULT_BG_COLOR;        String colorStr = null;        try {            colorStr = getParameter("bgcolor");        } catch (Exception e) {        }        if (colorStr != null) {            c = Color.decode(colorStr);        }        jg.setBackground(c);    }    @SuppressWarnings("unchecked") // FIXME hb 28-nov-05: See FIXME below    private void positionVertexAt(Object vertex, int x, int y)    {        DefaultGraphCell cell = jgAdapter.getVertexCell(vertex);        AttributeMap attr = cell.getAttributes();        Rectangle2D bounds = GraphConstants.getBounds(attr);        Rectangle2D newBounds =            new Rectangle2D.Double(                x,                y,                bounds.getWidth(),                bounds.getHeight());        GraphConstants.setBounds(attr, newBounds);        // TODO: Clean up generics once JGraph goes generic        AttributeMap cellAttr = new AttributeMap();        cellAttr.put(cell, attr);        jgAdapter.edit(cellAttr, null, null, null);    }    //~ Inner Classes ----------------------------------------------------------    /**     * a listenable directed multigraph that allows loops and parallel edges.    // */    private static class ListenableDirectedMultigraph<V, E>    extends DefaultListenableGraph<V, E>    implements DirectedGraph<V, E>    {    private static final long serialVersionUID = 1L;    ListenableDirectedMultigraph(Class<E> edgeClass)        {        super(new DirectedMultigraph<V, E>(edgeClass));        }    }}
5406224	[u'', u'class);', u'addVertex', u'addVertex', u'addVertex', u'addEdge', u'out', u'lang', u'jgrapht', u'Network', u'TestNetwork', u'hashCode']	Let's Say I have  MyClass{ private LargeMatrix mtrx; hashCode(){...}}JGraphT (maybe all Graph data structures) seems to be using Hash table to map the vertices. So will that affect the speed when I'm using the MyClass instead of String l1,l2,l3 ? What are the pros and cons in that case ? Should I override hashcode(remove matrix hashcode ) ? Is there a graph that uses references instead of hashtable ?so My code was: package ann;import org.jgrapht.DirectedGraph;import org.jgrapht.graph.DefaultEdge;import org.jgrapht.graph.SimpleDirectedGraph;/** * @author marmoush *  */public class Network{    DirectedGraph<String, DefaultEdge>  diGraph;    String l1="hello1";    String l2="hello1";    String l3="hello3";    /**     *      */    public Network()    {        diGraph = new SimpleDirectedGraph<String, DefaultEdge>(DefaultEdge.class);        diGraph.addVertex(l1);        diGraph.addVertex(l2);        diGraph.addVertex(l3);        diGraph.addEdge(l1, l2);        System.out.println(diGraph.containsEdge(l1,l2));        // TODO Auto-generated constructor stub    }}Exception in thread "main" java.lang.IllegalArgumentException: loops not allowed    at org.jgrapht.graph.AbstractBaseGraph.addEdge(Unknown Source)    at ann.Network.<init>(Network.java:28)    at test.TestNetwork.main(TestNetwork.java:9)Because (I think) l1.hashCode()==l2.hashCode() EDIT:Matrices might be zeros sometimes or ones, they change over time so I would try to come up with something that differentiate between those objects, and that seems to be stupid solution. Why can't the graph just select vertices by there position in a vector or something ? Should I reinvent the wheel ? with a graph that uses Vectors instead of hashtables ? or there is a work around ?
5450155	[]	The framework I'm working with consists of stateful services that have dependencies on other services, forming a directed acyclic graph http://en.wikipedia.org/wiki/Directed_acyclic_graphI want to start the services as efficiently as possible.  This means starting services in parallel, where possible.  For example, in the graph on the wikipedia link.  I would start 3, 5, and 7 at the same time, since they don't have any dependencies.  I've seen topological sorts, but that alone doesn't tell you what can be started in parallel.  I'm looking for a library/api to group services, something like:ab, c, d,e.f, g,hWhere this tells me to start "a" first, then "b", "c", and "d" in parallel, then "e", and so on.I've found a few libraries that model Vertices, but nothing does the grouping I'm looking for.  So far I've found some implementations for directed graph, however, I need a permissive license (e.g. non gpl).  I've found ComputeNodeOrder http://www.docjar.com/docs/api/org/eclipse/osgi/internal/resolver/ComputeNodeOrder.Digraph.html (from equinox org.eclipse.osgi_3.6.2.R36x_v20110210), Jgrapht (lgpl) http://www.jgrapht.org/javadoc/, Jung http://jung.sourceforge.net/index.html, Plexus http://plexus.codehaus.org/plexus-utils/apidocs/org/codehaus/plexus/util/dag/DAG.html but not sure if any/all of these will do what I need.
5618877	[]	That really depends on how you are representing your graph. I would recommend using a third party library such as JGraph or JGraphT. If you can't use a third party library (e.g. for homework or you just want to learn) then you need to define your own Graph class. Two common representations are connectivity matrices and adjacency lists. Either representations could work for you. Creating a new vertex is easy, just call addVertex on the JGraph graph. That will return a vertex object. You will need to provide it with two parameters, a name and a data object. For the name either use an incrementing id number or the original line string. You'll then need to create a data object out of the three strings, providing a custom data object makes the most sense to me.  I would keep track of the last node inserted (starts null) and then create edges between vertices whenever the previous i s not null. Making sure to update the previous vertex every iteration.
5683847	[]	A few suggestions.The underlying data structure you want is probably a map (with HashMap probably being the best concrete implementation), not a set. The key should be the (source, target) pair, and the value can be your Edge object. If you're super concerned about duplication, there are ways of dealing with that, one of which is to actually store only weight as the value.Second, this is calling out for a Graph class. If you design the interface well, it hides the internal implementation details. I recommend highly using composition rather than inheritance. In other words, your Graph has-a map, rather than is-a map.Also take a look at existing code such as JGraphT, which already has a weighted directed graph, the same beast as you describe above. Sometimes it's better not to reinvent things from scratch.Good luck.
5776338	[]	I'm trying to implement the 0-extension algorithm.It is used to colour a graph with a number of colours where some nodes already have a colour assigned and where every edge has a distance.  The algorithm calculates an assignment of colours so that neighbouring nodes with the same colour have as much distance between them as possible.I found this paper explaining the algorithm: http://citeseer.ist.psu.edu/viewdoc/download;jsessionid=1FBA2D22588CABDAA8ECF73B41BD3D72?doi=10.1.1.100.8049&rep=rep1&type=pdfbut I don't see how I need to implement it.I already asked this question on the "theoretical computer science" site, but halfway the discussion we went beyond the site's scope:http://cstheory.stackexchange.com/questions/6163/explain-0-extension-algorithmCan anyone explain this algorithm in layman's terms?I'm planning to make the final code opensource in the jgrapht package.
5784004	[u'jar:stanford-corenlp-models-2010-11-06']	This error simply means the program is not finding the data models it needs to run.  They need to be on your classpath.  If you're in the distribution directory, you can do this with a command like:java -cp stanford-corenlp-2010-11-12.jar:stanford-corenlp-models-2010-11-06.jar:xom.jar:jgrapht.jar -Xmx3g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -file input.txtThe second jar contains the models. If you're using Windows, replace the colons above with semicolons.
5798436	[]	I am wondering is there any open source Java library for minimum cost flow problem? I have checked jgrapht and it is not helping. Does Any body know such library?Regards,Luke
6163369	[]	Take a look:JGraphTJUNGGyWorksBFGGEFgmgraphlibScene GraphPiccolo2DList of various librariesJGraph
6254985	[]	I don't know if it can help but take a look at JGraphT.
6392366	[]	I'm looking for a Directed Acyclic Graph implementation in Objective C. I've had enormous success with jGraphT in the Java space. I'm using a DirectedGraph to model a power subsystem, and now I need equivalent code for iPhone/iPad. Does such a thing exist in an open source library? Or do I need to roll my own?
6477295	[]	I would suggest a topological sort.And after a quick check, it is easy to do with JGraphT. Also notice:For this iterator to work correctly the graph must be acyclic, and must not be modified during iteration. Currently there are no means to ensure that, nor to fail-fast; the results with cyclic input (including self-loops) or concurrent modifications are undefined. To precheck a graph for cycles, consider using CycleDetector or StrongConnectivityInspector.
6566312	[]	You may find this useful, I have used it in pasthttp://www.jgrapht.org
6749472	[]	Have a look at this previous question, which essentially suggests using JGraphT. It will obviously make 1) easy and has cycle detectors for part 3). Don't think it will do part 3 for you but all you need to do is get all vertexes with an out degree (or in degree depending on your representation) of 0 and start those tasks. When a task finishes then delete the vertex from the graph and start again.
6797230	[]	It's late night here and I haven't ready your question completely. So, I apologize if this doesn't make any sense, but do have you considered using a graph data structure?  If the graph data structure is indeed a possible solution, you might want to check out jGraphT
6921384	[]	This maybe way overblown for what you need, but it can support what you want:There is a graph traversal language: Gremlin.  Typically bolted on top of something like Neo4j, but any graph data structure (e.g. a singly rooted directed tree) can be wrapped to support the API.  Take a look at Blueprints projects to find out how it is done. [edit: for something less heavy]Perhaps JGraphT is what you want.  Also take a look at this question on SO. It is not an exact duplicate, but you should find it helpful.
7094506	[u'8', u'8', u'class);']	I use jgrapht. I will generate subgraphs.I think jgrapht-0.8.2/jgrapht-0.8.2/src/org/jgrapht/graph/DirectedSubgraph.java is useful for this purpose. But I could not find  how can I use this class? Can you help me ?For example: jgrapht-0.8.2/jgrapht-0.8.2/src/org/jgrapht/demo/HelloJGraphT.java A directed graph constructor is used like that in HelloJGraphT.java class DirectedGraph<String, DefaultEdge> g =            new DefaultDirectedGraph<String, DefaultEdge>(DefaultEdge.class);
7108395	[]	Check these libraries : JUNGjgraphjgrapht
7197466	[]	JGrapht is a common Java library for graphs. dijkstra's algorithm is implemented too.
7222313	[]	Take a look at JGraphT: it provides the data structures and you can then render that using JGraph.
7372110	[]	I've just started using eclim to code java. Everything seems to work fine except for the .classpath commands, such as :NewJarEntry or :NewSrcEntry. When I try these, I get, for example:E492: Not an editor command: NewJarEntry jgrapht.jarAny idea why this might be happening?Thank you
7541785	[u'lang', u'jgrapht']	I'm new Java and am using jGraphT to create a SimpleDirectedWeightedGraph. I'm getting this error when trying to set weights on my edges after creating and adding them to the graph:Exception in thread "main" java.lang.ClassCastException: ObservationsDAG$ObservationsDAGEdge cannot be cast to org.jgrapht.graph.DefaultWeightedEdgeat org.jgrapht.graph.AbstractBaseGraph.setEdgeWeight(Unknown Source)I am assuming I need to do something in my ObservationsDAGEdge class here, but from looking at the JGraphT docs, I am stuck as to what that is. Does my edge class need weight instance variable and do I need to provide getEdgeWeight() and setEdgeWeight()?
7715633	[]	JUNG graph library should have this. If not then check JGraphT as wellRelated SO post: Good Java graph algorithm library?
7938207	[]	I am not aware of any single Java library that contains all of those components. There is however a very good library called JGraphT which provides a very nice and comprehensive API for graphs in Java. It also includes some structures that are related to that such as a FibonacciHeap class. They also have a very comprehensive JavaDoc. The feature list from the JGraphT website lists:directed and undirected graphs. graphs with weighted / unweighted / labeled or any user-defined edges. various edge multiplicity options, including: simple-graphs, multigraphs, pseudographs. unmodifiable graphs - allow modules to provide "read-only" access to internal graphs. listenable graphs - allow external listeners to track modification events. subgraphs graphs that are auto-updating subgraph views on other graphs. all compositions of above graphs.
8200129	[]	heres a simple code exampleand heres a complete javadoc APIsee if you can figure it out from the example.if you can't get it to work ask a question that describes the specific problem and what you tried...
8200007	[u'class);', u'addVertex', u'addEdge']	I want to create a graph using Jgraph, and later use that graph to find the minimum spanning Tree. How to create a graph using Jgraph?.this is what I have implemented.  Can you please tell me how to use kruskals algorithm from the package. I googled it, but couldn't find any information on it.import org.jgrapht.*;import org.jgrapht.graph.*;public class MyGraph {    UndirectedGraph<String, DefaultEdge> g = new SimpleGraph<String, DefaultEdge>     (DefaultEdge.class);    public void addVertex(String name)  {        // name=new String();        g.addVertex(name);    }    public void addEdge(String v1,String v2) {        g.addEdge(v1, v2);    }    public UndirectedGraph<String, DefaultEdge> getGraph() {        return g;    }}
8258123	[u'hasNext', u'next']	ClosestFirstIterator may help you out. It builds a spanning tree using FibonacciHeap while iterating over the vertices.ClosestFirstIterator provides the methods getShortestPathLength() and getSpanningTreeEdge() to get parts of the minimum spanning tree.// instantiate the iteratorClosestFirstIterator<V,E> it = new ClosestFirstIterator<V,E>(graph, start_vertex);// iterate to build the treewhile(it.hasNext())  it.next();// querydouble distance = getShortestPathLength(vertex);E next_edge = getSpanningTreeEdge(vertex);
8308857	[]	Best bet would be to render them on the server (or use it as an applet) with JGraphT.
8416292	[]	You can also use JGraphT.You can find relevant discussion here: Stackoverflow - Good Java Graph Algorithm Library
8466150	[]	Does C language have to automatic generate some weight graph library?and can automatic list in array or some data structure?Just like the JAVA's jgrapht library http://www.jgrapht.org/
8622678	[]	Take a look at Open source libraries to design directed graphs. Their suggestion was to use JGraphT. The javadoc shows that they have implemented a wide range of graph operations, including shortest path.
8627174	[]	I've seen JGraphT used for working with graphs, with excellent results.Side note, a tree is "just" a specific type of graph.
8642747	[]	JGraphT can represent your graph structure and can use JGraph for visualisation.For an example visualization, look at this.
8727054	[u'4', u'sun', u'sun', u'sun', u'sun', u'apache', u'jgrapht_0', u'jgrapht', u'misc_0', u'apache', u'artifactId}</Bundle-SymbolicName>', u'artifactId}</Bundle-Name>', u'kenai', u'sun', u'jruby', u'joni', u'4', u'0', u'sun', u'sun', u'sun', u'sun', u'management; version="0', u'script; version="0', u'swing', u'apache', u'apache', u'jgrapht; version="0', u'jgrapht', u'jruby', u'jruby', u'jruby', u'jruby', u'misc; version="0', u'sun', u'sun', u'sun', u'sun', u'apache', u'jgrapht_0', u'jgrapht', u'jruby', u'jruby', u'jruby', u'jruby', u'misc_0', u'apache', u'artifactId}</Bundle-SymbolicName>', u'artifactId}</Bundle-Name>', u'kenai', u'sun', u'jruby', u'joni', u'sun', u'sun', u'sun', u'sun', u'apache', u'jgrapht', u'jgrapht', u'misc']	I wrote an OSGi bundle using "maven-bundle-plugin"(where i try to make the "jruby-complete-1.4.0.jar" as osgi bundle, note that only dependency is  "jruby-complete-1.4.0.jar")..When i check the bundle via osgi console using diag command( #diag XX) it says some packages are missing;osgi> diag 51reference:file:dropins/jruby-complete-1.4.0.wso2v1.jar [51]  Direct constraints which are unresolved:    Missing optionally imported package com.sun.mirror.apt_0.0.0.    Missing optionally imported package com.sun.mirror.declaration_0.0.0.    Missing optionally imported package com.sun.mirror.type_0.0.0.    Missing optionally imported package com.sun.mirror.util_0.0.0.    Missing optionally imported package org.apache.bsf.util_0.0.0.    Missing optionally imported package org.jgrapht_0.0.0.    Missing optionally imported package org.jgrapht.graph_0.0.0.    Missing optionally imported package sun.misc_0.0.0.My pom is like;<plugin>                <groupId>org.apache.felix</groupId>                <artifactId>maven-bundle-plugin</artifactId>                <extensions>true</extensions>                <configuration>                    <instructions>                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>                        <Bundle-Name>${project.artifactId}</Bundle-Name>                        <Export-Package>                            com.kenai.*,                            com.sun.jna.*,                            org.jruby.*,                            org.joni.*,                                                    </Export-Package>                        <Import-Package>                                        *;resolution:=optional                        </Import-Package>                        <Fragment-Host>bsf-all</Fragment-Host>            <DynamicImport-Package>*</DynamicImport-Package>                <Embed-Dependency>*;scope=compile|runtime;inline=true;</Embed-Dependency>                           </instructions>                </configuration>            </plugin>So, i tried add those "optional missing packages"  in <Import-Package> option as in pom[2]But it gives more issues like;ference:file:dropins/jruby-complete-1.4.0.wso2v1.jar [51]Constraints from the fragment conflict with the host: Import-Package: *; version="0.0.0"Constraints from the fragment conflict with the host: Import-Package: com.sun.mirror.apt; version="0.0.0"Constraints from the fragment conflict with the host: Import-Package: com.sun.mirror.declaration; version="0.0.0"Constraints from the fragment conflict with the host: Import-Package: com.sun.mirror.type; version="0.0.0"Constraints from the fragment conflict with the host: Import-Package: com.sun.mirror.util; version="0.0.0"Constraints from the fragment conflict with the host: Import-Package: javax.management; version="0.0.0"Constraints from the fragment conflict with the host: Import-Package: javax.script; version="0.0.0"Constraints from the fragment conflict with the host: Import-Package: javax.swing.plaf.basic; version="0.0.0"Constraints from the fragment conflict with the host: Import-Package: org.apache.bsf; version="0.0.0"Constraints from the fragment conflict with the host: Import-Package: org.apache.bsf.util; version="0.0.0"Constraints from the fragment conflict with the host: Import-Package: org.jgrapht; version="0.0.0"Constraints from the fragment conflict with the host: Import-Package: org.jgrapht.graph; version="0.0.0"Constraints from the fragment conflict with the host: Import-Package: org.jruby.anno; version="[1.4.0,2.0.0)"Constraints from the fragment conflict with the host: Import-Package: org.jruby.exceptions; version="[1.4.0,2.0.0)"Constraints from the fragment conflict with the host: Import-Package: org.jruby.runtime; version="[1.4.0,2.0.0)"Constraints from the fragment conflict with the host: Import-Package: org.jruby.runtime.builtin; version="[1.4.0,2.0.0)"Constraints from the fragment conflict with the host: Import-Package: sun.misc; version="0.0.0"Direct constraints which are unresolved:  Missing imported package com.sun.mirror.apt_0.0.0.  Missing imported package com.sun.mirror.declaration_0.0.0.  Missing imported package com.sun.mirror.type_0.0.0.  Missing imported package com.sun.mirror.util_0.0.0.  Missing imported package org.apache.bsf.util_0.0.0.  Missing imported package org.jgrapht_0.0.0.  Missing imported package org.jgrapht.graph_0.0.0.  Missing optionally imported package org.jruby.anno_[1.4.0,2.0.0).  Missing optionally imported package org.jruby.exceptions_[1.4.0,2.0.0).  Missing optionally imported package org.jruby.runtime_[1.4.0,2.0.0).  Missing optionally imported package org.jruby.runtime.builtin_[1.4.0,2.0.0).  Missing imported package sun.misc_0.0.0.  pom.xml [2]; <plugin>                <groupId>org.apache.felix</groupId>                <artifactId>maven-bundle-plugin</artifactId>                <extensions>true</extensions>                <configuration>                    <instructions>                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>                        <Bundle-Name>${project.artifactId}</Bundle-Name>                        <Export-Package>                            com.kenai.*,                            com.sun.jna.*,                            org.jruby.*,                            org.joni.*,                                                    </Export-Package>                        <Import-Package>                                        com.sun.mirror.apt.*,                        com.sun.mirror.declaration.*,                        com.sun.mirror.type.*,                        com.sun.mirror.util.*,                        org.apache.bsf.util.*,                        org.jgrapht.*,                        org.jgrapht.graph.*,                        sun.misc.*,                          *;resolution:=optional                        </Import-Package>                        <Fragment-Host>bsf-all</Fragment-Host>            <DynamicImport-Package>*</DynamicImport-Package>                <Embed-Dependency>*;scope=compile|runtime;inline=true;</Embed-Dependency>                           </instructions>                </configuration>            </plugin>How can i overcome above issue? I'm exporting some packages which, i need for other bundles...Am i doing anything wrong here?
8728282	[u'jgrapht', u'misc', u'osgi']	Those packages are optional imports, so there isn't necessarily any problem here.UPDATE after poster amended question:These dependencies have been discovered by the bundle plugin by inspecting the bytecode in your bundle. They would normally be mandatory dependencies but for some reason you have made them optional by adding <Import-Package>*;resolution:=optional</Import-Package>. Not sure why you did that but never mind...The proper way to resolve packages is to find a bundle that exports them. For example, your bundle needs the package org.jgrapht. Therefore you need to install the bundle that exports that package.The one exception is the sun.misc package, which obviously comes from the JRE but is not supposed to be used in general. OSGi framework do not make this package available by default, but you can configure them by adding the following setting:org.osgi.framework.system.packages.extra=sun.miscThe exact file or location to place this setting depends on your OSGi framework -- you haven't specified which one you are using, so whatever it is please check its documentation on how to pass configuration settings.
8870765	[]	But why they did not use a Fibonnaci heap?Probably because those heaps have a lot more overhead per entry than binary keys.Also, is there an implementation of Fibonnaci heap in Java.util?No, butThere is graphmaker from Nathan Fiedler - GPL and with good test coverage,but have a look into this nice blog post about it and aboutproblems a fibonacci impl can have. In this post a lot of other Java implementions are referenced.    There is some code with unit tests hereThe JGraphT project (also Nathan Fiedler) and also with (some minor) tests but LGPL.    Last but not least there is Neo4j - GPL - no tests.
8994189	[]	I'm  looking for a class in jgrapht that will allow me to construct a graph dynamically and  generate  new edge  in  the given graph  at run time based on  branch of the algorithm . I need to implements the  algorithm branch & bound  I saw this class ListenableDirectedWeightedGraph Is it possible to add edges to a graph through the use of a loop with ListenableDirectedWeightedGraph ?  
9355326	[u'python', u'class', u'/jgrapht/lib/jgraph', u'/jython/lib/jython-2']	I am trying to call a python method in java, similar functionality as Unresolved import org.python / working with jython and java?However, I am using ant to compile and run my files. using import org.python.util will give me this error package org.python.util does not existI can see that python.org.util exists in jython-2.5.0.jar.So, here is the class path I have in my build.xml ant file:classpath="${java.class.path}:./jgrapht/lib/jgrapht-jdk1.5.jar:\    ./jgrapht/lib/jgraph.jar:./jgraphx/lib/jgraphx.jar:\    ./jython/lib/jython-2.5.0.jar:./colt/lib/colt.jar:."and I also I added the path to jython jar files to my class path. i.e. looks like echo $path gives me all the required paths. Is there anything missing here that I am not aware of?
9515012	[]	I know of the following libraries:the Java Universal Network/Graph Framewor,a library that provides a common and extendible language for the modeling, analysis, and visualization of data that can be represented as a graph or network.salvo graph implementation, focusing on graph data structures.last and less least, JGraphT, a big library that provides mathematical graph-theory objects and algorithms.But I'm sure there are thousands more, for specific areas. If you have some particular application in mind, maybe post that in your question, too...
9544980	[]	This is not really specific to Java. The two most common representations are adjacency matrix and list. Details hereIf you want a library, JGraphT is nice
9866046	[]	If you're looking for graphs as in data plots or pie charts or something like that, check out charts4j or the Google chart API.If you're meaning something like graph theory, check out JGraphT.No need to reinvent the wheel.
9880017	[]	Your problem is known in the computing world as a graph search problem, looking for the shortest path between two nodes. Graphs here are not the x and y axis graphs from math, but Nodes (or Locations in your example) connected by edges.Dijkstra's algorithm is the most commonly used to find the shortest path between two nodes, and for your use case it is simplified slightly because the edges in your scenario all have a weight (or cost) of one. An implementation of this is available in JGraphT, though I'm not sure how easy that is to include in a J2ME environment.
9930446	[]	I'm working on a project which will involve running algorithms on large graphs.  The largest two have around 300k and 600k vertices (fairly sparse I think).  I'm hoping to find a java library that can handle graphs that large, and also trees of a somewhat smaller size, as one of the algorithms I'll be using involves decomposing a graph into a tree.  Ideally the library would also include breadth first search and Dijkstra's or other shortest-path algorithms.Based on another question, I've been looking at a few libraries (JGraphT, JUNG, jdsl, yworks) but I'm having a hard time finding out how many vertices they can realistically handle.  Looking at their documentation, all I could find was a bit in the JUNG FAQ that said it could easily handle graphs of upwards of 150k vertices, which is still quite a bit smaller than my graphs...  I'm hoping someone here has used one or more of these libraries and can tell me if it'll handle the graph sizes I need, or if there's some other library that would be better.For the record I don't need any visualization tools; this is strictly about representing the graphs and trees in data structures and running algorithms on them.Background if anyone really cares: for a class I'm supposed to implement an algorithm described in a research paper, and run the experiments run in the paper as best I can.  The paper and datasets I'll be using can be found here. My professor says I can use any library I can find as long as I can tell what the time/space complexity of the algorithms/data structures are.
9943438	[]	neo4j is the "standard" graph database (see also).  you can abstract away from a particular implementation (so that you can change the database without changing you code) using blueprints.alternatively, if the database part is not so important, a library like jgrapht (i wasn't aware of jung, from chris's answer, but it looks similar) gives you access to the usual algorithms for in-memory structures.[neo4j licencing]
9952953	[]	if you want to examine existing implementations, there's always jgrapht, which i believe is open source.
10064468	[u'x == x)', u'y == y))', u'addEdge ', u'addVertex ']	You might want to consider using JGraphTYou could just create an instance of the SimpleGraph and populate it with nodes and edges:// Define your node, override 'equals' and 'hashCode'public class Node {  public int x, y;  Node (int _x, int _y) {    x = _x;    y = _y;  }  @Override public boolean equals (Object other) {    if ( (other.x == x)         && (other.y == y))      return true;    return false;  }  /* Override hashCode also */}// Later on, you just add edges and vertices to your graphSimpleGraph<Node,Edge> sg;sg.addEdge (...);sg.addVertex (...);Finally, you can use DijkstraShortestPath to find whether or not a path exists:
10259551	[]	You can also use third party open source projects, such as JGraphT. It provides many simple and complicated graph structures and their visual representation. Also you dont have to deal with structural issues with this way.
10325275	[]	I suppose you should check JGraphT project, which also has many graph-based algorithms and sample codes, also it generalize your vertex/edge object representation!
10369914	[u'in);', u'out', u'nextInt', u'out', u'addVertex', u'out', u'next', u'next', u'addEdge', u'setEdgeWeight', u'out', u'nextInt', u'out', u'out', u'getSpanningTree', u'out', u'getSpanningTreeCost', u'class);', u'class); ', u'addVertex', u'addVertex', u'addEdge', u'addEdge', u'setEdgeWeight', u'out', u'out', u'out']	This the main class where user input such as no of edges and vertices is taken to create a graph to the Spanning tree of the graph created. Below is the complete answer to this question. import java.util.Scanner;public class Main {    public static void main(String args[]) {        int x;        Scanner sc=new Scanner(System.in);        MyGraph my=new MyGraph();        System.out.println("Enter the no of vertices");        int no_of_ver=sc.nextInt();        for(int i=1;i<=no_of_ver;i++) {            System.out.println("Enter vertex"+i);            my.addVertex(sc.next());        }        do {            System.out.println("Enter the edges");            String e1=sc.next();            String e2=sc.next();            my.addEdge(e1, e2);            // my.setEdgeWeight();            System.out.println("Continue... Yes:1 ********** No:0");            x=sc.nextInt();        } while(x==1);        System.out.println("Graph\n"+my.getGraph().toString());        System.out.println("\n\n**********Spanning Tree*********");        my.getSpanningTree();        // System.out.println("\nSpanning Tree Cost");        //my.getSpanningTreeCost();    }}Below MyGraph class does all the work of creating the graph by taking edges and calculating the spanning tree. I have used jgrapht library to create graphimport org.jgrapht.*;import org.jgrapht.graph.*;import org.jgrapht.alg.KruskalMinimumSpanningTree;public class MyGraph {    private UndirectedGraph<String, DefaultEdge> g = new SimpleGraph<String, DefaultEdge>(DefaultEdge.class);    static final double DEFAULT_EDGE_WEIGHT=19;    DefaultWeightedEdge>(DefaultWeightedEdge.class);     private DefaultWeightedEdge e1;    public void addVertex(String name) {        g.addVertex(name);        //graph.addVertex(name);    }    public void addEdge(String v1,String v2) {        g.addEdge(v1, v2);        // e1=graph.addEdge(v1, v2);    }    /*public void setEdgeWeight() {        graph.setEdgeWeight(e1, DEFAULT_EDGE_WEIGHT);              }*/    public UndirectedGraph<String, DefaultEdge> getGraph() {        return g;    }    /*public SimpleWeightedGraph<String,DefaultWeightedEdge> getGraph() {        return graph;    }*/    public void getSpanningTree() {        KruskalMinimumSpanningTree k=new KruskalMinimumSpanningTree(g);        System.out.println(k.getEdgeSet().toString());        //KruskalMinimumSpanningTree k1=new KruskalMinimumSpanningTree(graph);        //System.out.println(k1.getEdgeSet().toString());       }    /*public void getSpanningTreeCost() {        KruskalMinimumSpanningTree k=new KruskalMinimumSpanningTree(graph);        System.out.println(k.getSpanningTreeCost());    }*/ }
10474827	[]	I am working on a project involving anaphora resolution via Hobbs algorithm. I have parsed my text using the Stanford parser, and now I would like to manipulate the nodes in order to implement my algorithm.At the moment, I don't understand how to:Access a node based on its POS tag (e.g. I need to start with a pronoun - how do I get all pronouns?).Use visitors. I'm a bit of a noob of Java, but in C++ I needed to implement a Visitor functor and then work on its hooks. I could not find much for the Stanford Parser's Tree structure though. Is that jgrapht? If it is, could you provide me with some pointers at code snippets?
10550501	[]	Try jgrapht.  From the webpage:JGraphT is a free Java graph library that provides mathematical graph-theory objects and algorithms. JGraphT supports various types of graphs including:directed and undirected graphs.graphs with weighted / unweighted / labeled or any user-defined edges.various edge multiplicity options, including: simple-graphs, multigraphs, pseudographs.unmodifiable graphs - allow modules to provide "read-only" access to internal graphs.listenable graphs - allow external listeners to track modification events.subgraphs graphs that are auto-updating subgraph views on other graphs.all compositions of above graphs.Although powerful, JGraphT is designed to be simple and type-safe (via Java generics). For example, graph vertices can be of any objects. You can create graphs based on: Strings, URLs, XML documents, etc; you can even create graphs of graphs!Other SO users report success with Jung.  My careful 30 second review of their API suggests that you should start HERE.
10575185	[u'class);', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'getEdge', u'getEdge']	With jgrapht-0.8.3, the following works as expected:import org.jgrapht.UndirectedGraph;import org.jgrapht.graph.DefaultEdge;import org.jgrapht.graph.SimpleGraph;public class GraphTest {  public static void main(String[] args) {    UndirectedGraph<String, DefaultEdge> graph =      new SimpleGraph<String, DefaultEdge>(DefaultEdge.class);    String v1 = "v1";    String v2 = "v2";    String v3 = "v3";    String v4 = "v4";    graph.addVertex(v1);    graph.addVertex(v2);    graph.addVertex(v3);    graph.addVertex(v4);    graph.addEdge(v1, v2);    graph.addEdge(v2, v3);    graph.addEdge(v3, v4);    graph.addEdge(v4, v1);    if( graph.getEdge(v1, v2) != null) { System.out.println("SUCCESS"); }    if (graph.getEdge(v2,v4) == null)  { System.out.println("SUCCESS"); }  }}I getSUCCESSSUCCESSCan you clarify what problem you're having?
10739968	[]	JGraphT supports various types of graphs including:directed and undirected graphs.  graphs with weighted / unweighted / labeled or any user-defined edges. various edge multiplicity options, including: simple-graphs, multigraphs, pseudographs. unmodifiable graphs - allow modules to provide "read-only" access to internal graphs. listenable graphs - allow external listeners to track modification events. subgraphs graphs that are auto-updating subgraph views on other graphs. all compositions of above graphs. Although powerful, JGraphT is designed to be simple and type-safe (via Java generics). For example, graph vertices can be of any objects. You can create graphs based on: Strings, URLs, XML documents, etc; you can even create graphs of graphs! This code example shows how.Other features offered by JGraphT:graph visualization using the JGraph librarycomplete source code included, under the terms of the GNU Lesser General Public License.comprehensive Javadocs.easy extensibility.Official website: http://jgrapht.org/
10929402	[u'out']	you can print all the information of the graph using the function toString() over your graph, for example if you have a graph h, you can do it:System.out.println(h.toString());On this way you will see the graph in a line.On the other hand, you can visualize the graph allocating coordinates to the vertexs, for example with your graph:positionVertexAt(ODP, 130, 40);positionVertexAt(CCK, 60, 20);positionVertexAt(MFE, 240, 140);Problem, that you have to implement some function, you have a example in this link http://kickjava.com/src/org/jgrapht/demo/JGraphAdapterDemo.java.htm.I think is a little difficult, but you can create the nice graph visualization.In addition you can use the web http://www.graphviz.org where you can format the information of your graph like you did already and then the program build the graph, like in this example if you type this code (is the code of the example of the web):digraph finite_state_machine {rankdir=LR;size="8,5"node [shape = doublecircle]; LR_0 LR_3 LR_4 LR_8;node [shape = circle];LR_0 -> LR_2 [ label = "SS(B)" ];LR_0 -> LR_1 [ label = "SS(S)" ];LR_1 -> LR_3 [ label = "S($end)" ];LR_2 -> LR_6 [ label = "SS(b)" ];LR_2 -> LR_5 [ label = "SS(a)" ];LR_2 -> LR_4 [ label = "S(A)" ];LR_5 -> LR_7 [ label = "S(b)" ];LR_5 -> LR_5 [ label = "S(a)" ];LR_6 -> LR_6 [ label = "S(b)" ];LR_6 -> LR_5 [ label = "S(a)" ];LR_7 -> LR_8 [ label = "S(b)" ];LR_7 -> LR_5 [ label = "S(a)" ];LR_8 -> LR_6 [ label = "S(b)" ];LR_8 -> LR_5 [ label = "S(a)" ];}the program will build this graph : http://www.graphviz.org/content/fsmI write to you the web here : http://www.graphviz.org/.I hope I could help you, if I find more information or something easier I will tell you.Pd: Sorry for my English I hope you can understand all.
10954443	[]	Use JgraphT api for it. Find the link.
10994205	[]	There are not many libraries that export to Visio, but you could try this one http://jgrapht.org There should be a class in the library called VisioExporter. I don't know how much support it has but it's worth a try.
11124793	[u'decode', u'init', u'setPreferredSize', u'setHorizontalScrollBarPolicy', u'setVerticalScrollBarPolicy', u'getContentPane', u'add', u'setTitle', u'setDefaultCloseOperation', u'pack', u'setPreferredSize', u'add', u'run', u'out', u'createNestedMap', u'getGraphLayoutCache', u'getGraphLayoutCache', u'refresh', u'setVisible', u'setVisible', u'setVisible']	I'm writing my very first program in Java that actually does UI, so please bear with me if the answer to this is obvious.I'm using JGraph 5 (5.14) to visualize a graph created by JGrapht (0.8.3).I can create the graph with JGrapht just fine, and I believe it gets converted to JGraph OK using org.jgrapht.ext.JGraphModelAdapter.  The problem is, when the result is displayed in a window (I'm using a panel in a JApplet) all the vertices are displayed on top of another.Someone else had this problem (JGraph Layout Does Not Work) and I tried the solution presented there, but then only two nodes are displayed.  Basically, I just want the graph displayed in some way where the nodes are separate from each other.Some code is worth a thousand words, so here is what I currently have, which only displays two nodes (there are 219 in the graph):class ourGraphVisualizer extends JApplet{private static final Color DEFAULT_BG_COLOR = Color.decode("#FAFBFF");private static final Dimension DEFAULT_SIZE = new Dimension(1280, 1024);// this init overrides the JApplet.init().  Our class here extends JApplet so we can do the visualizationpublic void init(ListenableDirectedWeightedGraph<String, DefaultWeightedEdge> theGraph){    JGraphModelAdapter<String, DefaultWeightedEdge> jgAdapter;    JPanel panel = new JPanel();    panel.setPreferredSize(DEFAULT_SIZE);    JScrollPane scrollpane = new JScrollPane(panel);    scrollpane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);    scrollpane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);    this.getContentPane().add(scrollpane, BorderLayout.CENTER);    JFrame frame = new JFrame();    frame.add(this);    frame.setTitle("Call Graph, " + theGraph.vertexSet().size() + "nodes");    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);    frame.pack();    frame.setPreferredSize(DEFAULT_SIZE);    jgAdapter = new JGraphModelAdapter<String, DefaultWeightedEdge>(theGraph);    JGraph jgraph = new JGraph(jgAdapter);    panel.add(jgraph);    resize(DEFAULT_SIZE);    // Let's see if we can lay it out    JGraphFacade jgf = new JGraphFacade(jgraph);    JGraphFastOrganicLayout layoutifier = new JGraphFastOrganicLayout();    layoutifier.run(jgf);    System.out.println("Layout complete");    final Map nestedMap = jgf.createNestedMap(true, true);    jgraph.getGraphLayoutCache().edit(nestedMap);    jgraph.getGraphLayoutCache().update();    jgraph.refresh();    frame.setVisible(true);    panel.setVisible(true);    scrollpane.setVisible(true);}Any constructive suggestions/help/inspiration will be greatly appreciated!Thanks...-Eric
11127986	[u'0901746" lon="12', u'0906309" lon="12', u'', u'0901447" lon="12', u'', u'']	You could use a 2d drawing framework like piccolo2d to render the map.And for the routing, you will need to build a graph describing the roads/ways on the maps, how they join and the distances represented. Having chosen a start point and an end point on the map an algorithm such as A star will then help you find the shortest path between the points.Some more detail:OSM XML dumps consist (it's more complicated than this: see the official docs for the full detail) of three classes of entities:Nodes: representing single points on the map, defined by longitude and latitude. These either represent notable features (a huge variety, but, for example: a shop, an ancient monument, a gate on a path etc) or are part of a way.Ways: representing polygons on the map. These are built up of an ordered list of nodes (referenced by id) and can represent linear things such as roads and paths (relevant to your routing problem) but also bounded areas such as field or forest boundaries, the shapes of urban areas, lakes, rivers etc.Relations: which I won't address here, but you can find more about these in the official docs.Each of the above three node types will have additional data associated with them in the form of 'tags' which are key-value (string) pairs specifying the type of entity represented by the node/way. A general list can be found here and a list for routing here. An example drawn from the OSM website representing a small local road (in this case in Germany):<!-- The nodes representing points along the way --><node id="298884269" lat="54.0901746" lon="12.2482632" ... /><node id="261728686" lat="54.0906309" lon="12.2441924" ... />...<node id="298884272" lat="54.0901447" lon="12.2516513" ... /><!-- A way, built of the points above, with a tag     declaring it to be an unclassified road --><way id="26659127" ...>    <nd ref="292403538"/>    <nd ref="298884289"/>    ...    <nd ref="261728686"/>    <tag k="highway" v="unclassified"/></way>Where two ways intersect (e.g. when two roads cross) they will share a node in common at the crossing point.To filter down to the data required to generate a routing graph, you need to:Read the XML for the area of interest, reading at least the nodes and ways.Filter out, leaving only the ways you want based on their tags (for instance where k="highway" etc).Filter out all nodes but the ones referenced by the remaining relevant ways.Having isolated only the information you require, you then need to transform from the OSM format to something more suitable for routing. Although the OSM graph as described can be used for routing, it is more efficient to represent the map as a set of nodes for the start and end of each way, and any intersection points between ways and a set of edges representing the path between intersections, along with their lengths.For example, you might want to transform the following (with intersecting ways a-b, c-d, e-f):to something more like:Where only the end nodes and the intersecting nodes remain. In this representation you would have transformed from 3 ways to 8 edges in your routing graph (a-x, c-x, x-e, e-d, x-y, e-y, y-f, y-b) each edge with an associated distance that you calculated by stepping along the nodes in the way, accumulating distance as you go: (e.g. a-x: 200m, e-y: 350m etc). Note that you will be needing to calculate distances between adjacent points in longitude/latitude space for which you can find a formula here.You could represent this data using your own datastructure or using a third-part graph library such as JGraphT or Jung. From here, routing is (crudely, and assuming for simplicity that the set of nodes you have remaining are adequately fine-grained to represent all required start/end points) a matter of choosing the node representing the start of your journey, the node representing the end and using an algorithm such as A-star (as mentioned above) to calculate the shortest path.The only catch is that, as far as I can remember, neither of the two libraries I mention have an implementation of A-star. But you can get the correct result by running Dijkstra's shortest path (present in both libraries) at lower speed - and then implement A-star yourself when you're more confident with the concepts.To make all of this more interesting: instead of using distances you could route on estimated travel time (taking the average speed on the road into account). Or you could modify the distance based on the desirability of the route: e.g. for cycling, down-weight the distance on roads with less traffic in order to select longer but safer routes. Alternatively for hiking, downweight the distance for paths that pass through particularly scenic areas or near a landmark such as an ancient monument or a pub.Given that there are decent existing routing services for OSM data (e.g from Cloudmade) the main reason you would want to do something like this is in order to use your own custom distance metric...
11177524	[u'8']	Using this hint as a starting point, I added the following item to the classpath list: /usr/share/java/jgrapht0.8.jar(I also had to install the packages libjgrapht-java and openjdk-7-jre which you may already have.
11309056	[u'jgrapht -DartifactId=jgrapht -Dversion=0']	I've installed two libraries to my local repository (JGraph and JGraphtT). I used this command:mvn install:install-file -DgroupId=org.jgrapht -DartifactId=jgrapht -Dversion=0.8.3 -Dpackaging=jar -Dfile=./jgrapht.jarand similar for JGraph. I can see that the two Jar files are in my local repository.When I try to create Eclipse classpath and build files from the directory of my project's POM file (using mvn eclipse:eclipse), I get this error:[WARNING] Missing POM for org.jrapht:jgrapht:jar:0.8.3and similar for JGraph.Any ideas on what I'm doing wrong? My settings.xml file has the local repository enabled.Thanks,Keith
11510041	[]	I haven't used Prefuse before but perhaps JGraphT may work for you, assuming your organizational chart can be modeled as a graph.
11783322	[]	Does anyone know of a library (preferably Java) that solves the clique cover problem?I found an OCaml version, but I would like to use something I can more easily integrate with.I've also found Java code and C code to find the maximum clique in a graph, but I don't know of a way to leverage this code to find a clique cover (e.g., iteratively removing maximum cliques until no nodes are left does not yield an optimum solution).I've looked through all the Java graph algorithms libraries I could find (e.g., the ones at the good-java-graph-algorithm-library stackoverflow question), but none seem to have an implementation of a solution to this problem.
11822400	[u'tinkerpop', u'tinkerpop', u'apache', u'apache', u'qut', u'0-SNAPSHOT</version>', u'', u'0', u'google', u'0', u'mongodb</groupId>', u'7', u'apache', u'0-SNAPSHOT</version>', u'7', u'tinkerpop', u'0</version>', u'2']	I'm a starter for Maven. I pulled a java maven project from Bitbucket. When compiling the prject Eclipse said "8/6/12 1:39:05 PM EST: Missing artifact com.tinkerpop.blueprints:blueprints-core:jar:1.0:compile":Maven console: 8/6/12 1:39:03 PM EST: Missing artifact com.tinkerpop.blueprints:blueprints-core:jar:1.0:compile8/6/12 1:39:05 PM EST: Missing artifact com.tinkerpop.blueprints:blueprints-core:jar:1.0:compilebut when I check the pom.xml file, it is already there in the dependency list, only the Type and Scope fields are empty. Seeing the errors, I try to add this dependency by myself. And it showed like this:The #1 question is, Why for 1.0 version, blueprints-core only have a .pom file not a .jar file? Does this mean in the remote repository they don't provide the 1.0 version any more? (I found the codes in the project reply on 1.0 version instead of 2.0 version of this Blueprint framework)The #2 questions is, under what circumstances Maven will not automatically download the jar files for the dependencies added?This is the original pom.xml file:<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">    <parent>        <groupId>edu.qut.cs</groupId>        <artifactId>qut-recommender</artifactId>        <version>1.0-SNAPSHOT</version>        <relativePath>../qut-recommender/pom.xml</relativePath>    </parent>    <modelVersion>4.0.0</modelVersion>    <artifactId>rcmd-common</artifactId>    <packaging>jar</packaging>    <name>QUT Recommender Common Library and Utilty</name>    <dependencies>        <dependency>            <groupId>com.google.guava</groupId>            <artifactId>guava</artifactId>            <version>11.0.1</version>        </dependency>        <dependency>            <groupId>org.mongodb</groupId>            <artifactId>mongo-java-driver</artifactId>            <version>2.7.2</version>            <scope>compile</scope>        </dependency>        <dependency>            <groupId>org.apache.mahout</groupId>            <artifactId>mahout-ext</artifactId>            <version>1.0-SNAPSHOT</version>            <scope>compile</scope>        </dependency>        <dependency>            <groupId>jgrapht</groupId>            <artifactId>jgrapht</artifactId>            <version>0.7.3</version>            <scope>compile</scope>        </dependency>        <dependency>            <groupId>com.tinkerpop.blueprints</groupId>            <artifactId>blueprints-core</artifactId>            <version>1.0</version>        </dependency>        <dependency>            <groupId>log4j</groupId>            <artifactId>log4j</artifactId>            <version>1.2.16</version>        </dependency>       </dependencies></project>The POM and Jar files of 1.0 version exist. The following picture is the directories and files in the folder of "C:\Users\n8275441.m2\repository\com\tinkerpop\blueprints". BTW, I pulled this project from Bitbucket repository. Is it possible that those 1.0 version files came along with the project in Bitbuckdet?
12006178	[]	here an example I hope will help jgrapht
12358205	[]	If you are free to use external libraries, JGraphT is easy to use.
12363080	[]	Would a directed acyclic graph be sufficiently general for your needs? I know that this doesn't capture posets generally, but you mentioned wanting to exclude graph cycles.If so you might look at JGraphT: http://jgrapht.org/There's a graph iterator for topological sorts.Note that the directed graphs aren't java.util.Collections, but you can grab the vertices, which are a java.util.Set. If you need the data structure itself to be a Collection, you could probably wrap a JGraphT directed graph with a thin wrapper that is a Collection, treating the vertices as elements.The potential drawback here is that you have to create edges explicitly, which may or may not be acceptable for your application.
12502968	[u'iterator', u'iterator', u'hasNext', u'next', u'hasNext', u'next', u'equals', u'', u'iterator', u'iterator', u'hasNext', u'next', u'hasNext', u'next', u'equals', u'']	I have an ArrayList of elements of type <Graph<V, E>> where each element represents a graph. I need to add edges between all possible pair of graphs. I am using ListIterator over the ArrayList. But how can I implement that ? P.S. I am using JavaI am writing a simple version below with Integer type.ListIterator<Integer> it1 = (ListIterator<Integer>) aL.iterator();ListIterator<Integer> it2 = (ListIterator<Integer>) aL.iterator();while (it1.hasNext()) {    Integer i1 = it1.next();        while (it2.hasNext()) {        Integer i2 = it2.next();        if (!i2.equals(i1)) {            ... //do something between i1 and i2            }    }}The problem is for the type Graph <V, E> it is a part of jgrapht library (extending Object) and I may need to extend Graph<V, E> to implement compareTo() and equals() methods from the Comparable interface. Is there any other way ?So what I am looking for is something like this (pseudocode below)//I have populated an ArrayList gList of Graph<V,E> before//initiate the graph iteratorsListIterator<Graph<V,E>> gIter1 = (ListIterator<Graph<V,E>>) gList.iterator();ListIterator<Graph<V,E>> gIter2 = (ListIterator<Graph<V,E>>) gList.iterator();while (gIter1.hasNext()) {    Graph<V,E> g1 = gIter1.next();      while (gIter2.hasNext()) {        Graph<V,E> g2 = gIter2.next();        if (!g2.equals(g1)) {            ... //add edges between g1 and g2        }    }}
12511147	[u'org/repo/cascading/cascading-core/2', u'org/repo/cascading/cascading-hadoop/2', u'org/repo/riffle/riffle/0', u'maven', u'maven', u'maven', u'org/repo/thirdparty/jgrapht-jdk1', u'maven', u'org/repo/cascading/cascading-core/2', u'org/repo/cascading/cascading-hadoop/2', u'org/repo/riffle/riffle/0', u'maven', u'maven', u'org/repo/thirdparty/jgrapht-jdk1', u'maven', u'java:50: error: cannot access JobConf', u'apache', u'', u'', u'', u' Run with --info or --debug option to get more log output', u'599 secs']	In shell I typed gradle cleanJar in the Impatient/part1 directory. The output is below. The error is "class file for org.apache.hadoop.mapred.JobConf not found". Why did it fail to compile?:clean UP-TO-DATE:compileJavaDownload http://conjars.org/repo/cascading/cascading-core/2.0.1/cascading-core-2.0.1.pomDownload http://conjars.org/repo/cascading/cascading-hadoop/2.0.1/cascading-hadoop-2.0.1.pomDownload http://conjars.org/repo/riffle/riffle/0.1-dev/riffle-0.1-dev.pomDownload http://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.pomDownload http://repo1.maven.org/maven2/org/slf4j/slf4j-parent/1.6.1/slf4j-parent-1.6.1.pomDownload http://repo1.maven.org/maven2/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.pomDownload http://conjars.org/repo/thirdparty/jgrapht-jdk1.6/0.8.1/jgrapht-jdk1.6-0.8.1.pomDownload http://repo1.maven.org/maven2/org/codehaus/janino/janino/2.5.16/janino-2.5.16.pomDownload http://conjars.org/repo/cascading/cascading-core/2.0.1/cascading-core-2.0.1.jarDownload http://conjars.org/repo/cascading/cascading-hadoop/2.0.1/cascading-hadoop-2.0.1.jarDownload http://conjars.org/repo/riffle/riffle/0.1-dev/riffle-0.1-dev.jarDownload http://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jarDownload http://repo1.maven.org/maven2/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jarDownload http://conjars.org/repo/thirdparty/jgrapht-jdk1.6/0.8.1/jgrapht-jdk1.6-0.8.1.jarDownload http://repo1.maven.org/maven2/org/codehaus/janino/janino/2.5.16/janino-2.5.16.jar/home/is_admin/lab/cascading/Impatient/part1/src/main/java/impatient/Main.java:50: error: cannot access JobConf    Tap inTap = new Hfs( new TextDelimited( true, "\t" ), inPath );                ^  class file for org.apache.hadoop.mapred.JobConf not found1 error:compileJava FAILEDFAILURE: Build failed with an exception.* What went wrong:Execution failed for task ':compileJava'.> Compilation failed; see the compiler error output for details.* Try:Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.BUILD FAILEDTotal time: 22.599 secs
12809755	[]	If you don't want to implement all the path finding algorithms yourself I highly recommend JGraphT.  It is an excellent library for all your graphing needs.  It can find for you the shortest path by returning a list of edges.It certainly has a learning curve, though.  I started out with wanting to use WeightDirectedGraphs and that took a bit of Googling to find the appropriate way to use it.Edit:I just noticed you tagged your post as both Java and C++, but JGraphT is a Java library (as the J in the name implies).
13021423	[u'company', u' company', u'xml', u'0" encoding="UTF-8"?>', u'apache', u'apache', u'0', u'mycompany</groupId>', u'mycompany', u'artifactId}</name>', u'0', u'7</java-version>', u'springframework-version>3', u'springframework', u'springframework', u'springframework', u'aspectj-version>1', u'slf4j-version>1', u'25', u'0-beta-6</browser-mob-version>', u'jfree</groupId>', u'0', u'lowagie</groupId>', u'itextpdf</groupId>', u'3', u'schlichtherle', u'6</version>', u'1</version>', u'sf', u'5', u'springframework</groupId>', u'springframework-version}</version>', u'springframework</groupId>', u'springframework-version}</version>', u'springframework</groupId>', u'springframework-version}</version>', u'springframework</groupId>', u'springframework-version}</version>', u'springframework</groupId>', u'springframework-version}</version>', u'springframework</groupId>', u'springframework-version}</version>', u'springframework</groupId>', u'springframework-version}</version>', u'springframework</groupId>', u'springframework-version}</version>', u'springframework</groupId>', u'springframework-version}</version>', u'springframework', u'0', u'springframework', u'0', u'springframework', u'0', u'springframework</groupId>', u'springframework-version}</version>', u'hibernate', u'0-cr-1</version>', u'hibernate</groupId>', u'5', u'8', u'1', u'aspectj</groupId>', u'aspectj-version}</version>', u'slf4j</groupId>', u'slf4j-version}</version>', u'2', u'inject</groupId>', u'inject</artifactId>', u'servlet</groupId>', u'2</version>', u'springframework', u'springframework', u'ws', u'1', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'xml</groupId>', u'1</version>', u'xml</groupId>', u'1</version>', u'7</version>', u'mockito</groupId>', u'9', u'6</version>', u'2', u'2</version>', u'seleniumhq', u'seleniumhq', u'seleniumhq', u'sf', u'0</version>', u'google', u'10', u'codehaus', u'google', u'10', u'codehaus', u'9', u'google', u'9</version>', u'googlecode', u'1</version>', u'googlecode', u'1</version>', u'sf', u'8', u'13', u'apache', u'2', u'amazonaws</groupId>', u'2', u'codehaus', u'docx4j</groupId>', u'8', u'neustar</groupId>', u'seleniumhq', u'ibm', u'codehaus', u'codehaus', u'slf4j</groupId>', u'apache', u'8</version>', u'apache', u'8</version>', u'apache', u'5', u'apache', u'1</version>', u'apache', u'apache', u'7</version>', u'handlers and spring', u' -->', u'apache', u'handlers</resource>', u'apache', u'schemas</resource>', u'apache', u'mycompany', u'DSA</exclude>', u'SF</exclude>', u'MF</exclude>', u'mycompany', u'mycompany', u'out']	After adding the Maven jFree dependency to my existing application, I'm not able to execute the created jar. The only error message I get is the following:java -jar target/com.company.product-1.0.0-SNAPSHOT.jar Error: Invalid or corrupt jarfile target/com. company.product-1.0.0-SNAPSHOT.jarThe complete pom.xml looks like this:<?xml version="1.0" encoding="UTF-8"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"><modelVersion>4.0.0</modelVersion<groupId>com.mycompany</groupId><artifactId>com.mycompany.test</artifactId><name>${project.artifactId}</name><version>1.0.0-SNAPSHOT</version><properties>    <java-version>1.7</java-version>    <org.springframework-version>3.1.1.RELEASE</org.springframework-version>    <org.springframework.data-version>1.0.3.RELEASE</org.springframework.data-version>    <org.springframework.ws-version>2.0.4.RELEASE</org.springframework.ws-version>    <org.springframework.ws.oxm-version>1.5.10</org.springframework.ws.oxm-version>    <org.aspectj-version>1.6.12</org.aspectj-version>    <org.slf4j-version>1.5.10</org.slf4j-version>    <selenium-java-version>2.25.0</selenium-java-version>    <browser-mob-version>2.0-beta-6</browser-mob-version></properties><dependencies>    <!-- Hint A: If we delete this dependency it works -->    <dependency>        <groupId>org.jfree</groupId>        <artifactId>jfreechart</artifactId>        <version>1.0.14</version>                    <exclusions>            <exclusion>                <artifactId>itext</artifactId>                <groupId>com.lowagie</groupId>            </exclusion>        </exclusions>    </dependency>    <dependency>        <groupId>com.itextpdf</groupId>        <artifactId>itextpdf</artifactId>        <version>5.3.2</version>    </dependency>    <dependency>        <groupId>de.schlichtherle.io</groupId>        <artifactId>truezip</artifactId>        <version>6.6</version>    </dependency>    <dependency>        <groupId>log4j</groupId>        <artifactId>apache-log4j-extras</artifactId>        <version>1.1</version>    </dependency>    <!-- Caching with ehcache -->    <dependency>        <groupId>net.sf.ehcache</groupId>        <artifactId>ehcache</artifactId>        <version>2.5.2</version>        <type>pom</type>    </dependency>    <!-- Spring -->    <dependency>        <groupId>org.springframework</groupId>        <artifactId>spring-context</artifactId>        <version>${org.springframework-version}</version>        <exclusions>            <!-- Exclude Commons Logging in favor of SLF4j -->            <exclusion>                <groupId>commons-logging</groupId>                <artifactId>commons-logging</artifactId>            </exclusion>        </exclusions>    </dependency>    <dependency>        <groupId>org.springframework</groupId>        <artifactId>spring-webmvc</artifactId>        <version>${org.springframework-version}</version>    </dependency>    <dependency>        <groupId>org.springframework</groupId>        <artifactId>spring-core</artifactId>        <version>${org.springframework-version}</version>    </dependency>    <dependency>        <groupId>org.springframework</groupId>        <artifactId>spring-beans</artifactId>        <version>${org.springframework-version}</version>    </dependency>    <dependency>        <groupId>org.springframework</groupId>        <artifactId>spring-web</artifactId>        <version>${org.springframework-version}</version>    </dependency>    <dependency>        <groupId>org.springframework</groupId>        <artifactId>spring-aop</artifactId>        <version>${org.springframework-version}</version>    </dependency>    <dependency>        <groupId>org.springframework</groupId>        <artifactId>spring-context-support</artifactId>        <version>${org.springframework-version}</version>    </dependency>    <dependency>        <groupId>org.springframework</groupId>        <artifactId>spring-tx</artifactId>        <version>${org.springframework-version}</version>    </dependency>    <dependency>        <groupId>org.springframework</groupId>        <artifactId>spring-orm</artifactId>        <version>${org.springframework-version}</version>    </dependency>    <dependency>        <groupId>org.springframework.security</groupId>        <artifactId>spring-security-core</artifactId>        <version>3.0.3.RELEASE</version>    </dependency>    <dependency>        <groupId>org.springframework.security</groupId>        <artifactId>spring-security-web</artifactId>        <version>3.0.3.RELEASE</version>    </dependency>    <dependency>        <groupId>org.springframework.security</groupId>        <artifactId>spring-security-config</artifactId>        <version>3.0.3.RELEASE</version>    </dependency>    <dependency>        <groupId>org.springframework</groupId>        <artifactId>spring-test</artifactId>        <version>${org.springframework-version}</version>        <scope>test</scope>    </dependency>    <!-- Hibernate -->    <dependency>        <groupId>org.hibernate.java-persistence</groupId>        <artifactId>jpa-api</artifactId>        <version>2.0-cr-1</version>    </dependency>    <dependency>        <groupId>org.hibernate</groupId>        <artifactId>hibernate-entitymanager</artifactId>        <version>3.5.1-Final</version>    </dependency>    <!-- Database Connectors (HSQL should be removed later) -->    <dependency>        <groupId>hsqldb</groupId>        <artifactId>hsqldb</artifactId>        <version>1.8.0.7</version>    </dependency>    <dependency>        <groupId>mysql</groupId>        <artifactId>mysql-connector-java</artifactId>        <version>5.1.16</version>    </dependency>    <!-- AspectJ -->    <dependency>        <groupId>org.aspectj</groupId>        <artifactId>aspectjrt</artifactId>        <version>${org.aspectj-version}</version>    </dependency>    <!-- Logging -->    <dependency>        <groupId>org.slf4j</groupId>        <artifactId>slf4j-api</artifactId>        <version>${org.slf4j-version}</version>    </dependency>    <dependency>        <groupId>log4j</groupId>        <artifactId>log4j</artifactId>        <version>1.2.16</version>    </dependency>    <!-- @Inject -->    <dependency>        <groupId>javax.inject</groupId>        <artifactId>javax.inject</artifactId>        <version>1</version>    </dependency>    <dependency>        <groupId>javax.servlet</groupId>        <artifactId>jstl</artifactId>        <version>1.2</version>    </dependency>    <!-- Spring Data JPA dependencies -->    <dependency>        <groupId>org.springframework.data</groupId>        <artifactId>spring-data-jpa</artifactId>        <version>${org.springframework.data-version}</version>    </dependency>    <dependency>        <groupId>javax.ws.rs</groupId>        <artifactId>jsr311-api</artifactId>        <version>1.1.1</version>    </dependency>    <dependency>        <groupId>org.springframework.ws</groupId>        <artifactId>spring-oxm</artifactId>        <version>${org.springframework.ws.oxm-version}</version>    </dependency>    <dependency>        <groupId>org.springframework.ws</groupId>        <artifactId>spring-xml</artifactId>        <version>${org.springframework.ws-version}</version>    </dependency>    <dependency>        <groupId>org.springframework.ws</groupId>        <artifactId>spring-ws-core</artifactId>        <version>${org.springframework.ws-version}</version>    </dependency>    <dependency>        <groupId>javax.xml</groupId>        <artifactId>jaxb-impl</artifactId>        <version>2.1</version>    </dependency>    <dependency>        <groupId>javax.xml</groupId>        <artifactId>jaxb-api</artifactId>        <version>2.1</version>    </dependency>    <!-- Test -->    <dependency>        <groupId>junit</groupId>        <artifactId>junit</artifactId>        <version>4.7</version>        <scope>test</scope>    </dependency>    <dependency>        <groupId>org.mockito</groupId>        <artifactId>mockito-all</artifactId>        <version>1.9.0</version>        <scope>test</scope>    </dependency>    <!-- Common Utils -->    <dependency>        <groupId>commons-lang</groupId>        <artifactId>commons-lang</artifactId>        <version>2.6</version>    </dependency>    <dependency>        <groupId>commons-collections</groupId>        <artifactId>commons-collections</artifactId>        <version>3.2.1</version>    </dependency>    <dependency>        <groupId>commons-cli</groupId>        <artifactId>commons-cli</artifactId>        <version>1.2</version>    </dependency>           <!-- Selenium -->    <dependency>        <groupId>org.seleniumhq.selenium</groupId>        <artifactId>selenium-java</artifactId>        <version>${selenium-java-version}</version>    </dependency>    <dependency>        <groupId>org.seleniumhq.selenium</groupId>        <artifactId>selenium-firefox-driver</artifactId>        <version>${selenium-java-version}</version>    </dependency>    <dependency>        <groupId>org.seleniumhq.selenium</groupId>        <artifactId>selenium-chrome-driver</artifactId>        <version>${selenium-java-version}</version>    </dependency>    <!-- CSV Lib for Keyword Checker -->    <dependency>        <groupId>net.sf.opencsv</groupId>        <artifactId>opencsv</artifactId>        <version>2.0</version>    </dependency>    <!-- Google Places API -->    <dependency>        <groupId>com.google.api-client</groupId>        <artifactId>google-api-client</artifactId>        <version>1.10.3-beta</version>        <exclusions>            <exclusion>                <artifactId>jackson-core-asl</artifactId>                <groupId>org.codehaus.jackson</groupId>            </exclusion>        </exclusions>    </dependency>    <dependency>        <groupId>com.google.api-client</groupId>        <artifactId>google-api-client-appengine</artifactId>        <version>1.10.3-beta</version>    </dependency>    <dependency>        <groupId>org.codehaus.jackson</groupId>        <artifactId>jackson-mapper-asl</artifactId>        <version>1.9.9</version>    </dependency>    <!-- Google Geocode -->    <dependency>        <groupId>com.google.code.geocoder-java</groupId>        <artifactId>geocoder-java</artifactId>        <version>0.9</version>    </dependency>    <dependency>        <groupId>com.googlecode.json-simple</groupId>        <artifactId>json-simple</artifactId>        <version>1.1</version>    </dependency>    <dependency>        <groupId>com.googlecode.json-simple</groupId>        <artifactId>json-simple</artifactId>        <version>1.1</version>    </dependency>    <dependency>        <groupId>net.sf.jgrapht</groupId>        <artifactId>jgrapht</artifactId>        <version>0.8.3</version>    </dependency>    <dependency>        <groupId>jgraph</groupId>        <artifactId>jgraph</artifactId>        <version>5.13.0.0</version>    </dependency>    <!-- Apache Http Client -->    <dependency>        <groupId>org.apache.httpcomponents</groupId>        <artifactId>httpclient</artifactId>        <version>4.2.1</version>    </dependency>    <!-- Amazon web services client -->    <dependency>        <groupId>com.amazonaws</groupId>        <artifactId>aws-java-sdk</artifactId>        <version>1.2.15</version>        <exclusions>            <exclusion>                <artifactId>jackson-core-asl</artifactId>                <groupId>org.codehaus.jackson</groupId>            </exclusion>        </exclusions>    </dependency>    <!-- Docx4j - reading excel files  -->    <dependency>        <groupId>org.docx4j</groupId>        <artifactId>docx4j</artifactId>        <version>2.8.0</version>    </dependency>    <!-- Browser Mob Proxy -->    <dependency>        <groupId>biz.neustar</groupId>        <artifactId>browsermob-proxy</artifactId>        <version>${browser-mob-version}</version>        <exclusions>            <exclusion>                <groupId>org.seleniumhq.selenium</groupId>                <artifactId>selenium-api</artifactId>            </exclusion>            <exclusion>                <artifactId>icu4j</artifactId>                <groupId>com.ibm.icu</groupId>            </exclusion>            <exclusion>                <artifactId>jackson-mapper-asl</artifactId>                <groupId>org.codehaus.jackson</groupId>            </exclusion>            <exclusion>                <artifactId>jackson-core-asl</artifactId>                <groupId>org.codehaus.jackson</groupId>            </exclusion>            <exclusion>                <groupId>org.slf4j</groupId>                <artifactId>slf4j-jdk14</artifactId>            </exclusion>        </exclusions>    </dependency>    <!-- Hint B: If we copy this Apache POI dependencies to the top, it works -->    <!-- Apache POI - for reading xlsx files -->    <dependency>        <groupId>org.apache.poi</groupId>        <artifactId>poi</artifactId>        <version>3.8</version>    </dependency>    <dependency>        <groupId>org.apache.poi</groupId>        <artifactId>poi-ooxml</artifactId>        <version>3.8</version>    </dependency>    <dependency>        <groupId>org.apache.xmlbeans</groupId>        <artifactId>xmlbeans</artifactId>        <version>2.5.0</version>    </dependency>    <dependency>        <groupId>org.apache.poi</groupId>        <artifactId>ooxml-schemas</artifactId>        <version>1.1</version>    </dependency></dependencies><build>    <plugins>        <plugin>            <groupId>org.apache.maven.plugins</groupId>            <artifactId>maven-compiler-plugin</artifactId>            <configuration>                <source>${java-version}</source>                <target>${java-version}</target>            </configuration>        </plugin>        <plugin>            <groupId>org.apache.maven.plugins</groupId>            <artifactId>maven-shade-plugin</artifactId>            <version>1.7</version>            <executions>                <execution>                    <phase>package</phase>                    <goals>                        <goal>shade</goal>                    </goals>                    <configuration>                        <transformers>                            <!-- must be SURE to do this with both spring.handlers and spring.schemas.                                 otherwise you won't be able to use them in the spring config files. -->                            <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">                                <resource>META-INF/spring.handlers</resource>                            </transformer>                            <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">                                <resource>META-INF/spring.schemas</resource>                            </transformer>                            <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">                                <mainClass>com.mycompany.test.Start</mainClass>                            </transformer>                        </transformers>                        <filters>                          <filter>                            <artifact>bouncycastle:bcprov-jdk15</artifact>                            <excludes>                              <exclude>META-INF/BCKEY.DSA</exclude>                              <exclude>META-INF/BCKEY.SF</exclude>                              <exclude>META-INF/MANIFEST.MF</exclude>                            </excludes>                          </filter>                        </filters>                                              </configuration>                </execution>            </executions>        </plugin>    </plugins></build>I don't get any other debug information if I execute the jar.Is there any option to validate the jarfile? Or having something like java -verbose...?Steps to reproduce:create a new folderCopy the Pom.xml from above into the folder.Save the small `public static void main(...). into src/main/java/com/mycompany/test/Start.javaexecute mvn clean packageexecute java -jar target/com.mycompany.test-1.0.0-SNAPSHOT.jarAttachment 1:package com.mycompany.test;public class Start{    public static void main(final String[] args)     {        System.out.println("If you are able to get this printed with java -jar you made it. Thanks a lot! :)");    }}Edit 1:I started to delete some dependencies to identify the problem. But I haven't got a clear understanding what goes wrong.Now I figured out (See hint B in the pom.xml) that moving the Apache POI dependencies to the top will solve the problem. But still I don't know how to why and what is the problem.
13060603	[u'setLayout', u'BLACK);', u'changeColor', u'add', u'class);', u'setLayout', u'toString', u'changeColor', u'addVertex', u'toString', u'changeColor', u'addVertex', u'add', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'out', u'out', u'out', u'png");', u'setLayout', u'setLayout', u'setOpaque', u'add', u'setBackground', u'add', u'add', u'setOpaque', u'setLayout', u'setBackground', u'add', u'add', u'add', u'EXIT_ON_CLOSE);']	I am trying to display a Jpanel ontop of another JPanel with the bottom panel inactive while I can put images and draw stuff on the top Panel. I have triedsetOpaque(false);and I have tried Color transparent = new Color(0,0,0,0);I have a Board class that draws a 2-d array of Panels. Then I have a PlayerBoard Class that draws a 2-d array of Panels, that is also a representation of a Graph. The PlayerBoard I want to be transparent so I can add a Player to the PlayerBoard Class without overwriting/editing the Board Class. Here is the code for the Board Class:package project;import javax.swing.*;import java.awt.*;@SuppressWarnings("serial")public class Board extends JPanel {private JPanel boardPanel; private Grid[][] grid;public Board(int x, int y){    //Create a new Player    //Create a Panel to hold the board    boardPanel = new JPanel();    boardPanel.setLayout(new GridLayout(x,y,2,2));    //Create a grid to hold each panel square    grid = new Grid[x][y];    for(int row = 0; row < 6; row++){        for(int column = 0; column < 6; column++){            grid[row][column] = new Grid(x,y,true, Color.BLACK);            if((row==5 && column==5) || (row==4 && column==4) || (row==4 && column==5) || (row==5 && column==4) || (row==1 && column==2) || (row==1 && column==3) || (row==0 && column==2) || (row==0 && column==3) || (row==4 && column==0) || (row==5 && column==0) || (row==5 && column==1) || (row==4 && column==1)){                grid[row][column].changeColor(Color.YELLOW);            }            boardPanel.add(grid[row][column]);        }    }    //add boardPanel to Board    add(boardPanel);}}Here is my class for PlayerBoardpackage project;import java.awt.Color;import java.awt.GridLayout;import javax.swing.JPanel;import org.jgrapht.UndirectedGraph;import org.jgrapht.graph.DefaultEdge;import org.jgrapht.graph.SimpleGraph;@SuppressWarnings("serial")public class PlayerBoard extends JPanel{private JPanel boardPanel;private Grid[][] board;//private Player steve;public PlayerBoard(int x, int y){    UndirectedGraph<String, DefaultEdge> g = new SimpleGraph<String, DefaultEdge>(DefaultEdge.class);    //Vertex of Graph    String vertex = "";    //Create a 2-d array of strings to hold the grid of the borad    board = new Grid[x][y];    //Create the boardPanel    boardPanel = new JPanel();    boardPanel.setLayout(new GridLayout(x,y,2,2));    for(int i = 0; i < x; i++){        for(int j = 0; j < y; j++){            if(i==0){                vertex = Integer.toString(j+1);                board[i][j] = new Grid(i,j,true, new   Color(0,0,0,0));                //board[i][j].changeColor(new Color(0,0,0,0));                g.addVertex(vertex);            }            else{                vertex = Integer.toString(((x*i)+(j+1)));                board[i][j] = new Grid(i,j,true,new Color(0,0,0,0));                //board[i][j].changeColor(new Color(0,0,0,0));                g.addVertex(vertex);            }            boardPanel.add(board[i][j]);        }    }    add(boardPanel);    //Add the edges for the board graph    g.addEdge("1", "2");    g.addEdge("1", "7");    g.addEdge("2", "8");    g.addEdge("5", "11");    g.addEdge("5", "6");    g.addEdge("6", "12");    g.addEdge("7", "13");    g.addEdge("7", "8");    g.addEdge("8", "14");    g.addEdge("11", "17");    g.addEdge("11", "12");    g.addEdge("12", "18");    g.addEdge("13", "14");    g.addEdge("13", "19");    g.addEdge("14", "20");    g.addEdge("14", "15");    g.addEdge("15", "21");    g.addEdge("15", "16");    g.addEdge("16", "17");    g.addEdge("16", "22");    g.addEdge("17", "23");    g.addEdge("17", "18");    g.addEdge("18", "24");    g.addEdge("19", "20");    g.addEdge("20", "21");    g.addEdge("21", "22");    g.addEdge("21", "27");    g.addEdge("22", "28");    g.addEdge("22", "23");    g.addEdge("23", "24");    g.addEdge("27", "28");    g.addEdge("27", "33");    g.addEdge("28", "34");    /*     * Print out the board     */    for(int i1 = 0; i1 < 6; i1++){        for(int j = 0; j < 6; j++){            System.out.print(board[i1][j]);        }        System.out.println();    }    System.out.println(g.toString());    //steve = new Player("1", "bin/stuff/images/player.png");    //add(steve);    setOpaque(false);}public UndirectedGraph<String, DefaultEdge> getGraph(){    return null;}}Here is my game class that I want the PlayerBoard to be ontop of the Board class. This way I can put an image on the PlayerBoard Class without ruining the Board Classpackage project;import java.awt.BorderLayout;import java.awt.Color;import java.awt.event.MouseEvent;import java.awt.event.MouseListener;import javax.swing.*;@SuppressWarnings("serial")public class Game extends JFrame implements MouseListener{private PlayerBoard playerboard;private Board board;private Side side;private JPanel boardPanel, playerPanel;public Game(){    Color transparent = new Color (0, 0, 0, 0);     //create a boardPanel    boardPanel = new JPanel();    boardPanel.setLayout(new BorderLayout());    playerPanel = new JPanel();    playerPanel.setLayout(new BorderLayout());    //Create a board that is x,y    board = new Board(6,6);    playerboard = new PlayerBoard(6,6);    playerboard.setOpaque(false);    playerPanel.add(playerboard);    playerPanel.setBackground(transparent);    //Create a Side Panel    side = new Side();    //add the side and board to Game    boardPanel.add(board, BorderLayout.CENTER);    playerPanel.add(playerboard, BorderLayout.CENTER);    playerPanel.setOpaque(false);    getContentPane().setLayout(new BorderLayout());    getContentPane().setBackground(Color.BLUE);    getContentPane().add(side, BorderLayout.EAST);    getContentPane().add(boardPanel,BorderLayout.CENTER);    getContentPane().add(playerPanel, BorderLayout.CENTER);    pack();    //Important    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);    setResizable(true);    setVisible(true);}}Thanks for the help in advance
13186556	[u'jar']	This is probably a silly question, but how or where do I add jgrapht so my java compiler in terminal will include it? I've got the .jar file but don't know where to put it.I'm using Mac OS X ML and Netbeans.
13186659	[u'', u'']	To use an external Java library you need to add it to your classpath. The Java documentation has some great information on how to set it.Assuming you're using the javac compiler, you'll use a command similar to:javac -classpath path to jgrapht jar file ... other options and files here ... See also: Compiling JavaYou specifiacally mention Netbeans, so you'll also want to look at this question, and this blog post.I hope this helps! :)
13233995	[u'addGraph']	Finally I found it !There is a method in Graphs class that adds the second entry graph to the first entry graph:Graphs.addGraph(g1, g2);Adds all the vertices and all the edges of the specified source graph  to the specified destination graph. First all vertices of the source  graph are added to the destination graph. Then every edge of the  source graph is added to the destination graph. This method returns  true if the destination graph has been modified as a result of this  operation, otherwise it returns false.We can read more here.
13310849	[]	AFAIK there is not Objective-C library for that. I needed a digraph and I forked Aaron Qian's digraph. Maybe add Tarjan's algorithm and you are almost there, but jgrapht is miles away in features. 
13369377	[]	http://jgrapht.org/ provides the bottom 5, the trees are implemeted in core java. Just a note : I couldnt remeber the  name and googled 'Java Graph Algortihms'. It was the first result. :)
13489719	[]	You can have a look at the toString() method of AbstractGraph from jgrapht library for inspiration.
13542391	[]	If you are not required to implement the algorithm yourself, you may want to look at JGraphT.  It has an implementation of an algorithm to find Hamiltonian Cycles.
13543010	[]	I found a solution for it.I'm using this app https://github.com/drange/Grapher to implement my graph. I have modified some parameters to adapt to my app. It uses https://github.com/jgrapht/jgrapht for graph algorithms.
13569035	[u'/files/semcor3', u'open', u'startOne', u'', u'startOne', u'printStackTrace', u'', u'lang', u'mit', u'mit', u'mit', u'njit', u'jgrapht', u'applet', u'lang']	I have a class as below:   public class JSemcorProcessor {IConcordanceSet semcor;String[] directories = { "brown1", "brown2", "brownv" };public JSemcorProcessor() throws MalformedURLException {    // construct the URL to the Semcor directory    String path = "./files/semcor3.0/";    URL url = new URL("file", null, path);    // construct the semcor object and open it    semcor = new Semcor(url);    semcor.open();}public static void main(String[] args) throws IOException, ParseException {    JSemcorProcessor jsp = new JSemcorProcessor();    SynsetGraph graph = jsp.startOne("br-a06");}.......}It works well when I call main().But now I want to use this class in an Applet:public void init() {    JSemcorProcessor jsp = null;    SynsetGraph graph = null;    try {        jsp = new JSemcorProcessor();        graph = jsp.startOne("br-a06");    } catch (Exception e) {    // TODO Auto-generated catch block    e.printStackTrace();    } ........}Such exception occurs:java.lang.IllegalArgumentException    at edu.mit.jsemcor.main.Semcor.<init>(Semcor.java:105)    at edu.mit.jsemcor.main.Semcor.<init>(Semcor.java:90)    at edu.mit.jsemcor.main.Semcor.<init>(Semcor.java:77)    // semcor = new Semcor(url);    at edu.njit.tagging.JSemcorProcessor.<init>(JSemcorProcessor.java:40)    // jsp = new JSemcorProcessor();    at org.jgrapht.demo.JGraphAdapterDemo.init(JGraphAdapterDemo.java:157)    at sun.applet.AppletPanel.run(Unknown Source)    at java.lang.Thread.run(Unknown Source)Why the same code which works in main() does not work in Applet? It seems that URL object invoke this problem in Semcor.Thanks.
13675873	[]	How do you convert (can we convert?) an Undirected graph into a Directed graph.I am using Jgrapht library
13936836	[]	JGraphX was a completely rewrite from scratch, which is why we didn't call it JGraph 6 and the versioning started from 1.0.JGraphX does have tree/hierarchical layouts in it.Obviously, JGraphT is not a related project to us, so it's unfortunate they didn't update. There is a post on our forum relating to this. I haven't tested the bridge, but the idea is right.JGraphX does have its own analysis package too, btw. You might want to check whether that meets your needs and whether you need JGraphT at all.We do provide downloads of the later version of JGraph 5 here.
14250085	[]	I spent a while browsing the repo's history and using git blame, it looks like those were all added by a commercial version of Jalopy from TRIEMAX. This commit is where all those comments were added.Here's the important part of the commit message:First Jalopy since move to JDK 1.5. We now only support the  commercial version from TRIEMAX, because the old open-source version  doesn't support JDK 1.5.  As part of this, updated Jalopy settings  to match new maintainer's style preferences.Notice how he mentions the maintainer's preference style. That commit also modifies /etc/trimax-jalopy-settings.xml line 551 (then 361) to include the //~, so I'm very much inclined to say that this is just the maintainer's preference that doesn't add any functionality from external tools.
14249667	[u'', u'']	I was reading java source code today from this Github repository and found this:...public interface EdgeFactory<V, E>{    //~ Methods ----------------------------------------------------------------...Is there any tool that processes the "//~" comment (the literal string forwardslash forwardslash tilde), or is this just a stylistic choice by the coder?EDITI agree it's too hard to prove a negative; but I'll leave the answer unawarded in case the tool is lesser known but someone knows it.
14296463	[u'class);', u'addVertex', u'addVertex', u'addVertex', u'addEdge', u'addEdge', u'addEdge', u'edgeSet', u'getSource', u'getTarget']	The methods getSource() and getTarget() of DefaultEdge on org.jgrapht.graph.DefaultEdge are protected. How should I access source and target vertices of each of the edges returned by the edgeSet() of org.jgrapht.graph.SimpleGraph ?The code below shows what is happening.import java.util.Set;import org.jgrapht.UndirectedGraph;import org.jgrapht.graph.DefaultEdge;import org.jgrapht.graph.SimpleGraph;public class TestEdges{    public static void main(String [] args)    {        UndirectedGraph<String, DefaultEdge> g =            new SimpleGraph<String, DefaultEdge>(DefaultEdge.class);        String A = "A";        String B = "B";        String C = "C";        // add the vertices        g.addVertex(A);        g.addVertex(B);        g.addVertex(C);        g.addEdge(A, B);        g.addEdge(B, C);        g.addEdge(A, C);        Set<DefaultEdge> edges = g.edgeSet();        for(DefaultEdge edge : edges) {            String v1   = edge.getSource(); // Error getSource() is protected method            String v2   = edge.getTarget(); // Error getTarget() is protected method        }    }}
14304503	[u'getEdgeSource', u'getEdgeTarget']	The "correct" method to access edges source and target, according to JGraphT mailing list is to use the method getEdgeSource(E) and getEdgeTarget(E) from the interface Interface Graph<V,E> of org.jgraphtthe modification of the code is thenfor(DefaultEdge edge : edges) {   String v1   = g.getEdgeSource(edge);   String v2   = g.getEdgeTarget(edge);}
14305054	[u'graph             = new SimpleGraph<V, DefaultEdge>', u'vertexList     = new ArrayList<V>', u'graph', u'vertexList', u'graph', u'buildAdjancyMatrix', u'vertexList', u'adjMatrix, vertexArray);', u'getElementaryCycles', u'iterator', u'hasNext', u'next', u'size', u'remove', u'out', u'graph', u'vertexList', u'adjMatrix                     = new boolean[nVertex][nVertex];', u'graph', u'graph', u'vertexList', u'vertexList', u'adjMatrix[i][j]     = true;', u'adjMatrix[j][i]     = true;', u'isEmpty', u'get', u'remove', u'add', u'size', u'iterator', u'hasNext', u'next', u'size', u'containsAll', u'remove']	Based on the answer of @eminsenay to other question, I used the elementaryCycles library developed by Frank Meyer, from web_at_normalisiert_dot_de which implements the algorithms of Johnson. However, since this library is for directed graphs, I added some routines to:build the adjacency matrix from a JGraphT undirected graph (needed by Meyer's lib) filter the results to avoid cycles of length 2delete repeated cycles, since Meyer's lib is for directed graphs, and each undirected cycle is two directed cycles (one on each direction).The code ispackage test;import java.util.*;import org.jgraph.graph.DefaultEdge;import org.jgrapht.UndirectedGraph;import org.jgrapht.graph.SimpleGraph;public class GraphHandling<V> {private UndirectedGraph<V,DefaultEdge>     graph;private List<V>                         vertexList;private boolean                         adjMatrix[][];public GraphHandling() {    this.graph             = new SimpleGraph<V, DefaultEdge>(DefaultEdge.class);    this.vertexList     = new ArrayList<V>();}public void addVertex(V vertex) {    this.graph.addVertex(vertex);    this.vertexList.add(vertex);}public void addEdge(V vertex1, V vertex2) {    this.graph.addEdge(vertex1, vertex2);}public UndirectedGraph<V, DefaultEdge> getGraph() {    return graph;}public List<List<V>>     getAllCycles() {    this.buildAdjancyMatrix();    @SuppressWarnings("unchecked")    V[] vertexArray                 = (V[]) this.vertexList.toArray();    ElementaryCyclesSearch     ecs     = new ElementaryCyclesSearch(this.adjMatrix, vertexArray);    @SuppressWarnings("unchecked")    List<List<V>>             cycles0    = ecs.getElementaryCycles();    // remove cycles of size 2    Iterator<List<V>>         listIt    = cycles0.iterator();    while(listIt.hasNext()) {        List<V> cycle = listIt.next();        if(cycle.size() == 2) {            listIt.remove();        }    }    // remove repeated cycles (two cycles are repeated if they have the same vertex (no matter the order)    List<List<V>> cycles1             = removeRepeatedLists(cycles0);    for(List<V> cycle : cycles1) {        System.out.println(cycle);        }    return cycles1;}private void buildAdjancyMatrix() {    Set<DefaultEdge>     edges        = this.graph.edgeSet();    Integer             nVertex     = this.vertexList.size();    this.adjMatrix                     = new boolean[nVertex][nVertex];    for(DefaultEdge edge : edges) {        V v1     = this.graph.getEdgeSource(edge);        V v2     = this.graph.getEdgeTarget(edge);        int     i = this.vertexList.indexOf(v1);        int     j = this.vertexList.indexOf(v2);        this.adjMatrix[i][j]     = true;        this.adjMatrix[j][i]     = true;    }}/* Here repeated lists are those with the same elements, no matter the order,  * and it is assumed that there are no repeated elements on any of the lists*/private List<List<V>> removeRepeatedLists(List<List<V>> listOfLists) {    List<List<V>> inputListOfLists         = new ArrayList<List<V>>(listOfLists);    List<List<V>> outputListOfLists     = new ArrayList<List<V>>();    while(!inputListOfLists.isEmpty()) {        // get the first element        List<V> thisList     = inputListOfLists.get(0);        // remove it        inputListOfLists.remove(0);        outputListOfLists.add(thisList);        // look for duplicates        Integer             nEl     = thisList.size();        Iterator<List<V>>     listIt    = inputListOfLists.iterator();        while(listIt.hasNext()) {            List<V>     remainingList     = listIt.next();            if(remainingList.size() == nEl) {                if(remainingList.containsAll(thisList)) {                    listIt.remove();                    }            }        }    }    return outputListOfLists;}}
14709566	[]	You can check this primefaces component for jsf: Primefaces MindMap ComponentOr check opensource jgrapht. Example HereOr I strongly suggest to check this javascript library to generate your own graphs: rapgael js libraryYou can generate directed acyclic graph with both of them. Good luck!
15011183	[]	Take a look at Good Java graph algorithm library?https://github.com/jgrapht/jgraphthttp://jung.sourceforge.net/http://www.graphviz.org/ write your own .gv generator (easy with PrintStream)
15050286	[]	Java is still OOP language, so right way to present your graph would be create Graph class containing collections of Edges and Vertexes. Or use library such as JGraphT.
15106704	[u'', u'decode', u'', u'', u'init', u'getContentPane', u'setTitle', u'setDefaultCloseOperation', u'pack', u'setVisible', u'class);', u'add', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'', u'setPreferredSize', u'decode', u'setBackground', u'getVertexCell', u'getAttributes', u'getBounds', u'Double', u'setBounds', u'jgraph', u'put', u'edit', u'', u'java']	package simple;import java.awt.*;import java.awt.geom.*;import javax.swing.*;import org.jgraph.JGraph;import org.jgraph.graph.AttributeMap;import org.jgraph.graph.DefaultGraphCell;import org.jgraph.graph.GraphConstants;import org.jgrapht.*;import org.jgrapht.ext.*;import org.jgrapht.graph.*;// resolve ambiguityimport org.jgrapht.graph.DefaultEdge;import com.compilervision.common.CFNode;import com.compilervision.common.llvmir.instructions.CFG;import com.compilervision.common.Edge;/** * A demo applet that shows how to use JGraph to visualize JGraphT graphs. * * @author Barak Naveh * @since Aug 3, 2003 */public class Test    extends JApplet{    //~ Static fields/initializers ---------------------------------------------    private static final long serialVersionUID = 3256444702936019250L;    private static final Color DEFAULT_BG_COLOR = Color.decode("#FAFBFF");    private static final Dimension DEFAULT_SIZE = new Dimension(530, 320);    //~ Instance fields --------------------------------------------------------    //    private JGraphModelAdapter<CFNode, Edge> jgAdapter;    //~ Methods ----------------------------------------------------------------    /**     * An alternative starting point for this demo, to also allow running this     * applet as an application.     *     * @param args ignored.     */    public static void main(String [] args)    {        Test applet = new Test();        applet.init();        JFrame frame = new JFrame();        frame.getContentPane().add(applet);        frame.setTitle("JGraphT Adapter to JGraph Demo");        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);        frame.pack();        frame.setVisible(true);    }    /**     * {@inheritDoc}     */    public void init()    {         // create a JGraphT graphq        ListenableGraph<CFNode, Edge> g =            new ListenableDirectedMultigraph<CFNode, Edge>(                    Edge.class);        // create a visualization using JGraph, via an adapter        jgAdapter = new JGraphModelAdapter<CFNode,Edge>(g);        JGraph jgraph = new JGraph(jgAdapter);        adjustDisplaySettings(jgraph);        getContentPane().add(jgraph);        resize(DEFAULT_SIZE);        String v1 = "v1";        String v2 = "v2";       String v3 = "v3";        String v4 = "v4";        // add some sample data (graph manipulated via JGraphT)        g.addVertex(v1);        g.addVertex(v2);        g.addVertex(v3);        g.addVertex(v4);        g.addEdge(v1, v2);        g.addEdge(v2, v3);        g.addEdge(v3, v1);        g.addEdge(v4, v3);        // position vertices nicely within JGraph component        //GraphSimpleLayout()        positionVertexAt(v1, 130, 140);        positionVertexAt(v2, 60, 200);        positionVertexAt(v3, 310, 230);        positionVertexAt(v4, 380, 70);        // that's all there is to it!...    }    private void adjustDisplaySettings(JGraph jg)    {        jg.setPreferredSize(DEFAULT_SIZE);        Color c = DEFAULT_BG_COLOR;        String colorStr = null;        try {            colorStr = getParameter("bgcolor");        } catch (Exception e) {        }        if (colorStr != null) {            c = Color.decode(colorStr);        }        jg.setBackground(c);    }    @SuppressWarnings("unchecked") // FIXME hb 28-nov-05: See FIXME below    private void positionVertexAt(Object vertex, int x, int y)    {        DefaultGraphCell cell = jgAdapter.getVertexCell(vertex);        AttributeMap attr = cell.getAttributes();        Rectangle2D bounds = GraphConstants.getBounds(attr);        Rectangle2D newBounds = new Rectangle2D.Double(x,y,bounds.getWidth(),bounds.getHeight());        GraphConstants.setBounds(attr, newBounds);        // TODO: Clean up generics once JGraph goes generic        org.jgraph.graph.AttributeMap cellAttr = new AttributeMap();        cellAttr.put(cell, attr);        jgAdapter.edit(cellAttr, null, null, null);    }    //~ Inner Classes ----------------------------------------------------------    /**     * a listenable directed multigraph that allows loops and parallel edges.     */    private static class ListenableDirectedMultigraph<V, E>        extends DefaultListenableGraph<V, E>        implements DirectedGraph<V, E>    {        private static final long serialVersionUID = 1L;        ListenableDirectedMultigraph(Class<E> edgeClass)        {            super(new DirectedMultigraph<V, E>(edgeClass));        }    }}// End JGraphAdapterDemo.java
15127173	[]	There is a number of solvers for constraint satisfaction problems (CSP) in Java. Here is an incomplete list:JaCoPChocoCreamThat said, I think using a CSP solver is an overkill in your case unless you have some other constraints which you haven't mentioned. All you need is to treat your problem as a graph (tree?) with nodes corresponding to variables. Then taking a leaf node and going all the way up to the top setting variables along the way to true and setting all remaining variables to false will give you a solution. All you need for this is a graph library such as JGraphT
15235470	[u'7']	For example, when I run mine.Test class, the first line of the console is this huge string, which means that the horizontal scrollbar of the console is too short. How can I stop this?"C:\Program Files\Java\jdk1.7.0_17\bin\java" -Didea.launcher.port=7536 "-Didea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA 12.0.4\bin" -Dfile.encoding=UTF-8 -classpath "C:\Users\user\mydir\bin;C:\Users\user\mydir\lib\DTNConsoleConnection.jar;C:\Users\user\mydir\lib\ECLA.jar;C:\Users\user\mydir\jars\commons-math3-3.0.jar;C:\Users\user\mydir\jars\guava-12.0.1.jar;C:\Users\user\mydir\jars\mpj.jar;C:\Users\user\mydir\jars\commons-io-2.4.jar;C:\Users\user\mydir\jars\javageom-loweracc.jar;C:\Users\user\mydir\jars\jgrapht-jdk1.6.jar;C:\Users\user\mydir\jars\cplex.jar;C:\Users\user\mydir\jars\trove-3.0.3.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA 12.0.4\lib\junit-4.10.jar;C:\Program Files\Java\jdk1.7.0_17\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_17\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.7.0_17\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.7.0_17\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_17\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_17\jre\lib\jfxrt.jar;C:\Program Files\Java\jdk1.7.0_17\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_17\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.7.0_17\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.7.0_17\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_17\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_17\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.7.0_17\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.7.0_17\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.7.0_17\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.7.0_17\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.7.0_17\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.7.0_17\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.7.0_17\jre\lib\ext\zipfs.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA 12.0.4\lib\idea_rt.jar" com.intellij.rt.execution.application.AppMain mine.Test
15392526	[]	I  have an application in production using the jgrapht implementation of the fibonacci heap:jgrapht javadoc - FibonacciHeapThe implementation is based on the "Introduction to Algorithms" by Cormen.
15718737	[]	I will have to disagree with the answer concerning blueprint. There is a lot hype around this library and except the nice feature of graph implementation abstraction, there is absolutely nothing implemented in the graph algorithm (furnace) package, rendering the complicated stack totally useless.When I mean nothing is implemented, that is really nothing (take a look here), and the repo hasn't been updated since a while, so you can consider it dead. If you want to use a My 2 cents, use a seasoned graph framework : Jgrapht. I use it for several research projects, there are 20 standards (and some non trivials) graph algorithms implemented. So you don't need to reinvent the wheel. It also supports a heavy load of graph types.Avoid hype, go for working solutions.
15820331	[]	UndirectedGraph is an interface (as you point out).  Interfaces don't have constructors, but classes that implement that interface do.  If you look at the UndirectedGraph JavaDoc, you'll find all the implementing classes (at least all those in the JGraphT package).  There are several.AsUndirectedGraphBlockCutpointGraphListenableUndirectedGraphListenableUndirectedWeightedGraphMultigraphPseudographSimpleGraphSimpleWeightedGraphUndirectedGraphUnionUndirectedMaskSubgraphUndirectedSubgraphUndirectedWeightedSubgraphUnmodifiableUndirectedGraphWeightedMultigraphWeightedPseudographYou should find the one that's most appropriate for your situation.  Bear in mind that some of these may be abstract classes (I haven't checked them all) and others may not have a public constructor.  However, neither of those apply to SimpleGraph which you say you've tried.Casting a SimpleGraph to an UndirectedGraph certainly ought to work (assuming they have the same generics types).  If you're still having problems, I suggest you post (a) the smallest piece of sample code that demonstrates your problem and (b) the particular error message you get / problem you encounter.
15820606	[u'', u'clone', u'']	UndirectedGraph is an interface.  However, most of the concrete subclasses (e.g. SimpleGraph) extend AbstractBaseGraph which does implement the clone() method.So, if you can guarantee that the UndirectedGraph you have in your hand inherits from AbstractBaseGraph, simply cast to AbstractBaseGraph and call the clone method.public void someMethod(UndirectedGraph g){  // Do some stuff...  ((AbstractBaseGraph)g).clone(); // <== Your 1-liner  // Do some more stuff...}Bear in mind though, that according to the JavaDoc, the clone() method does a shallow clone.  So the graph instance is cloned but the vertices and edges within it aren't.
16014931	[]	if you need to handle infinite graphs then you are going to need some kind of functional interface to graphs (as you say in the q).  so i would make that the standard representation and provide helper functions that take other representations and generate a functional representation.for the results, maybe you can yield (you imply a generator and i think that is a good idea) a series of result objects, each of which represents a node.  if the user wants more info, like backlinks, they call a method on that, and the extra information is provided (calculated lazily, where possible, so that you avoid that cost for people that don't need it). you don't mention if the graph is directed or not.  obviously you can treat all graphs as directed and return both directions.  but then the implementation is not as efficient.  typically (eg jgrapht) libraries have different interfaces for different kinds of graph.(i suspect you're going to have to iterate a lot on this, before you get a good balance between elegant api and efficiency)finally, are you aware of the functional graph library?  i am not sure how it will help, but i remember thinking (years ago!) that the api there was a nice one.
16083814	[u'', u'jar', u'6', u'0', u'TXT', u'jar', u'jar', u'lang']	I have a java project on netbeans (Mac OS X) that uses Java3d. On the mac version of java distribution, java3d is already included. However now I want to distribute my application as jar for other platforms. When I Clean and Build the project in netbeans it generates the dist folder as the follow:. lib  AbsoluteLayout.jar  jgrapht-jdk1.6.jar  swing-layout-1.0.4.jar README.TXT MyApp.jarBut as you can see it has not included any jar file related to java3d. How can I force Netbeans to include necessary jar files to my distribution folder?Update:On a second try, I downloaded java3d from Oracle website and extracted everything until I found three java3d related jars. However adding them to the project causes an error in Ubuntu when I try to run java -jar MyApp.jar:java.lang.UnsatisfiedLinkError: no j3dcore-ogl in java.library.pathThis software is targeted for several platforms and I want my users to be able to run it by simply executing the jar file without getting involved in any technical issues. How should I do that?
16122449	[]	You probably need the KShortestPaths class, which includes a nMaxHops optionEDIT: I do have to note that I noticed considerably better performance with BellmanFordShortestPath if you're interested in the best path for each vertice, but you'll have to provide the vertices yourself and use something like GraphPathImpl to convert the set of edges into a GraphPath
16218204	[u'class);', u'addVertex', u'addVertex', u'addEdge', u'out', u'out', u'6', u'addEdge', u'6']	I want to make a simple undirected unlabelled (edges aren't labelled) graph A<->B in JGraphT 0.8.3:import org.jgrapht.graph.DefaultEdge;import org.jgrapht.graph.SimpleGraph;class A {    public static void main(String[] args) {        SimpleGraph<String, String> sg =            new SimpleGraph<String, String>(String.class);        sg.addVertex("A");        sg.addVertex("B");        sg.addEdge("A", "B");        System.out.println("edges of A: " + sg.edgesOf("A"));        System.out.println("edges of B: " + sg.edgesOf("B"));    }}I get this output:$ java -cp 'jgrapht-jdk1.6.jar:.' Aedges of A: []edges of B: []Why are the sets of edges of vertices A and B empty? Also what is the class parameter of SimpleGraph for? It seems to be the type of edges, but since my edges here are unlabelled, surely it doesn't matter? All the graph classes seem to take the class of the edge (edgeClass) as a parameter. I can't find where in the documentation edgeClass is described.I found if I label the edge (change the addEdge line to sg.addEdge("A", "B", "an_edge");) then it works... but I don't want to label the edges...$ java -cp 'jgrapht-jdk1.6.jar:.' Aedges of A: [an_edge]edges of B: [an_edge]
16576377	[]	JGraphT's ClosestFirstIterator could be what you are looking for:The k first vertices from the iterator should be the nearest ones.The iterator can also be constructed using a limiting radius parameter.
16699707	[u'aida', u'gitignore']	Apache Commons offers commons-graph. Under  http://svn.apache.org/viewvc/commons/sandbox/graph/trunk/ one can inspect the source. Sample API usage is in the SVN, too.JGraphT is a graph library with many Algorithms implemented and having  (in my oppinion) a good graph model. Helloworld Example. License: LGPL+EPL.JUNG2 is also a BSD-licensed library with the data structure similar to JGraphT. It offers layouting algorithms, which are currently missing in JGraphT. The most recent commit is from 2010 and packages hep.aida.* are LGPL (via the colt library, which is imported by JUNG). This prevents JUNG from being used in projects under the umbrella of ASF and ESF. Maybe one should use the github fork and remove that dependency. Commit f4ca0cd is mirroring the last CVS commit. The current commits seem to remove visualization functionality. Commit d0fb491c adds a .gitignore.Prefuse stores the graphs using a matrix structure, which is not memory efficient for sparse graphs. License: BSDEclipse Zest has built in graph layout algorithms, which can be used independently of SWT. See org.eclipse.zest.layouts.algorithms. The graph structure used is the one of Eclipse Draw2d, where Nodes are explicit objects and not injected via Generics (as it happens in Apache Commons Graph, JGraphT, and JUNG2).
16998608	[u'export', u'put']	I am building a project on graph theory algorithms and for this I use JGraphT. I have built completely my graph and I work on it the past couple of months. Now I want to export it so I can visualize it in Gephi.I don't want to use JGraph and Java visualization since I already have enough of code and I want to keep it simple. I want to use DOTExporter class from JgraphT. I have reached to a point were I export fine vertices and edges, but not edges weights.So this is my export function. I don't know how to implement ComponentAttributeProvider interface and cannot find my way out of this mess. Any ideas what I should put instead of null, null?static public void exportGraph(){    StringNameProvider<CustomVertex> p1=new StringNameProvider<CustomVertex>();    IntegerNameProvider<CustomVertex> p2=new IntegerNameProvider<CustomVertex>();    StringEdgeNameProvider<CustomWeightedEdge> p3 = new StringEdgeNameProvider<CustomWeightedEdge>();    DOTExporter export=new DOTExporter(p2, p1, p3, null, null);    try {        export.export(new FileWriter("graph.dot"), g);    }catch (IOException e){}} I have done something like thisComponentAttributeProvider<CustomWeightedEdge> edgeAttributeProvider =   new ComponentAttributeProvider<CustomWeightedEdge>() {        public Map<String, String> getComponentAttributes(CustomWeightedEdge e) {            Map<String, String> map =new LinkedHashMap<String, String>();            map.put("weight", Double.toString(g.getEdgeWeight(e)));            return map;        }   };
16998796	[u'put', u'export']	ok did it. For anyone else looking how to export weighted graph from jgrapht to gephi with dot filestatic public void exportGraph(){    IntegerNameProvider<CustomVertex> p1=new IntegerNameProvider<CustomVertex>();    StringNameProvider<CustomVertex> p2=new StringNameProvider<CustomVertex>();    ComponentAttributeProvider<DefaultWeightedEdge> p4 =       new ComponentAttributeProvider<DefaultWeightedEdge>() {            public Map<String, String> getComponentAttributes(DefaultWeightedEdge e) {                Map<String, String> map =new LinkedHashMap<String, String>();                map.put("weight", Double.toString(g.getEdgeWeight(e)));                return map;            }       };    DOTExporter export=new DOTExporter(p1, p2, null, null, p4);    try {        export.export(new FileWriter("graph.dot"), g);    }catch (IOException e){}} 
17196706	[]	JUNGJGRAPHAnd read this may help you javax.swing.tree.TreeModel
17196765	[]	Is there a readily available library which could help?DSL is the Data Structures Library in JavaJGraphT is a free Java graph library that provides mathematical graph-theory objects and algorithms. JUNG is the Java Universal Network/Graph Framework
17538933	[]	I'm making a journey planner (or a general timetable application) for all the public transport in my country (bus/train/air).The state of the project is at midpoint, now I'm having a bit of a hard time getting the more difficult part of the application done.To describe the current status:The data is stored in a MySQL database, modeled as GTFS (General (Google) Transit Feed Specification)I'm getting the direct routes by simply querying the database (join of a two temp tables, I find it as efficient enough)Currently it's done in PHP, but I can re-work it in Java, if neededSo, when there are direct connections between two points, all is fine. The hard part is getting a complete journey when there are no direct lines.Say the user wants to travel from city A to city D, but because there are no direct lines between those cities, he needs to pass through city B and city C.How can I get the optimized routes and transfers for this situation?My ideas so far a gravitating towards using a graph, but in that case I need a Time-Dependant Directed Weighted Multigraph, and I really have no idea at the moment how to implement the Time-Dependant part.Getting just the route can be done by using Dijkstra, A* or FloydWarshall algorithms , but because there are departures at different times, I'm not sure how will this be implemented, to get the optimal solution. I need to take into consideration the duration of a segment (A to B, B to C), waiting time for the transfer, maybe the distance too.Just to clarify, I don't need a single result. I want to get a daily list of all departures from city A that can get the user to city D, with transfers if needed.Basically, what I'm trying to get is something like this (taken from Bulgarian Railways, or for that matter, whichever railway site), a list of all departures for a chosen day going from Sofia to Kystendil making transfer in Radomir if needed:About the graph solving part, I can make an application in Java using jGraphT, cache the results (they change once in every few months maybe), and use them in PHP (or call the application through PHP).If I'm not clear enough, please ask.I know that this is done so many times (almost any train website has the solutions), but I don't know by which terms to even search.So, my question is: can someone give me guidance how this type of problem is solved?Or at least by which terms should I search for ideas and how should it be done.Maybe some suggestions for other sites in the StackExchange network.Thank you.
17654736	[]	If you don't want to reinvent the weel, you could look into JGraphT. There are some examples available that give you some ideas of how you can use it.
17865164	[u'getOutgoingEdgeFrom', u'getTargetVertex', u'remove']	So, after trying a couple of things mentioned above, I chose to implement a different Data structure. Since I did not have any issue with the O(n) for this problem (as my data is very small)I used Graphs, this library came in really handy: http://jgrapht.org/What I am doing is adding all elements as vertices to a DirectedGraph also creating edges between them (edges helped me solve another non-related problem as well). And when it's time to remove the elements I use a recursive function with the following pseudo code:removeElements(element) {tempEdge = graph.getOutgoingEdgeFrom(element)if(tempEdge !=null)   return;tempVertex = graph.getTargetVertex(tempEdge)removeElements(tempVertex)graph.remove(tempVertex)}I agree that graph DS is not good for these kind of problems, but under my conditions, this works perfectly... Cheers! 
18031659	[u'graph = theGraph;', u'product = 1', u'edges = new ArrayList<DefaultWeightedEdge>', u'clone', u'edgeSet', u'liaoWongLongestPath', u'getEdgeWeight', u'getEdgeWeight', u'add', u'out']	I'm trying to implement a longest path algorithm in Java with jGraphT, but i get an java.lang.StackOverflowError when i compile. The error message point to the line where i copy the graph and to the line where the method calls itself inside the algorithm. The algorithm description i use is here Liao Wong longest path at page 11.Where and what have i done wrong?import org.jgrapht.*;import org.jgrapht.graph.*;import java.util.*;public class LongestPath {    private DirectedWeightedMultigraph<Vertice, DefaultWeightedEdge> graph;    private double product;    private ArrayList<DefaultWeightedEdge> edges;    public LongestPath(DirectedWeightedMultigraph<Vertice, DefaultWeightedEdge> theGraph) {        this.graph = theGraph;        this.product = 1.0;        this.edges = new ArrayList<DefaultWeightedEdge>();    }    public ArrayList<DefaultWeightedEdge> liaoWongLongestPath(Vertice source) {        DirectedWeightedMultigraph<Vertice, DefaultWeightedEdge> copyGraph =     (DirectedWeightedMultigraph<Vertice, DefaultWeightedEdge>) graph.clone();        boolean flag;        for (int j = 1;j <= (copyGraph.edgeSet().size() + 1);j++) {            edges = this.liaoWongLongestPath(source);            flag = true;            for (DefaultWeightedEdge dwe : edges) {                if (copyGraph.getEdgeWeight(copyGraph.getEdge(source, copyGraph.getEdgeTarget(dwe))) < (copyGraph.getEdgeWeight(copyGraph.getEdge(source, copyGraph.getEdgeSource(dwe))) + copyGraph.getEdge(copyGraph.getEdgeSource(dwe), copyGraph.getEdgeTarget(dwe)).getWeight())) {                     //product = (copyGraph.getEdgeWeight(copyGraph.getEdge(source, copyGraph.getEdgeSource(dwe))) * copyGraph.getEdge(copyGraph.getEdgeSource(dwe), copyGraph.getEdgeTarget(dwe)).getWeight());                    flag = false;                    boolean status = edges.add(copyGraph.getEdge(source, copyGraph.getEdgeTarget(dwe)));                }            }            if (flag) {                System.out.println("Product: " + product + ".");                return edges;            }        }        return edges;    }}
18445534	[u'pid', u'apache', u'apache', u'apache', u'apache', u'lang', u'apache', u'apache', u'', u'io', u'apache', u'apache', u'io', u'apache', u'apache', u'out', u'', u'', u'', u'', u'', u'sh: 80: /usr/local/hadoop/zookeeper/bin/zkServer', u'pid: Directory nonexistent', u'', u'', u'version=3', u'name=naresh-pc', u'version=1', u'vendor=Sun Microsystems Inc', u'home=/usr/lib/jvm/java-6-openjdk-i386/jre', u'class', u'library', u'io', u'compiler=<NA>', u'name=Linux', u'arch=i386', u'version=3', u'name=hduser', u'home=/home/hduser', u'dir=/usr/local/hadoop/zookeeper/conf', u'0', u'10e27', u'', u'', u'pid']	I have certain issues with zookeeper.1) It is not able to create zookeeper_server.pid in my datadir. I have also tried the suggestion of manually creating the myid in the datadir plus rwx permission is given recursively. But, still getting the following error while stopping the zookeeper: datadir = dataDir=/usr/local/hadoop/zookeeper/snapshoterror: could not find file /usr/local/hadoop/zookeeper/snapshot 2) I was trying to manage the zookeeper manually while installing the HBASE. So due to previous issue it was not able to launch even a single instance.  2013-08-26 12:29:28,908 - INFO  [main:QuorumPeerConfig@310] - Defaulting to majority quorums2013-08-26 12:29:28,917 - FATAL [main:QuorumPeerMain@83] - Invalid config, exiting abnormallyorg.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException: Error processing /home/ubuntu/zookeeper/bin/../conf/zoo.cfg    at org.apache.zookeeper.server.quorum.QuorumPeerConfig.parse(QuorumPeerConfig.java:110)    at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:99)    at org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:76)Caused by: java.lang.IllegalArgumentException: /home/ubuntu/zookeeper/snapshot/myid file is missing    at org.apache.zookeeper.server.quorum.QuorumPeerConfig.parseProperties(QuorumPeerConfig.java:320)    at org.apache.zookeeper.server.quorum.QuorumPeerConfig.parse(QuorumPeerConfig.java:106)    ... 2 moreInvalid config, exiting abnormally 3) I also tried the HBASE managed zookeeper. But, in that also even a single instance of zookeeper was not able to launch and was throwing the following error: zkserver3: java.io.IOException: Could not find my address: slave1 in list of ZooKeeper quorum serverszkserver3:  at org.apache.hadoop.hbase.zookeeper.HQuorumPeer.writeMyID(HQuorumPeer.java:140)zkserver3:  at org.apache.hadoop.hbase.zookeeper.HQuorumPeer.main(HQuorumPeer.java:61)zkserver2: java.io.IOException: Could not find my address: slave in list of ZooKeeper quorum serverszkserver2:  at org.apache.hadoop.hbase.zookeeper.HQuorumPeer.writeMyID(HQuorumPeer.java:140)zkserver2:  at org.apache.hadoop.hbase.zookeeper.HQuorumPeer.main(HQuorumPeer.java:61)starting master, logging to /home/ubuntu/hbase/logs/hbase-ubuntu-master-ip-10-164-98-114.outrgserver3: starting regionserver, logging to /home/ubuntu/hbase/bin/../logs/hbase-ubuntu-regionserver-ip-XXXXXXX.outrgserver2: starting regionserver, logging to /home/ubuntu/hbase/bin/../logs/hbase-ubuntu-regionserver-ip-XXXXXXX.outrgserver1: starting regionserver, logging to /home/ubuntu/hbase/bin/../logs/hbase-ubuntu-regionserver-ip-XXXXXX.outUpdated logs for issue 1JMX enabled by defaultUsing config: /usr/local/hadoop/zookeeper/bin/../conf/zoo.cfgStarting zookeeper ... /usr/local/hadoop/zookeeper/bin/zkServer.sh: 80: /usr/local/hadoop/zookeeper/bin/zkServer.sh: cannot create /usr/local/hadoop/zookeeper/snapshot# The number of snapshots to retain in dataDir/zookeeper_server.pid: Directory nonexistentSTARTEDhduser@naresh-pc:/usr/local/hadoop/zookeeper/conf$ 2013-08-27 12:06:16,688 - INFO  [main:QuorumPeerConfig@90] - Reading configuration from: /usr/local/hadoop/zookeeper/bin/../conf/zoo.cfg2013-08-27 12:06:16,692 - WARN  [main:QuorumPeerMain@105] - Either no config or no quorum defined in config, running  in standalone mode2013-08-27 12:06:16,764 - INFO  [main:QuorumPeerConfig@90] - Reading configuration from: /usr/local/hadoop/zookeeper/bin/../conf/zoo.cfg2013-08-27 12:06:16,765 - INFO  [main:ZooKeeperServerMain@94] - Starting server2013-08-27 12:06:16,780 - INFO  [main:Environment@97] - Server environment:zookeeper.version=3.3.3-1073969, built on 02/23/2011 22:27 GMT2013-08-27 12:06:16,780 - INFO  [main:Environment@97] - Server environment:host.name=naresh-pc2013-08-27 12:06:16,781 - INFO  [main:Environment@97] - Server environment:java.version=1.6.0_272013-08-27 12:06:16,781 - INFO  [main:Environment@97] - Server environment:java.vendor=Sun Microsystems Inc.2013-08-27 12:06:16,781 - INFO  [main:Environment@97] - Server environment:java.home=/usr/lib/jvm/java-6-openjdk-i386/jre2013-08-27 12:06:16,782 - INFO  [main:Environment@97] - Server environment:java.class.path=/usr/local/hadoop/zookeeper/bin/../build/classes:/usr/local/hadoop/zookeeper/bin/../build/lib/*.jar:/usr/local/hadoop/zookeeper/bin/../zookeeper-3.3.3.jar:/usr/local/hadoop/zookeeper/bin/../lib/log4j-1.2.15.jar:/usr/local/hadoop/zookeeper/bin/../lib/jline-0.9.94.jar:/usr/local/hadoop/zookeeper/bin/../src/java/lib/ivy-2.1.0.jar:/usr/local/hadoop/zookeeper/bin/../conf::/usr/local/hadoop/hive/lib:/usr/local/hadoop/lib:/usr/local/hadoop/hive/lib/hive-contrib-0.9.0.jar:/usr/local/hadoop/storm/lib/jzmq-2.1.0.jar:/usr/local/hadoop/storm/lib/ring-servlet-0.3.11.jar:/usr/local/hadoop/storm/lib/compojure-0.6.4.jar:/usr/local/hadoop/storm/lib/commons-logging-1.1.1.jar:/usr/local/hadoop/storm/lib/curator-framework-1.0.1.jar:/usr/local/hadoop/storm/lib/curator-client-1.0.1.jar:/usr/local/hadoop/storm/lib/ring-jetty-adapter-0.3.11.jar:/usr/local/hadoop/storm/lib/carbonite-1.5.0.jar:/usr/local/hadoop/storm/lib/hiccup-0.3.6.jar:/usr/local/hadoop/storm/lib/servlet-api-2.5.jar:/usr/local/hadoop/storm/lib/commons-codec-1.4.jar:/usr/local/hadoop/storm/lib/disruptor-2.10.1.jar:/usr/local/hadoop/storm/lib/asm-4.0.jar:/usr/local/hadoop/storm/lib/objenesis-1.2.jar:/usr/local/hadoop/storm/lib/junit-3.8.1.jar:/usr/local/hadoop/storm/lib/clout-0.4.1.jar:/usr/local/hadoop/storm/lib/json-simple-1.1.jar:/usr/local/hadoop/storm/lib/libthrift7-0.7.0.jar:/usr/local/hadoop/storm/lib/minlog-1.2.jar:/usr/local/hadoop/storm/lib/jetty-6.1.26.jar:/usr/local/hadoop/storm/lib/tools.logging-0.2.3.jar:/usr/local/hadoop/storm/lib/tools.cli-0.2.2.jar:/usr/local/hadoop/storm/lib/joda-time-2.0.jar:/usr/local/hadoop/storm/lib/slf4j-api-1.5.8.jar:/usr/local/hadoop/storm/lib/tools.macro-0.1.0.jar:/usr/local/hadoop/storm/lib/log4j-1.2.16.jar:/usr/local/hadoop/storm/lib/clj-time-0.4.1.jar:/usr/local/hadoop/storm/lib/snakeyaml-1.9.jar:/usr/local/hadoop/storm/lib/commons-exec-1.1.jar:/usr/local/hadoop/storm/lib/commons-lang-2.5.jar:/usr/local/hadoop/storm/lib/httpcore-4.1.jar:/usr/local/hadoop/storm/lib/commons-io-1.4.jar:/usr/local/hadoop/storm/lib/httpclient-4.1.1.jar:/usr/local/hadoop/storm/lib/commons-fileupload-1.2.1.jar:/usr/local/hadoop/storm/lib/jetty-util-6.1.26.jar:/usr/local/hadoop/storm/lib/servlet-api-2.5-20081211.jar:/usr/local/hadoop/storm/lib/reflectasm-1.07-shaded.jar:/usr/local/hadoop/storm/lib/zookeeper-3.3.3.jar:/usr/local/hadoop/storm/lib/math.numeric-tower-0.0.1.jar:/usr/local/hadoop/storm/lib/jgrapht-0.8.3.jar:/usr/local/hadoop/storm/lib/kryo-2.17.jar:/usr/local/hadoop/storm/lib/jline-0.9.94.jar:/usr/local/hadoop/storm/lib/clojure-1.4.0.jar:/usr/local/hadoop/storm/lib/ring-core-0.3.10.jar:/usr/local/hadoop/storm/lib/guava-13.0.jar:/usr/local/hadoop/storm/lib/core.incubator-0.1.0.jar:/usr/local/hadoop/storm/lib/slf4j-log4j12-1.5.8.jar:/usr/local/hadoop/storm/storm-0.8.1.jar:/usr/local/hadoop/storm/conf/storm.yaml2013-08-27 12:06:16,782 - INFO  [main:Environment@97] - Server environment:java.library.path=/usr/lib/jvm/java-6-openjdk-i386/jre/lib/i386/client:/usr/lib/jvm/java-6-openjdk-i386/jre/lib/i386:/usr/lib/jvm/java-6-openjdk-i386/jre/../lib/i386:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/i386/client:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/i386:/usr/java/packages/lib/i386:/usr/lib/i386-linux-gnu/jni:/lib/i386-linux-gnu:/usr/lib/i386-linux-gnu:/usr/lib/jni:/lib:/usr/lib2013-08-27 12:06:16,782 - INFO  [main:Environment@97] - Server environment:java.io.tmpdir=/tmp2013-08-27 12:06:16,782 - INFO  [main:Environment@97] - Server environment:java.compiler=<NA>2013-08-27 12:06:16,782 - INFO  [main:Environment@97] - Server environment:os.name=Linux2013-08-27 12:06:16,783 - INFO  [main:Environment@97] - Server environment:os.arch=i3862013-08-27 12:06:16,783 - INFO  [main:Environment@97] - Server environment:os.version=3.2.0-49-generic-pae2013-08-27 12:06:16,783 - INFO  [main:Environment@97] - Server environment:user.name=hduser2013-08-27 12:06:16,783 - INFO  [main:Environment@97] - Server environment:user.home=/home/hduser2013-08-27 12:06:16,783 - INFO  [main:Environment@97] - Server environment:user.dir=/usr/local/hadoop/zookeeper/conf2013-08-27 12:06:16,829 - INFO  [main:ZooKeeperServer@663] - tickTime set to 20002013-08-27 12:06:16,830 - INFO  [main:ZooKeeperServer@672] - minSessionTimeout set to -12013-08-27 12:06:16,830 - INFO  [main:ZooKeeperServer@681] - maxSessionTimeout set to -12013-08-27 12:06:16,911 - INFO  [main:NIOServerCnxn$Factory@143] - binding to port 0.0.0.0/0.0.0.0:21812013-08-27 12:06:17,013 - INFO  [main:FileSnap@82] - Reading snapshot /usr/local/hadoop/zookeeper/snapshot/version-2/snapshot.10e272013-08-27 12:06:17,139 - INFO  [main:FileTxnSnapLog@208] - Snapshotting: 10e27while stoppingJMX enabled by defaultUsing config: /usr/local/hadoop/zookeeper/bin/../conf/zoo.cfgStopping zookeeper ... error: could not find file /usr/local/hadoop/zookeeper/snapshot# The number of snapshots to retain in dataDir/zookeeper_server.pid
18622752	[]	This question is continuation of my similar earlier asked question: Find path between two nodes in graph, according to given criteria - optimization task .Problem summary:I need to find the best path in graph from vertex A to vertex B, with assumption, that path quality is calculated as min value of edge weight on path and next the best path is that, which has max min value. Generally it's so called "Widest path problem".Previously I needed to solve this problem in very small graph (up to 15 vertices), so I didn't need sophisticated algorithm and with the help of kind peoples, I have designed my working algorithm. Unfortunately now I need to redefine my necessities in such way, that my graph can be very large (even 50 thousands of edges).I'm aware that I need to find Maximal Spanning Tree for my graph and obtain a simple path from start to stop vertex in obtained MST.I have decided to use jGraphT library. It has implemented Kruskal Minimum Spanning Tree algorithm. I can obtain Maximal Spanning Tree by multiplying each edge weight by (-1) and using Kruskal for Minimal Spanning Tree, but algorithm in the library has been designed for retrieving Hash Set of MST edges.My question is following:I have obtained Maximal Spanning Tree of graph as java HashSet of edges. How I can find a path from vertex A to vertex B in such structure in the most efficient way and what data structure will be the most efficient for this purpose? What do you recommend me?Additionally, I'm worried about such situation, that my graph is not always consistent (it may contain isolated vertices or isolated subgraphs), what is main condition for Kruskal algorithm correctness. Is it any way to bypass this problem?Thank you for any help or tips.
18691198	[u'toString', u'lang', u'jgrapht', u'jgrapht', u'jgrapht', u'jgrapht', u'jgrapht', u'jgrapht', u'jgraph', u'jgraph', u'jgraph', u'jgrapht', u'jgrapht', u'jgrapht', u'jgrapht', u'jgrapht', u'JGraphAdapterDemo', u'JGraphAdapterDemo', u'Conection', u'Conection', u'Conection', u'lang', u'lang', u'jgrapht', u'']	Hi everyone I'm tring to display a graph using jGraphT. Instead of labling an edge with the name of the source and target notes I want to display the weight of the edge. For that, I created an aditional class to overwrite the toString method of DefaultWeightedEdge this way    class MyWeightedEdge extends DefaultWeightedEdge {      @Override      public String toString() {        return Double.toString(getWeight());      }    }and instead of using DefaultWeightedEdge  I use MyWeightedEdge everywhere, but I'm getting ajava.lang.InstantiationException Exception in thread "main" java.lang.RuntimeException: Edge factory failedat org.jgrapht.graph.ClassBasedEdgeFactory.createEdge(ClassBasedEdgeFactory.java:86)at org.jgrapht.ext.JGraphModelAdapter$ShieldedGraph.addEdge(JGraphModelAdapter.java:1091)at org.jgrapht.ext.JGraphModelAdapter.handleJGraphInsertedEdge(JGraphModelAdapter.java:506)at org.jgrapht.ext.JGraphModelAdapter.handleJGraphChangedEdge(JGraphModelAdapter.java:474)at org.jgrapht.ext.JGraphModelAdapter$JGraphListener.handleChangedEdges(JGraphModelAdapter.java:964)at org.jgrapht.ext.JGraphModelAdapter$JGraphListener.graphChanged(JGraphModelAdapter.java:893)at org.jgraph.graph.DefaultGraphModel.fireGraphChanged(Unknown Source)at org.jgraph.graph.DefaultGraphModel$GraphModelEdit.execute(Unknown Source)at org.jgraph.graph.DefaultGraphModel.insert(Unknown Source)at org.jgrapht.ext.JGraphModelAdapter.internalInsertCell(JGraphModelAdapter.java:769)at org.jgrapht.ext.JGraphModelAdapter.handleJGraphTAddedEdge(JGraphModelAdapter.java:651)at org.jgrapht.ext.JGraphModelAdapter$JGraphTListener.edgeAdded(JGraphModelAdapter.java:1036)at org.jgrapht.graph.DefaultListenableGraph.fireEdgeAdded(DefaultListenableGraph.java:317)at org.jgrapht.graph.DefaultListenableGraph.addEdge(DefaultListenableGraph.java:182)at Visual.JGraphAdapterDemo.init(JGraphAdapterDemo.java:135)at Visual.JGraphAdapterDemo.<init>(JGraphAdapterDemo.java:89)at world.Conection.paint(Conection.java:268)at world.Conection.<init>(Conection.java:56)at world.Conection.main(Conection.java:44)Caused by: java.lang.InstantiationException: Visual.JGraphAdapterDemo$MyWeightedEdge    at java.lang.Class.newInstance(Unknown Source)    at     org.jgrapht.graph.ClassBasedEdgeFactory.createEdge(ClassBasedEdgeFactory.java:84)    ... 18 moreI will appreciate any help. Thank you.
18722541	[u'awt', u'init', u'getContentPane', u'setDefaultCloseOperation', u'pack', u'setVisible']	I have a problem using JGraphT to visualize graphs. I use netBeans and I have imported .jar for JGraph and JGraphT and copied everything from JGraphT Visualizationsvia JGraph and added this code:private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {  JApplet applet = new JApplet();  applet.init();  JFrame frame = new JFrame();  frame.getContentPane().add(applet);  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);  frame.pack();  frame.setVisible(true);} but I still get no graph visualization.  What should I do to get the graph visualized on a form?
18829146	[]	You could extend SimpleGraph and make sure that no multiple simple paths are formed.Or if you want a rooted tree, you could extend SimpleDirectedGraph and keep a reference to a root vertex.
19040667	[u'out', u'out', u'assertTrue', u'out', u'', u'', u'', u'', u'ftl, reports=ftl/jbehave-reports-with-totals', u'650s', u'jbehave:jbehave-maven-plugin:3', u'apache', u'apache', u'apache', u'apache', u'apache', u'apache', u'apache', u'apache', u'apache', u'apache', u'apache', u'apache', u'apache', u'reflect', u'reflect', u'reflect', u'lang', u'codehaus', u'codehaus', u'codehaus', u'codehaus', u'apache', u'jbehave', u'apache', u'apache', u'', u'jbehave', u'jbehave', u'jbehave', u'', u'lang', u'log', u'log', u'template', u'ext', u'template', u'core', u'template', u'template', u'jbehave', u'jbehave', u'jbehave', u'jbehave', u'jbehave', u'jbehave', u'jbehave', u'jbehave', u'jbehave', u'jbehave', u'', u'lang', u'codehaus', u'codehaus', u'codehaus', u'', u'apache', u'version>3', u'devkit', u'version>4', u'version>1', u'version>1', u'version>3', u'', u'jbehave</groupId>', u'version}</version>', u'java</include>', u'encoding=UTF8', u'0', u'6', u'6', u'8', u'0-SNAPSHOT', u'1:tree ', u'mule', u'mule:mule-core:jar:3', u'8', u'safehaus', u'2:provided', u'2', u'4:compile - scope updated from provided; omitted for duplicate)', u'4:compile - scope updated from provided; omitted for duplicate)', u'5', u'activation:activation:jar:1', u'apache', u'apache', u'annotation:jsr250-api:jar:1', u'slf4j:jcl-over-slf4j:jar:1', u'slf4j:slf4j-api:jar:1', u'slf4j:slf4j-api:jar:1', u'slf4j:slf4j-log4j12:jar:1', u'slf4j:slf4j-api:jar:1', u'2', u'2', u'1:provided', u'1:provided', u'1:provided', u'1:provided - omitted for duplicate)', u'mvel:mvel2:jar:2', u'jgrapht:jgrapht-jdk1', u'mule', u'mule', u'mule:mule-core:jar:3', u'mule', u'mule:mule-core:jar:3', u'2:compile', u'springframework:spring-context:jar:3', u'springframework:spring-beans:jar:3', u'springframework:spring-core:jar:3', u'springframework:spring-aop:jar:3', u'springframework:spring-beans:jar:3', u'springframework:spring-core:jar:3', u'springframework:spring-expression:jar:3', u'springframework:spring-core:jar:3', u'springframework:spring-core:jar:3', u'6', u'1', u'6', u'0-FCS:compile - omitted for cycle)', u'0:compile', u'mule', u'inject:javax', u'mule', u'mule', u'mule:mule-core:jar:3', u'eclipse:eclipse-workbench:jar:3', u'eclipse:eclipse-runtime:jar:3', u'osgi:core:jar:4', u'mockito:mockito-all:jar:1', u'mule', u'mule:mule-core:jar:3', u'mule', u'springframework:spring-beans:jar:3', u'9:compile - scope updated from test; omitted for duplicate)', u'0:test', u'apache', u'apache', u'slf4j:slf4j-api:jar:1', u'apache', u'slf4j:slf4j-api:jar:1', u'apache', u'apache', u'apache', u'mule:mule-core:test-jar:tests:3', u'8', u'safehaus', u'2:test - omitted for duplicate)', u'2', u'4:test - omitted for duplicate)', u'4:test - omitted for duplicate)', u'5', u'activation:activation:jar:1', u'apache', u'apache', u'annotation:jsr250-api:jar:1', u'slf4j:jcl-over-slf4j:jar:1', u'slf4j:slf4j-api:jar:1', u'slf4j:slf4j-log4j12:jar:1', u'2', u'1:test - omitted for duplicate)', u'1:test - omitted for duplicate)', u'mvel:mvel2:jar:2', u'jgrapht:jgrapht-jdk1', u'mule', u'mockito:mockito-all:jar:1', u'amazonaws:aws-java-sdk:jar:1', u'1', u'apache', u'apache', u'1', u'6:compile - omitted for conflict with 1', u'3:compile', u'codehaus', u'codehaus', u'codehaus', u'qos', u'qos', u'slf4j:slf4j-api:jar:1', u'com', u'objenesis:objenesis:jar:1', u'jbehave:jbehave-core:jar:3', u'8', u'hamcrest:hamcrest-core:jar:1', u'hamcrest:hamcrest-library:jar:1', u'hamcrest:hamcrest-core:jar:1', u'hamcrest:hamcrest-integration:jar:1', u'hamcrest:hamcrest-core:jar:1', u'2', u'4:compile', u'4:compile', u'codehaus', u'freemarker:freemarker:jar:2', u'thoughtworks', u'thoughtworks', u'1', u'1', u'jbehave:jbehave-maven-plugin:jar:3', u'jbehave:jbehave-core:jar:3', u'apache', u'apache', u'codehaus', u'apache', u'apache', u'apache', u'codehaus', u'codehaus', u'codehaus', u'apache', u'apache', u'codehaus', u'codehaus', u'apache', u'codehaus', u'apache', u'apache', u'codehaus', u'codehaus', u'apache', u'codehaus', u'apache', u'codehaus', u'apache', u'codehaus', u'codehaus', u'codehaus', u'codehaus', u'apache', u'codehaus', u'8', u'codehaus', u'1-alpha-2:compile', u'codehaus', u'codehaus', u'codehaus', u'codehaus', u'codehaus', u'codecentric:jbehave-junit-runner:jar:1', u'10:compile', u'hamcrest:hamcrest-core:jar:1', u'mockito:mockito-core:jar:1', u'hamcrest:hamcrest-core:jar:1', u'objenesis:objenesis:jar:1', u'jbehave</groupId>', u'version}</version>', u'', u'2']	I have a Maven project that produces a Mule Connector.  It's basically a shell, so I started adding some BDD tests using JBehave.  The first test I added does very little:public class FakeSteps extends Embedder {    @Given("I have something")    public void iHaveSomething() {                System.out.println("Have something...");    }    @When("I do something")    public void iDoSomething() {        System.out.println("Doing something...");    }    @Then("we are ok")    public void weAreOk() {        Assert.assertTrue("FAILURE!!!!!", true);        System.out.println("We are ok.");    }}If I run the test in IntelliJ it passes.  When I perform a "mvn clean install", the test does not throw an error but the build fails due to an exception in "org.apache.log4j.Priority":...Have something...Doing something...We are ok.(AfterStories)[INFO] Generating reports view to '/Users/user/git_repos/myTest-connector/target/jbehave' using formats '[xml, ide_console, console, html, txt]' and view properties '{defaultFormats=stats, decorateNonHtml=true, viewDirectory=view, decorated=ftl/jbehave-report-decorated.ftl, reports=ftl/jbehave-reports-with-totals.ftl, maps=ftl/jbehave-maps.ftl, navigator=ftl/jbehave-navigator.ftl, views=ftl/jbehave-views.ftl, nonDecorated=ftl/jbehave-report-non-decorated.ftl}'[INFO] ------------------------------------------------------------------------[INFO] BUILD FAILURE[INFO] ------------------------------------------------------------------------[INFO] Total time: 53.650s[INFO] Finished at: Thu Sep 26 17:38:36 MDT 2013[INFO] Final Memory: 38M/81M[INFO] ------------------------------------------------------------------------[ERROR] Failed to execute goal org.jbehave:jbehave-maven-plugin:3.8:run-stories-as-embeddables (run-stories-as-embeddables) on project myTest-connector: Failed to run stories as embeddables: Failure in running embeddable: org.mule.modules.jbehave.JBehaveStories: org/apache/log4j/Priority: org.apache.log4j.Priority -> [Help 1]org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.jbehave:jbehave-maven-plugin:3.8:run-stories-as-embeddables (run-stories-as-embeddables) on project myTest-connector: Failed to run stories as embeddables    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:213)    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)    at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)    at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)    at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)    at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)    at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)    at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)    at java.lang.reflect.Method.invoke(Method.java:597)    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)    at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)    at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)Caused by: org.apache.maven.plugin.MojoFailureException: Failed to run stories as embeddables    at org.jbehave.mojo.RunStoriesAsEmbeddables.execute(RunStoriesAsEmbeddables.java:20)    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)    ... 19 moreCaused by: org.jbehave.core.embedder.Embedder$RunningEmbeddablesFailed: Failure in running embeddable: org.mule.modules.jbehave.JBehaveStories    at org.jbehave.core.embedder.Embedder.runAsEmbeddables(Embedder.java:131)    at org.jbehave.mojo.RunStoriesAsEmbeddables.execute(RunStoriesAsEmbeddables.java:18)    ... 21 moreCaused by: java.lang.NoClassDefFoundError: org/apache/log4j/Priority    at freemarker.log.Log4JLoggerFactory.getLogger(Log4JLoggerFactory.java:65)    at freemarker.log.Logger.getLogger(Logger.java:284)    at freemarker.template.utility.SecurityUtilities.<clinit>(SecurityUtilities.java:67)    at freemarker.ext.beans.BeansWrapper.<clinit>(BeansWrapper.java:147)    at freemarker.template.ObjectWrapper.<clinit>(ObjectWrapper.java:69)    at freemarker.core.Configurable.<init>(Configurable.java:139)    at freemarker.template.Configuration.<init>(Configuration.java:142)    at freemarker.template.Configuration.<clinit>(Configuration.java:127)    at org.jbehave.core.reporters.FreemarkerProcessor.configuration(FreemarkerProcessor.java:30)    at org.jbehave.core.reporters.FreemarkerProcessor.process(FreemarkerProcessor.java:21)    at org.jbehave.core.reporters.TemplateableViewGenerator.write(TemplateableViewGenerator.java:237)    at org.jbehave.core.reporters.TemplateableViewGenerator.createReports(TemplateableViewGenerator.java:189)    at org.jbehave.core.reporters.TemplateableViewGenerator.generateReportsView(TemplateableViewGenerator.java:111)    at org.jbehave.core.embedder.Embedder.generateReportsView(Embedder.java:245)    at org.jbehave.core.embedder.Embedder.generateReportsView(Embedder.java:233)    at org.jbehave.core.embedder.Embedder.runStoriesAsPaths(Embedder.java:212)    at org.jbehave.core.junit.JUnitStories.run(JUnitStories.java:20)    at org.jbehave.core.embedder.Embedder.runAsEmbeddables(Embedder.java:122)    ... 22 moreCaused by: java.lang.ClassNotFoundException: org.apache.log4j.Priority    at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:50)    at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:244)    at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:230)    ... 40 more[ERROR] [ERROR] [ERROR] For more information about the errors and possible solutions, please read the following articles:[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureExceptionMy Maven config for JBehave is:    <properties>        <mule.version>3.4.0</mule.version>        <mule.devkit.version>3.4.0</mule.devkit.version>        <junit.version>4.11</junit.version>        <mockito.version>1.8.2</mockito.version>        <jdk.version>1.6</jdk.version>        <jbehave.version>3.8</jbehave.version>    </properties>    ...    <plugin>        <groupId>org.jbehave</groupId>        <artifactId>jbehave-maven-plugin</artifactId>        <version>${jbehave.version}</version>        <executions>            <execution>                <id>run-stories-as-embeddables</id>                <phase>integration-test</phase>                <configuration>                    <scope>test</scope>                    <includes>                        <include>**/*Stories.java</include>                    </includes>                    <ignoreFailureInStories>false</ignoreFailureInStories>                    <ignoreFailureInView>false</ignoreFailureInView>                </configuration>                <goals>                    <goal>run-stories-as-embeddables</goal>                </goals>            </execution>        </executions>    </plugin>My Maven, Java, and machine information is:Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8Apache Maven 3.0.5 (r01de14724cdef164cd33c7c8c2fe155faf9602da; 2013-02-19 06:51:28-0700)Maven home: /usr/share/mavenJava version: 1.6.0_51, vendor: Apple Inc.Java home: /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/HomeDefault locale: en_US, platform encoding: UTF8OS name: "mac os x", version: "10.8.5", arch: "x86_64", family: "mac"It's unclear to me what the root cause is.  I added log4j as a Maven dependency and the problem continues.Here is the maven dependency tree:[INFO] ------------------------------------------------------------------------[INFO] Building Mule Cloud Connector 1.0-SNAPSHOT[INFO] ------------------------------------------------------------------------[INFO] [INFO] --- maven-dependency-plugin:2.1:tree (default-cli) @ myTest-connector ---[INFO] org.mule.modules:myTest-connector:mule-module:1.0-SNAPSHOT[INFO] +- org.mule:mule-core:jar:3.4.0:provided (scope not updated to compile)[INFO] |  +- commons-beanutils:commons-beanutils:jar:1.8.0:provided[INFO] |  +- org.safehaus.jug:jug:jar:asl:2.0.0:provided[INFO] |  +- commons-cli:commons-cli:jar:1.2:provided[INFO] |  +- (commons-collections:commons-collections:jar:3.2.1:compile - scope updated from provided; omitted for duplicate)[INFO] |  +- (commons-io:commons-io:jar:1.4:compile - scope updated from provided; omitted for duplicate)[INFO] |  +- (commons-lang:commons-lang:jar:2.4:compile - scope updated from provided; omitted for duplicate)[INFO] |  +- commons-pool:commons-pool:jar:1.5.3:provided[INFO] |  +- javax.activation:activation:jar:1.1-osgi:provided[INFO] |  +- org.apache.geronimo.specs:geronimo-jta_1.1_spec:jar:1.1.1:provided[INFO] |  +- org.apache.geronimo.specs:geronimo-j2ee-connector_1.5_spec:jar:1.1-osgi:provided[INFO] |  +- javax.annotation:jsr250-api:jar:1.0:provided[INFO] |  +- org.slf4j:jcl-over-slf4j:jar:1.6.1:provided[INFO] |  |  \- (org.slf4j:slf4j-api:jar:1.6.1:provided - omitted for duplicate)[INFO] |  +- (org.slf4j:slf4j-api:jar:1.6.1:compile - scope updated from provided; omitted for duplicate)[INFO] |  +- org.slf4j:slf4j-log4j12:jar:1.6.1:provided[INFO] |  |  +- (org.slf4j:slf4j-api:jar:1.6.1:provided - omitted for duplicate)[INFO] |  |  \- (log4j:log4j:jar:1.2.16:provided - omitted for duplicate)[INFO] |  +- log4j:log4j:jar:1.2.16:provided[INFO] |  +- asm:asm:jar:3.1:provided[INFO] |  +- asm:asm-commons:jar:3.1:provided[INFO] |  |  \- asm:asm-tree:jar:3.1:provided[INFO] |  |     \- (asm:asm:jar:3.1:provided - omitted for duplicate)[INFO] |  +- org.mvel:mvel2:jar:2.1.3.Final:provided[INFO] |  +- org.jgrapht:jgrapht-jdk1.5:jar:0.7.3:provided[INFO] |  \- org.mule.common:mule-common:jar:0.11.0:provided[INFO] +- org.mule.modules:mule-module-spring-config:jar:3.4.0:compile[INFO] |  +- (org.mule:mule-core:jar:3.4.0:compile - omitted for duplicate)[INFO] |  +- org.mule.modules:mule-module-annotations:jar:3.4.0:compile[INFO] |  |  +- (org.mule:mule-core:jar:3.4.0:compile - omitted for duplicate)[INFO] |  |  \- cglib:cglib-nodep:jar:2.2:compile[INFO] |  +- org.springframework:spring-context:jar:3.2.1.RELEASE:compile[INFO] |  |  +- org.springframework:spring-beans:jar:3.2.1.RELEASE:compile[INFO] |  |  |  \- (org.springframework:spring-core:jar:3.2.1.RELEASE:compile - omitted for duplicate)[INFO] |  |  +- org.springframework:spring-aop:jar:3.2.1.RELEASE:compile[INFO] |  |  |  +- (org.springframework:spring-beans:jar:3.2.1.RELEASE:compile - omitted for duplicate)[INFO] |  |  |  \- (org.springframework:spring-core:jar:3.2.1.RELEASE:compile - omitted for duplicate)[INFO] |  |  +- org.springframework:spring-expression:jar:3.2.1.RELEASE:compile[INFO] |  |  |  \- (org.springframework:spring-core:jar:3.2.1.RELEASE:compile - omitted for duplicate)[INFO] |  |  \- org.springframework:spring-core:jar:3.2.1.RELEASE:compile[INFO] |  +- dom4j:dom4j:jar:1.6.1-osgi:compile[INFO] |  \- jaxen:jaxen:jar:1.1.1:compile[INFO] |     +- (dom4j:dom4j:jar:1.6.1:compile - omitted for conflict with 1.6.1-osgi)[INFO] |     +- (jaxen:jaxen:jar:1.0-FCS:compile - omitted for cycle)[INFO] |     \- jdom:jdom:jar:1.0:compile[INFO] +- org.mule.tools.devkit:mule-devkit-annotations:jar:3.4.0:compile[INFO] |  +- javax.inject:javax.inject:jar:1:compile[INFO] |  +- (org.mule.modules:mule-module-annotations:jar:3.4.0:compile - omitted for duplicate)[INFO] |  \- org.mule.modules:mule-module-devkit-support:jar:3.4.0:compile[INFO] |     \- (org.mule:mule-core:jar:3.4.0:compile - omitted for duplicate)[INFO] +- org.eclipse:eclipse-workbench:jar:3.6.1.M20100826-1330:provided[INFO] +- org.eclipse:eclipse-runtime:jar:3.6.0.v20100505:provided[INFO] +- org.osgi:core:jar:4.3.0:provided[INFO] +- org.mockito:mockito-all:jar:1.8.2:test[INFO] +- org.mule.tests:mule-tests-functional:jar:3.4.0:test[INFO] |  +- (org.mule:mule-core:jar:3.4.0:test - omitted for duplicate)[INFO] |  +- (org.mule.modules:mule-module-spring-config:jar:3.4.0:test - omitted for duplicate)[INFO] |  +- (org.springframework:spring-beans:jar:3.2.1.RELEASE:compile - scope updated from test; omitted for duplicate)[INFO] |  +- (junit:junit:jar:4.9:compile - scope updated from test; omitted for duplicate)[INFO] |  +- commons-net:commons-net:jar:2.0:test[INFO] |  +- org.apache.ftpserver:ftpserver-core:jar:1.0.2:test[INFO] |  |  +- (org.apache.ftpserver:ftplet-api:jar:1.0.2:test - omitted for duplicate)[INFO] |  |  +- (org.slf4j:slf4j-api:jar:1.5.2:test - omitted for conflict with 1.6.1)[INFO] |  |  \- org.apache.mina:mina-core:jar:2.0.0-M6:test[INFO] |  |     \- (org.slf4j:slf4j-api:jar:1.5.2:test - omitted for conflict with 1.6.1)[INFO] |  +- org.apache.ftpserver:ftplet-api:jar:1.0.2:test[INFO] |  +- org.apache.sshd:sshd-core:jar:0.6.0:test[INFO] |  |  \- (org.apache.mina:mina-core:jar:2.0.2:test - omitted for conflict with 2.0.0-M6)[INFO] |  +- bouncycastle:bcprov-jdk14:jar:139:test[INFO] |  +- org.mule:mule-core:test-jar:tests:3.4.0:test[INFO] |  |  +- (commons-beanutils:commons-beanutils:jar:1.8.0:test - omitted for duplicate)[INFO] |  |  +- (org.safehaus.jug:jug:jar:asl:2.0.0:test - omitted for duplicate)[INFO] |  |  +- (commons-cli:commons-cli:jar:1.2:test - omitted for duplicate)[INFO] |  |  +- (commons-collections:commons-collections:jar:3.2.1:test - omitted for duplicate)[INFO] |  |  +- (commons-io:commons-io:jar:1.4:test - omitted for duplicate)[INFO] |  |  +- (commons-lang:commons-lang:jar:2.4:test - omitted for duplicate)[INFO] |  |  +- (commons-pool:commons-pool:jar:1.5.3:test - omitted for duplicate)[INFO] |  |  +- (javax.activation:activation:jar:1.1-osgi:test - omitted for duplicate)[INFO] |  |  +- (org.apache.geronimo.specs:geronimo-jta_1.1_spec:jar:1.1.1:test - omitted for duplicate)[INFO] |  |  +- (org.apache.geronimo.specs:geronimo-j2ee-connector_1.5_spec:jar:1.1-osgi:test - omitted for duplicate)[INFO] |  |  +- (javax.annotation:jsr250-api:jar:1.0:test - omitted for duplicate)[INFO] |  |  +- (org.slf4j:jcl-over-slf4j:jar:1.6.1:test - omitted for duplicate)[INFO] |  |  +- (org.slf4j:slf4j-api:jar:1.6.1:test - omitted for duplicate)[INFO] |  |  +- (org.slf4j:slf4j-log4j12:jar:1.6.1:test - omitted for duplicate)[INFO] |  |  +- (log4j:log4j:jar:1.2.16:test - omitted for duplicate)[INFO] |  |  +- (asm:asm:jar:3.1:test - omitted for duplicate)[INFO] |  |  +- (asm:asm-commons:jar:3.1:test - omitted for duplicate)[INFO] |  |  +- (org.mvel:mvel2:jar:2.1.3.Final:test - omitted for duplicate)[INFO] |  |  +- (org.jgrapht:jgrapht-jdk1.5:jar:0.7.3:test - omitted for duplicate)[INFO] |  |  \- (org.mule.common:mule-common:jar:0.11.0:test - omitted for duplicate)[INFO] |  \- (org.mockito:mockito-all:jar:1.9.0:test - omitted for conflict with 1.8.2)[INFO] +- com.amazonaws:aws-java-sdk:jar:1.5.6:compile[INFO] |  +- commons-logging:commons-logging:jar:1.1.1:compile[INFO] |  +- org.apache.httpcomponents:httpclient:jar:4.2:compile[INFO] |  |  +- org.apache.httpcomponents:httpcore:jar:4.2:compile[INFO] |  |  +- (commons-logging:commons-logging:jar:1.1.1:compile - omitted for duplicate)[INFO] |  |  \- (commons-codec:commons-codec:jar:1.6:compile - omitted for conflict with 1.3)[INFO] |  +- commons-codec:commons-codec:jar:1.3:compile[INFO] |  +- org.codehaus.jackson:jackson-core-asl:jar:1.8.9:compile[INFO] |  \- org.codehaus.jackson:jackson-mapper-asl:jar:1.8.9:compile[INFO] |     \- (org.codehaus.jackson:jackson-core-asl:jar:1.8.9:compile - omitted for duplicate)[INFO] +- ch.qos.logback:logback-classic:jar:1.0.13:compile[INFO] |  +- ch.qos.logback:logback-core:jar:1.0.13:compile[INFO] |  \- org.slf4j:slf4j-api:jar:1.6.1:compile[INFO] +- uk.com.robust-it:cloning:jar:1.9.0:compile[INFO] |  \- org.objenesis:objenesis:jar:1.2:compile[INFO] +- org.jbehave:jbehave-core:jar:3.8:compile[INFO] |  +- junit:junit-dep:jar:4.8.2:compile[INFO] |  +- org.hamcrest:hamcrest-core:jar:1.1:compile[INFO] |  +- org.hamcrest:hamcrest-library:jar:1.1:compile[INFO] |  |  \- (org.hamcrest:hamcrest-core:jar:1.1:compile - omitted for duplicate)[INFO] |  +- org.hamcrest:hamcrest-integration:jar:1.1:compile[INFO] |  |  \- (org.hamcrest:hamcrest-core:jar:1.1:compile - omitted for duplicate)[INFO] |  +- commons-collections:commons-collections:jar:3.2.1:compile[INFO] |  +- commons-io:commons-io:jar:1.4:compile[INFO] |  +- commons-lang:commons-lang:jar:2.4:compile[INFO] |  +- org.codehaus.plexus:plexus-utils:jar:3.0.10:compile[INFO] |  +- org.freemarker:freemarker:jar:2.3.19:compile[INFO] |  +- com.thoughtworks.paranamer:paranamer:jar:2.4:compile[INFO] |  \- com.thoughtworks.xstream:xstream:jar:1.4.4:compile[INFO] |     +- xmlpull:xmlpull:jar:1.1.3.1:compile[INFO] |     \- xpp3:xpp3_min:jar:1.1.4c:compile[INFO] +- org.jbehave:jbehave-maven-plugin:jar:3.8:compile[INFO] |  +- (org.jbehave:jbehave-core:jar:3.8:compile - omitted for duplicate)[INFO] |  +- org.apache.maven:maven-plugin-api:jar:2.0.11:compile[INFO] |  +- org.apache.maven:maven-artifact:jar:2.0.11:compile[INFO] |  |  \- (org.codehaus.plexus:plexus-utils:jar:1.5.6:compile - omitted for conflict with 3.0.10)[INFO] |  +- org.apache.maven:maven-project:jar:2.0.11:compile[INFO] |  |  +- org.apache.maven:maven-settings:jar:2.0.11:compile[INFO] |  |  |  +- (org.apache.maven:maven-model:jar:2.0.11:compile - omitted for duplicate)[INFO] |  |  |  +- (org.codehaus.plexus:plexus-interpolation:jar:1.1:compile - omitted for duplicate)[INFO] |  |  |  +- (org.codehaus.plexus:plexus-utils:jar:1.5.6:compile - omitted for conflict with 3.0.10)[INFO] |  |  |  \- (org.codehaus.plexus:plexus-container-default:jar:1.0-alpha-9-stable-1:compile - omitted for duplicate)[INFO] |  |  +- org.apache.maven:maven-profile:jar:2.0.11:compile[INFO] |  |  |  +- (org.apache.maven:maven-model:jar:2.0.11:compile - omitted for duplicate)[INFO] |  |  |  +- (org.codehaus.plexus:plexus-utils:jar:1.5.6:compile - omitted for conflict with 3.0.10)[INFO] |  |  |  \- (org.codehaus.plexus:plexus-container-default:jar:1.0-alpha-9-stable-1:compile - omitted for duplicate)[INFO] |  |  +- org.apache.maven:maven-model:jar:2.0.11:compile[INFO] |  |  |  \- (org.codehaus.plexus:plexus-utils:jar:1.5.6:compile - omitted for conflict with 3.0.10)[INFO] |  |  +- org.apache.maven:maven-artifact-manager:jar:2.0.11:compile[INFO] |  |  |  +- org.apache.maven:maven-repository-metadata:jar:2.0.11:compile[INFO] |  |  |  |  \- (org.codehaus.plexus:plexus-utils:jar:1.5.6:compile - omitted for conflict with 3.0.10)[INFO] |  |  |  +- (org.codehaus.plexus:plexus-utils:jar:1.5.6:compile - omitted for conflict with 3.0.10)[INFO] |  |  |  +- (org.apache.maven:maven-artifact:jar:2.0.11:compile - omitted for duplicate)[INFO] |  |  |  +- (org.codehaus.plexus:plexus-container-default:jar:1.0-alpha-9-stable-1:compile - omitted for duplicate)[INFO] |  |  |  \- org.apache.maven.wagon:wagon-provider-api:jar:1.0-beta-2:compile[INFO] |  |  |     \- (org.codehaus.plexus:plexus-utils:jar:1.0.4:compile - omitted for conflict with 3.0.10)[INFO] |  |  +- org.apache.maven:maven-plugin-registry:jar:2.0.11:compile[INFO] |  |  |  +- (org.codehaus.plexus:plexus-utils:jar:1.5.6:compile - omitted for conflict with 3.0.10)[INFO] |  |  |  \- (org.codehaus.plexus:plexus-container-default:jar:1.0-alpha-9-stable-1:compile - omitted for duplicate)[INFO] |  |  +- org.codehaus.plexus:plexus-interpolation:jar:1.1:compile[INFO] |  |  +- (org.codehaus.plexus:plexus-utils:jar:1.5.6:compile - omitted for conflict with 3.0.10)[INFO] |  |  +- (org.apache.maven:maven-artifact:jar:2.0.11:compile - omitted for duplicate)[INFO] |  |  \- org.codehaus.plexus:plexus-container-default:jar:1.0-alpha-9-stable-1:compile[INFO] |  |     +- (junit:junit:jar:3.8.1:compile - omitted for conflict with 4.10)[INFO] |  |     +- (org.codehaus.plexus:plexus-utils:jar:1.0.4:compile - omitted for conflict with 3.0.10)[INFO] |  |     \- classworlds:classworlds:jar:1.1-alpha-2:compile[INFO] |  \- org.codehaus.plexus:plexus-archiver:jar:1.2:compile[INFO] |     +- (org.codehaus.plexus:plexus-container-default:jar:1.0-alpha-9-stable-1:compile - omitted for duplicate)[INFO] |     +- (org.codehaus.plexus:plexus-utils:jar:2.0.5:compile - omitted for conflict with 3.0.10)[INFO] |     \- org.codehaus.plexus:plexus-io:jar:1.0.1:compile[INFO] |        \- (org.codehaus.plexus:plexus-utils:jar:2.0.5:compile - omitted for conflict with 3.0.10)[INFO] \- de.codecentric:jbehave-junit-runner:jar:1.0.1:compile[INFO]    +- junit:junit:jar:4.10:compile[INFO]    |  \- (org.hamcrest:hamcrest-core:jar:1.1:compile - omitted for duplicate)[INFO]    \- org.mockito:mockito-core:jar:1.9.0:compile[INFO]       +- (org.hamcrest:hamcrest-core:jar:1.1:compile - omitted for duplicate)[INFO]       \- (org.objenesis:objenesis:jar:1.0:compile - omitted for conflict with 1.2)Any thoughts on what the root problem is or how to fix it?--- Update ---As per the conversation below I added the dependency to log4j in my JBehave plugin, and the problem was fixed:<plugin>   <groupId>org.jbehave</groupId>   <artifactId>jbehave-maven-plugin</artifactId>   <version>${jbehave.version}</version>   <executions>      <execution>...</execution>   </executions>   <dependencies>      <dependency>         <groupId>log4j</groupId>         <artifactId>log4j</artifactId>         <version>1.2.17</version>         <scope>compile</scope>      </dependency>   </dependencies></plugin>
19072524	[u'class);', u'setName', u'setName', u'addVertex', u'addVertex', u'addEdge', u'setImageURL', u'setTaskDescription', u'out', u'0,"endTime":0']	I am trying to clone following class,import org.jgrapht.DirectedGraph;import org.jgrapht.graph.DirectedMultigraph;import org.jgrapht.graph.ListenableDirectedGraph;public class Graph<V, E> extends ListenableDirectedGraph<V, E> implements        DirectedGraph<V, E> {             //Some ele,emts}My Cloning Code looks as below,public static void main(String args[]){        Graph<Vertex,Edge> graph = new Graph<Vertex, Edge>(Edge.class);        Vertex a = new Vertex();        a.setName("A");        Vertex b = new Vertex();        b.setName("B");        graph.addVertex(a);        graph.addVertex(b);        graph.addEdge(a, b);        Task task = new Task();        task.setImageURL("image:abc.png");        task.setTaskDescription("task description");        Gson gson = new Gson();        System.out.println(gson.toJson(graph));    }But whenever I print gson string in last line, it's not showing any elements of the object. The constrcuted json string by gson is as follows, {"currentTask":{"taskName":"","taskDescription":"","imageURL":"","units":"Days","times":{"startTime":0.0,"endTime":0.0,"timeStep":0.0}},"graphListeners":[],"vertexSetListeners":[],"reuseableEdgeEvent":{"type":-1},"reuseableVertexEvent":{"type":-1},"reuseEvents":false,"delegate":{}}All elements are empty. Any pointers on what I am doing wrong My objetive is to deep clone the object. Instead of copying all recursive set of fields in object, I feel gson is better approach.
19180305	[]	for a project I am receiving xml-strings from a web-service, these are in the graphML-Format.How can I work with that in Java/Android? I had a look at jgrapht but as far as I can see it only has an GraphML-Exporter but no import-possibilities. (In a later step I would also need the possibility to create an graphML-xml)blueprints looks like what I am searching for, but I haven't found a possibility to create a graph based on the finished xml?!Any tipps for me on how to work with these libraries and- a) create a Graph from the xml- b) and create new graphs programatically and save/export them as graphMLor are there better suiting libraries out there?Any help is really appreciated!
19231855	[u'6', u'VERSION_1_6', u'VERSION_1_6', u'6', u'simpleframework:simple-xml:2', u'', u'', u'simpleframework:simple-xml:2', u'', u'simpleframework:simple-xml:2', u'', u'simpleframework:simple-xml:2', u'', u'simpleframework:simple-xml:2', u'', u'simpleframework:simple-xml:2', u'simpleframework:simple-xml:2', u'6']	I have problem with include local jar file.I have two projects:ProjectAProjectB  --libs   ----jgrapht-jdk1.6.jarMy build file include (This is the part that concerns projectB):project(':ProjectB') {apply plugin: 'java'repositories {    mavenCentral()}configurations {    compileOnly}sourceCompatibility = JavaVersion.VERSION_1_6targetCompatibility = JavaVersion.VERSION_1_6dependencies {    compileOnly files('libs/jgrapht-jdk1.6.jar')    compile 'org.simpleframework:simple-xml:2.7@jar'       }}I run command gradlew -q dependencies and see resultProject :ProjectBarchives - Configuration for archive artifacts.No dependenciescompile - Compile classpath for source set 'main'.\--- org.simpleframework:simple-xml:2.7compileOnlyNo dependenciesdefault - Configuration for default artifacts.\--- org.simpleframework:simple-xml:2.7runtime - Runtime classpath for source set 'main'.\--- org.simpleframework:simple-xml:2.7testCompile - Compile classpath for source set 'test'.\--- org.simpleframework:simple-xml:2.7testRuntime - Runtime classpath for source set 'test'.\--- org.simpleframework:simple-xml:2.7Line compile 'org.simpleframework:simple-xml:2.7@jar' - working fine, but line compileOnly files('libs/jgrapht-jdk1.6.jar') don't work.I use gradle 1.8, Windows 7 x64Tell me please where I made a mistake.
19313254	[u'', u'hibernate', u'', u'epam', u'epam', u'', u'xml" })', u'class)', u'', u'0" encoding="UTF-8"?>', u'springframework', u'w3', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'epam', u'epam', u'epam', u'springframework', u'springframework', u'jsp" />', u'springframework', u'springframework', u'microsoft', u'16', u'springframework', u'cfg', u'show_sql">true</prop>', u'dialect">org', u'connection', u'hbm2ddl', u'epam', u'813 sec <<< FAILURE!', u'epam', u'lang', u'epam', u'reflect', u'reflect', u'reflect', u'lang', u'junit', u'junit', u'junit', u'junit', u'junit', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'junit', u'junit', u'junit', u'junit', u'junit', u'springframework', u'springframework', u'junit', u'springframework', u'apache', u'apache', u'apache', u'reflect', u'reflect', u'reflect', u'lang', u'apache', u'apache', u'apache', u'apache', u'apache', u'epam', u'lang', u'epam', u'reflect', u'reflect', u'reflect', u'lang', u'junit', u'junit', u'junit', u'junit', u'junit', u'springframework', u'springframework', u'springframework', u'', u'', u'0', u'1:tree ', u'epam', u'springframework:spring-context:jar:3', u'springframework:spring-aop:jar:3', u'springframework:spring-core:jar:3', u'springframework:spring-expression:jar:3', u'springframework:spring-webmvc:jar:3', u'springframework:spring-web:jar:3', u'springframework:spring-beans:jar:3', u'springframework', u'springframework:spring-jdbc:jar:3', u'springframework:spring-tx:jar:3', u'0:compile', u'springframework', u'springframework', u'springframework', u'springframework', u'validation:validation-api:jar:1', u'hibernate:hibernate-validator:jar:5', u'jboss', u'fasterxml:classmate:jar:0', u'epam', u'mule', u'mule', u'mule', u'mule', u'mule:mule-core:jar:3', u'8', u'safehaus', u'2:compile', u'4:compile', u'4:compile', u'5', u'activation:activation:jar:1', u'apache', u'apache', u'annotation:jsr250-api:jar:1', u'1:compile', u'1:compile', u'1:compile', u'mvel:mvel2:jar:2', u'jgrapht:jgrapht-jdk1', u'mule', u'mule', u'2:compile', u'1', u'0:compile', u'3-osgi:compile', u'1-osgi:compile', u'5', u'5', u'samba', u'6:compile', u'springframework', u'springframework', u'springframework:spring-context-support:jar:3', u'springframework:spring-orm:jar:3', u'springframework:spring-oxm:jar:3', u'springframework:spring-jms:jar:3', u'apache', u'apache', u'microsoft', u'hibernate:hibernate-core:jar:4', u'7', u'6', u'jboss', u'hibernate', u'javassist:javassist:jar:3', u'hibernate', u'hibernate:hibernate-entitymanager:jar:4', u'hibernate:hibernate-ehcache:jar:4', u'sf', u'1', u'webjars:bootstrap:jar:2', u'webjars:jquery-ui:jar:1', u'webjars:jquery:jar:1', u'aspectj:aspectjweaver:jar:1', u'ow2', u'ow2', u'ow2', u'eclipse', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'1:compile', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'apache', u'mail:mail:jar:1', u'ow2', u'ow2', u'ow2', u'apache', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'xml', u'xml', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'apache', u'ow2', u'ow2', u'ow2', u'ow2', u'0', u'0', u'0', u'transaction:jta:jar:1', u'1', u'ow2', u'ow2', u'0', u'apache', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'6', u'jcip:jcip-annotations:jar:1', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'8', u'ow2', u'ow2', u'ow2', u'objectweb', u'objectweb', u'objectweb', u'objectweb', u'objectweb', u'4:compile', u'objectweb', u'objectweb', u'objectweb', u'ow2', u'ow2', u'ow2', u'2:compile', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'ow2', u'aspectj:aspectjrt:jar:1', u'slf4j:slf4j-api:jar:1', u'slf4j:jcl-over-slf4j:jar:1', u'slf4j:slf4j-log4j12:jar:1', u'2', u'inject:javax', u'servlet:servlet-api:jar:2', u'servlet', u'servlet:jstl:jar:1', u'7:test', u'mockito:mockito-all:jar:1', u'springframework:spring-test:jar:3', u'hamcrest:hamcrest-all:jar:1', u'672s', u'apache', u'13</version>', u'java</include>', u'java</include>']	I have spring-mvc project.if click right mouse button on project and make so:I see following result:if I click so:I see next trace(very long): ...        **WARN : org.hibernate.engine.jdbc.internal.JdbcServicesImpl - HHH000342: Could not obtain connection to query metadata : Login failed for user 'root'.** ClientConnectionId:f27b5537-3406-4459-9ad5-2d6fa9c57aa4       ...     Results :    Tests in error:       getAllCandidatesTest(com.epam.hhsystem.web.controllers.CandidateMenuControllerTest): com.epam.hhsystem.services.CandidateService.getAll()Ljava/util/Set;      getAllCandidates(com.epam.hhsystem.web.controllers.CandidateMenuControllerTest): com.epam.hhsystem.services.CandidateService.getAll()Ljava/util/Set;        ...      What the reason for this behaviour?UPDATEone of test classes  @ContextConfiguration(locations = { "classpath:/test/BeanConfigUI.xml" })    @RunWith(SpringJUnit4ClassRunner.class)    public class CandidateMenuControllerTest {...}BeanConfigUI.xml:<?xml version="1.0" encoding="UTF-8"?><beans xmlns="http://www.springframework.org/schema/beans"       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"       xmlns:p="http://www.springframework.org/schema/p"       xmlns:aop="http://www.springframework.org/schema/aop"       xmlns:tx="http://www.springframework.org/schema/tx"       xmlns:mvc="http://www.springframework.org/schema/mvc"       xmlns:context="http://www.springframework.org/schema/context"       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">    <!--      (@Annotation-based         configuration) -->    <context:annotation-config />    <mvc:annotation-driven />    <context:component-scan base-package="com.epam.hhsystem.jpa" />    <context:component-scan base-package="com.epam.hhsystem.services" />    <context:component-scan base-package="com.epam.hhsystem.web.controllers" />    <!--         (Data Access Resources) -->    <import resource="data.xml" />    <!-- <import resource="security_config.xml" /> -->     <bean id="viewResolver"        class="org.springframework.web.servlet.view.InternalResourceViewResolver">        <property name="viewClass"            value="org.springframework.web.servlet.view.JstlView" />        <property name="prefix" value="/WEB-INF/views/" />        <property name="suffix" value=".jsp" />    </bean> </beans>data.xml:     ...<!--       @Transactional -->    <tx:annotation-driven transaction-manager="transactionManager" />    <!--   -->    <bean id="transactionManager"        class="org.springframework.orm.hibernate4.HibernateTransactionManager">        <property name="sessionFactory" ref="sessionFactory" />    </bean>    <!--   dataSource -->    <bean id="dataSource"        class="org.springframework.jdbc.datasource.DriverManagerDataSource"        p:driverClassName="com.microsoft.sqlserver.jdbc.SQLServerDriver"        p:url="jdbc:sqlserver://10.16.9.52:1433;databaseName=hhsystemTest;"        p:username="userNew"         p:password="Pass12345" />    <!--     -->    <bean id="sessionFactory"        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">        <property name="dataSource" ref="dataSource" />        <property name="configLocation">            <value>classpath:test/hibernate.cfg.xml</value>        </property>        <property name="hibernateProperties">            <props>                <prop key="hibernate.show_sql">true</prop>                <prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop>                <prop key="hibernate.connection.charSet">UTF-8</prop><!--                <prop key="hibernate.hbm2ddl.auto">create-drop</prop> -->        </props>        </property>    </bean></beans>from target-> surefire-reports-------------------------------------------------------------------------------Test set: com.epam.hhsystem.web.controllers.CandidateMenuControllerTest-------------------------------------------------------------------------------Tests run: 9, Failures: 0, Errors: 8, Skipped: 0, Time elapsed: 5.813 sec <<< FAILURE!getAllCandidatesTest(com.epam.hhsystem.web.controllers.CandidateMenuControllerTest)  Time elapsed: 4.849 sec  <<< ERROR!java.lang.NoSuchMethodError: com.epam.hhsystem.services.CandidateService.getAll()Ljava/util/Set;    at com.epam.hhsystem.web.controllers.CandidateMenuControllerTest.getAllCandidatesTest(CandidateMenuControllerTest.java:95)    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)    at java.lang.reflect.Method.invoke(Method.java:597)    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)    at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)    at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)    at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)    at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)    at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)    at org.junit.runners.ParentRunner.run(ParentRunner.java:236)    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)    at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)    at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)    at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)    at java.lang.reflect.Method.invoke(Method.java:597)    at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)    at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)    at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)    at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)    at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)getAllCandidates(com.epam.hhsystem.web.controllers.CandidateMenuControllerTest)  Time elapsed: 0.089 sec  <<< ERROR!java.lang.NoSuchMethodError: com.epam.hhsystem.services.CandidateService.getAll()Ljava/util/Set;    at com.epam.hhsystem.web.controllers.CandidateMenuControllerTest.getAllCandidates(CandidateMenuControllerTest.java:136)    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)    at java.lang.reflect.Method.invoke(Method.java:597)    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)    at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)    at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)    at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)    at ...result of mvn dependency:treeC:\Users\Nikolay_Tkachev\workspace\HHSystem\UI>mvn dependency:tree[INFO] Scanning for projects...[INFO][INFO] ------------------------------------------------------------------------[INFO] Building hhsystem ui 1.0.0-SNAPSHOT[INFO] ------------------------------------------------------------------------[INFO][INFO] --- maven-dependency-plugin:2.1:tree (default-cli) @ ui ---[INFO] com.epam.hhs:ui:war:1.0.0-SNAPSHOT[INFO] +- org.springframework:spring-context:jar:3.2.3.RELEASE:compile[INFO] |  +- org.springframework:spring-aop:jar:3.2.3.RELEASE:compile[INFO] |  +- org.springframework:spring-core:jar:3.2.3.RELEASE:compile[INFO] |  \- org.springframework:spring-expression:jar:3.2.3.RELEASE:compile[INFO] +- org.springframework:spring-webmvc:jar:3.2.3.RELEASE:compile[INFO] |  \- org.springframework:spring-web:jar:3.2.3.RELEASE:compile[INFO] +- org.springframework:spring-beans:jar:3.2.3.RELEASE:compile[INFO] +- org.springframework.security:spring-security-web:jar:3.1.3.RELEASE:compile[INFO] |  +- org.springframework:spring-jdbc:jar:3.0.7.RELEASE:compile[INFO] |  +- org.springframework:spring-tx:jar:3.0.7.RELEASE:compile[INFO] |  \- aopalliance:aopalliance:jar:1.0:compile[INFO] +- org.springframework.security:spring-security-config:jar:3.1.3.RELEASE:compile[INFO] +- org.springframework.security:spring-security-core:jar:3.1.3.RELEASE:compile[INFO] +- org.springframework.security:spring-security-taglibs:jar:3.1.3.RELEASE:compile[INFO] |  \- org.springframework.security:spring-security-acl:jar:3.1.3.RELEASE:compile[INFO] +- javax.validation:validation-api:jar:1.1.0.Final:compile[INFO] +- org.hibernate:hibernate-validator:jar:5.0.1.Final:compile[INFO] |  +- org.jboss.logging:jboss-logging:jar:3.1.1.GA:compile[INFO] |  \- com.fasterxml:classmate:jar:0.8.0:compile[INFO] +- com.epam.hhs:core:jar:1.0.9-SNAPSHOT:compile[INFO] |  +- org.mule.transports:mule-transport-http:jar:3.4.0:compile[INFO] |  |  +- org.mule.transports:mule-transport-ssl:jar:3.4.0:compile[INFO] |  |  |  \- org.mule.transports:mule-transport-tcp:jar:3.4.0:compile[INFO] |  |  |     \- org.mule.modules:mule-module-spring-config:jar:3.4.0:compile[INFO] |  |  |        +- org.mule:mule-core:jar:3.4.0:compile[INFO] |  |  |        |  +- commons-beanutils:commons-beanutils:jar:1.8.0:compile[INFO] |  |  |        |  +- org.safehaus.jug:jug:jar:asl:2.0.0:compile[INFO] |  |  |        |  +- commons-cli:commons-cli:jar:1.2:compile[INFO] |  |  |        |  +- commons-io:commons-io:jar:1.4:compile[INFO] |  |  |        |  +- commons-lang:commons-lang:jar:2.4:compile[INFO] |  |  |        |  +- commons-pool:commons-pool:jar:1.5.3:compile[INFO] |  |  |        |  +- javax.activation:activation:jar:1.1-osgi:compile[INFO] |  |  |        |  +- org.apache.geronimo.specs:geronimo-jta_1.1_spec:jar:1.1.1:compile[INFO] |  |  |        |  +- org.apache.geronimo.specs:geronimo-j2ee-connector_1.5_spec:jar:1.1-osgi:compile[INFO] |  |  |        |  +- javax.annotation:jsr250-api:jar:1.0:compile[INFO] |  |  |        |  +- asm:asm:jar:3.1:compile[INFO] |  |  |        |  +- asm:asm-commons:jar:3.1:compile[INFO] |  |  |        |  |  \- asm:asm-tree:jar:3.1:compile[INFO] |  |  |        |  +- org.mvel:mvel2:jar:2.1.3.Final:compile[INFO] |  |  |        |  +- org.jgrapht:jgrapht-jdk1.5:jar:0.7.3:compile[INFO] |  |  |        |  \- org.mule.common:mule-common:jar:0.11.0:compile[INFO] |  |  |        +- org.mule.modules:mule-module-annotations:jar:3.4.0:compile[INFO] |  |  |        |  \- cglib:cglib-nodep:jar:2.2:compile[INFO] |  |  |        \- jaxen:jaxen:jar:1.1.1:compile[INFO] |  |  |           \- jdom:jdom:jar:1.0:compile[INFO] |  |  +- commons-codec:commons-codec:jar:1.3-osgi:compile[INFO] |  |  +- commons-httpclient:commons-httpclient:jar:3.1-osgi:compile[INFO] |  |  +- tomcat:tomcat-util:jar:5.5.23:compile[INFO] |  |  |  \- tomcat:tomcat-apr:jar:5.5.23:compile[INFO] |  |  +- org.samba.jcifs:jcifs:jar:1.3.3:compile[INFO] |  |  \- joda-time:joda-time:jar:1.6:compile[INFO] |  +- org.springframework.data:spring-data-jpa:jar:1.3.2.RELEASE:compile[INFO] |  |  \- org.springframework.data:spring-data-commons:jar:1.5.1.RELEASE:compile[INFO] |  +- org.springframework:spring-context-support:jar:3.2.3.RELEASE:compile[INFO] |  +- org.springframework:spring-orm:jar:3.2.3.RELEASE:compile[INFO] |  +- org.springframework:spring-oxm:jar:3.2.3.RELEASE:compile[INFO] |  +- org.springframework:spring-jms:jar:3.2.3.RELEASE:compile[INFO] |  +- org.apache.tomcat:tomcat-jdbc:jar:7.0.37:runtime[INFO] |  |  \- org.apache.tomcat:tomcat-juli:jar:7.0.37:runtime[INFO] |  +- com.microsoft.sqlserver:sqljdbc4:jar:3.0:compile[INFO] |  +- org.hibernate:hibernate-core:jar:4.2.1.Final:compile[INFO] |  |  +- antlr:antlr:jar:2.7.7:compile[INFO] |  |  +- dom4j:dom4j:jar:1.6.1:compile[INFO] |  |  +- org.jboss.spec.javax.transaction:jboss-transaction-api_1.1_spec:jar:1.0.1.Final:compile[INFO] |  |  +- org.hibernate.javax.persistence:hibernate-jpa-2.0-api:jar:1.0.1.Final:compile[INFO] |  |  +- org.javassist:javassist:jar:3.15.0-GA:compile[INFO] |  |  \- org.hibernate.common:hibernate-commons-annotations:jar:4.0.1.Final:compile[INFO] |  +- org.hibernate:hibernate-entitymanager:jar:4.2.1.Final:compile[INFO] |  +- org.hibernate:hibernate-ehcache:jar:4.2.1.Final:compile[INFO] |  |  \- net.sf.ehcache:ehcache-core:jar:2.4.3:compile[INFO] |  +- mysql:mysql-connector-java:jar:5.1.25:compile[INFO] |  +- org.webjars:bootstrap:jar:2.3.0:compile[INFO] |  +- org.webjars:jquery-ui:jar:1.9.2:compile[INFO] |  +- org.webjars:jquery:jar:1.9.0:compile[INFO] |  +- org.aspectj:aspectjweaver:jar:1.7.2:runtime[INFO] |  \- org.ow2.easybeans:easybeans-uberjar-eclipselink:jar:1.2.0-M1:compile[INFO] |     +- org.ow2.spec.ee:ow2-jpa-2.0-spec:jar:1.0.3:compile[INFO] |     +- org.ow2.easybeans:easybeans-jpa-eclipselink-dependency:pom:1.2.0-M1:compile[INFO] |     |  \- org.eclipse.persistence:eclipselink:jar:2.0.1:compile[INFO] |     +- org.ow2.easybeans:easybeans-jpa-default-eclipselink:jar:1.2.0-M1:compile[INFO] |     \- org.ow2.easybeans:easybeans-all:jar:1.2.0-M1:compile[INFO] |        +- org.ow2.easybeans:easybeans-core:jar:1.2.0-M1:compile[INFO] |        |  +- org.ow2.spec.ee:ow2-connector-1.5-spec:jar:1.0.3:compile[INFO] |        |  +- org.ow2.util:util-log:jar:1.0.22:compile[INFO] |        |  |  +- org.ow2.util:util-i18n:jar:1.0.22:compile[INFO] |        |  |  \- commons-logging:commons-logging-api:jar:1.1:compile[INFO] |        |  +- org.ow2.easybeans:easybeans-util:jar:1.2.0-M1:compile[INFO] |        |  +- org.ow2.easybeans:easybeans-api:jar:1.2.0-M1:compile[INFO] |        |  |  +- org.ow2.spec.ee:ow2-ejb-3.0-spec:jar:1.0.3:compile[INFO] |        |  |  +- org.ow2.spec.ee:ow2-jpa-1.0-spec:jar:1.0.3:compile[INFO] |        |  |  +- org.ow2.util:util-ee-deploy-api:jar:1.0.22:compile[INFO] |        |  |  +- org.ow2.spec.ee:ow2-jsr77-1.1-spec:jar:1.0.3:compile[INFO] |        |  |  +- org.apache.geronimo.specs:geronimo-jaxrpc_1.1_spec:jar:1.1:compile[INFO] |        |  |  +- javax.mail:mail:jar:1.4:compile[INFO] |        |  |  +- org.ow2.util:util-ee-metadata-common-api:jar:1.0.22:compile[INFO] |        |  |  \- org.ow2.util:util-pool-api:jar:1.0.22:compile[INFO] |        |  +- org.ow2.easybeans:easybeans-jacc-provider:jar:1.2.0-M1:compile[INFO] |        |  |  \- org.apache.geronimo.specs:geronimo-jacc_1.1_spec:jar:1.0-M2:compile[INFO] |        |  +- org.ow2.util:util-ee-deploy-impl:jar:1.0.22:compile[INFO] |        |  |  +- org.ow2.util:util-archive-impl:jar:1.0.22:compile[INFO] |        |  |  +- org.ow2.util:util-file:jar:1.0.22:compile[INFO] |        |  |  +- org.ow2.util:util-xml:jar:1.0.22:compile[INFO] |        |  |  +- org.ow2.util:util-plan-deploy-api:jar:1.0.22:compile[INFO] |        |  |  |  \- org.ow2.util:util-plan-schemas:jar:1.0.22:compile[INFO] |        |  |  |     \- javax.xml.bind:jaxb-api:jar:2.1:compile[INFO] |        |  |  |        \- javax.xml.stream:stax-api:jar:1.0-2:compile[INFO] |        |  |  +- org.ow2.util.asm:asm:jar:3.1:compile[INFO] |        |  |  +- org.ow2.util.asm:asm-commons:jar:3.1:compile[INFO] |        |  |  |  \- org.ow2.util.asm:asm-tree:jar:3.1:compile[INFO] |        |  |  \- org.ow2.util:util-execution:jar:1.0.22:compile[INFO] |        |  +- org.ow2.util:util-pool-impl:jar:1.0.22:compile[INFO] |        |  |  \- org.ow2.util:util-scan-api:jar:1.0.22:compile[INFO] |        |  +- org.ow2.util:util-pool-implenhanced:jar:1.0.22:compile[INFO] |        |  |  \- org.ow2.util:util-stream:jar:1.0.22:compile[INFO] |        |  +- org.ow2.easybeans:easybeans-security:jar:1.2.0-M1:compile[INFO] |        |  +- org.ow2.util:util-xmlconfig:jar:1.0.22:compile[INFO] |        |  +- org.ow2.easybeans:easybeans-transaction:jar:1.2.0-M1:compile[INFO] |        |  +- org.apache.tomcat:servlet-api:jar:6.0.13:compile[INFO] |        |  +- org.ow2.easybeans:easybeans-asm:jar:3.0:compile[INFO] |        |  +- org.ow2.easybeans:easybeans-asm-commons:jar:3.0:compile[INFO] |        |  |  \- org.ow2.easybeans:easybeans-asm-tree:jar:3.0:compile[INFO] |        |  +- org.ow2.util:util-ee-metadata-ws-api:jar:1.0.22:compile[INFO] |        |  +- jotm:jotm:jar:2.0.10:compile[INFO] |        |  |  +- jotm:jotm_jrmp_stubs:jar:2.0.10:compile[INFO] |        |  |  +- commons-logging:commons-logging:jar:1.0.3:compile[INFO] |        |  |  +- javax.transaction:jta:jar:1.0.1B:compile[INFO] |        |  |  \- howl:howl-logger:jar:0.1.11:compile[INFO] |        |  +- org.ow2.carol:carol:jar:3.0.8:compile[INFO] |        |  |  \- org.ow2.carol:carol-interceptors:jar:1.0.1:compile[INFO] |        |  +- commons-modeler:commons-modeler:jar:2.0.1:compile[INFO] |        |  +- org.apache.geronimo.specs:geronimo-jms_1.1_spec:jar:1.1:compile[INFO] |        |  +- org.ow2.util:util-event-impl:jar:1.0.22:compile[INFO] |        |  \- org.ow2.util:util-jmx-impl:jar:1.0.22:compile[INFO] |        +- org.ow2.easybeans:easybeans-management:jar:1.2.0-M1:compile[INFO] |        +- org.ow2.easybeans:easybeans-jndi-resolver:jar:1.2.0-M1:compile[INFO] |        +- org.ow2.easybeans:easybeans-component-carol:jar:1.2.0-M1:compile[INFO] |        +- org.ow2.easybeans:easybeans-component-cmi:jar:1.2.0-M1:compile[INFO] |        |  +- org.ow2.cmi:cmi-jgroups:jar:2.2.4:compile[INFO] |        |  |  +- org.ow2.cmi:cmi-api-client:jar:2.2.4:compile[INFO] |        |  |  |  \- org.ow2.util:util-component-impl:jar:1.0.22:compile[INFO] |        |  |  +- org.ow2.cmi:cmi-core-common:jar:2.2.4:compile[INFO] |        |  |  +- org.ow2.cmi:cmi-core-server:jar:2.2.4:compile[INFO] |        |  |  |  \- org.ow2.cmi:cmi-api-server:jar:2.2.4:compile[INFO] |        |  |  +- org.ow2.cmi:cmi-admin:jar:2.2.4:compile[INFO] |        |  |  +- org.ow2.util:util-cluster-jgroups:jar:1.0.22:compile[INFO] |        |  |  |  \- jgroups:jgroups:jar:2.6.10.GA:compile[INFO] |        |  |  \- net.jcip:jcip-annotations:jar:1.0:compile[INFO] |        |  +- org.ow2.cmi:cmi-jndi:jar:2.2.4:compile[INFO] |        |  |  +- org.ow2.cmi:cmi-rpc:jar:2.2.4:compile[INFO] |        |  |  |  \- org.ow2.cmi:cmi-ejb2:jar:2.2.4:compile[INFO] |        |  |  |     \- org.ow2.cmi:cmi-ha:jar:2.2.4:compile[INFO] |        |  |  +- org.ow2.cmi:cmi-core-client:jar:2.2.4:compile[INFO] |        |  |  \- org.ow2.cmi:cmi-lb:jar:2.2.4:compile[INFO] |        |  +- org.ow2.util:util-event-api:jar:1.0.22:compile[INFO] |        |  \- org.ow2.cmi:cmi-components-event:jar:2.2.4:compile[INFO] |        |     \- org.ow2.util:util-component-api:jar:1.0.22:compile[INFO] |        +- org.ow2.easybeans:easybeans-deployment:jar:1.2.0-M1:compile[INFO] |        |  +- org.ow2.util:util-scan-impl:jar:1.0.22:compile[INFO] |        |  \- org.ow2.util:util-ee-metadata-ejbjar-impl:jar:1.0.22:compile[INFO] |        |     +- org.ow2.util:util-ee-metadata-ejbjar-api:jar:1.0.22:compile[INFO] |        |     +- org.ow2.util:util-ee-metadata-common-impl:jar:1.0.22:compile[INFO] |        |     +- org.ow2.util:util-ee-metadata-ws-impl:jar:1.0.22:compile[INFO] |        |     \- org.ow2.util:util-marshalling:jar:1.0.22:compile[INFO] |        +- org.ow2.easybeans:easybeans-component-hsqldb:jar:1.2.0-M1:compile[INFO] |        |  \- hsqldb:hsqldb:jar:1.8.0.7:compile[INFO] |        +- org.ow2.easybeans:easybeans-component-jdbcpool:jar:1.2.0-M1:compile[INFO] |        +- org.ow2.easybeans:easybeans-component-jca-workmanager:jar:1.2.0-M1:compile[INFO] |        +- org.ow2.easybeans:easybeans-component-joram:jar:1.2.0-M1:compile[INFO] |        |  +- org.objectweb.joram:joram-mom:jar:5.3.0:compile[INFO] |        |  +- org.objectweb.joram:joram-connector:jar:5.3.0:compile[INFO] |        |  +- org.objectweb.joram:joram-client:jar:5.3.0:compile[INFO] |        |  +- org.objectweb.joram:joram-shared:jar:5.3.0:compile[INFO] |        |  +- org.objectweb.joram:jcup:jar:5.2.4:compile[INFO] |        |  +- jakarta-regexp:jakarta-regexp:jar:1.4:compile[INFO] |        |  +- org.objectweb.monolog:monolog:jar:2.1.12:compile[INFO] |        |  +- org.objectweb.monolog:monolog-api:jar:2.1.12:compile[INFO] |        |  \- org.objectweb.monolog:monolog-core:jar:2.1.12:compile[INFO] |        +- org.ow2.easybeans:easybeans-component-jotm:jar:1.2.0-M1:compile[INFO] |        +- org.ow2.easybeans:easybeans-component-quartz:jar:1.2.0-M1:compile[INFO] |        |  +- org.ow2.easybeans:quartz:jar:1.6.0:compile[INFO] |        |  \- commons-collections:commons-collections:jar:3.2:compile[INFO] |        +- org.ow2.easybeans:easybeans-component-mail:jar:1.2.0-M1:compile[INFO] |        +- org.ow2.easybeans:easybeans-component-remotejndiresolver:jar:1.2.0-M1:compile[INFO] |        +- org.ow2.easybeans:easybeans-component-smartclient:jar:1.2.0-M1:compile[INFO] |        |  \- org.ow2.easybeans:easybeans-component-smartclient-client:jar:1.2.0-M1:compile[INFO] |        +- org.ow2.easybeans:easybeans-component-smartclient-server:jar:1.2.0-M1:compile[INFO] |        |  +- org.ow2.easybeans:easybeans-component-smartclient-api:jar:1.2.0-M1:compile[INFO] |        |  \- org.ow2.easybeans:easybeans-component-smartclient-common:jar:1.2.0-M1:compile[INFO] |        +- org.ow2.easybeans:easybeans-component-depmonitor:jar:1.2.0-M1:compile[INFO] |        |  +- org.ow2.util:util-url:jar:1.0.22:compile[INFO] |        |  \- org.ow2.util:util-archive-api:jar:1.0.22:compile[INFO] |        +- org.ow2.easybeans:easybeans-component-event:jar:1.2.0-M1:compile[INFO] |        +- org.ow2.easybeans:easybeans-component-jmx:jar:1.2.0-M1:compile[INFO] |        |  \- org.ow2.util:util-jmx-api:jar:1.0.22:compile[INFO] |        +- org.ow2.easybeans:easybeans-component-statistic:jar:1.2.0-M1:compile[INFO] |        +- org.ow2.easybeans:easybeans-component-audit:jar:1.2.0-M1:compile[INFO] |        |  +- org.ow2.util:audit-report-api:jar:1.0.22:compile[INFO] |        |  \- org.ow2.util:audit-report-impl:jar:1.0.22:compile[INFO] |        +- org.ow2.easybeans:easybeans-jpa-openjpa-glue:jar:1.2.0-M1:compile[INFO] |        |  \- org.ow2.spec.ee:ow2-jta-1.1-spec:jar:1.0.3:compile[INFO] |        +- org.ow2.easybeans:easybeans-jpa-toplink-essentials-glue:jar:1.2.0-M1:compile[INFO] |        \- org.ow2.easybeans:easybeans-jpa-eclipselink-glue:jar:1.2.0-M1:compile[INFO] +- org.aspectj:aspectjrt:jar:1.6.10:compile[INFO] +- org.slf4j:slf4j-api:jar:1.6.6:compile[INFO] +- org.slf4j:jcl-over-slf4j:jar:1.6.6:runtime (scope not updated to compile)[INFO] +- org.slf4j:slf4j-log4j12:jar:1.6.6:runtime (scope not updated to compile)[INFO] +- log4j:log4j:jar:1.2.15:runtime (scope not updated to compile)[INFO] +- javax.inject:javax.inject:jar:1:compile[INFO] +- javax.servlet:servlet-api:jar:2.5:provided[INFO] +- javax.servlet.jsp:jsp-api:jar:2.1:provided[INFO] +- javax.servlet:jstl:jar:1.2:compile[INFO] +- junit:junit:jar:4.7:test[INFO] +- org.mockito:mockito-all:jar:1.9.5:compile[INFO] +- org.springframework:spring-test:jar:3.2.3.RELEASE:test[INFO] \- org.hamcrest:hamcrest-all:jar:1.3:test[INFO] ------------------------------------------------------------------------[INFO] BUILD SUCCESS[INFO] ------------------------------------------------------------------------[INFO] Total time: 6.672s[INFO] Finished at: Mon Oct 14 19:36:39 MSK 2013[INFO] Final Memory: 19M/308M[INFO] ------------------------------------------------------------------------C:\Users\Nikolay_Tkachev\workspace\HHSystem\UI>Problems resolved but doesn't understandableI have multimodule maven projctui model depends on core moduleInitially(then I saw error)ui-> pom.xml I have not maven-surefire-plugincore->pom.xml:<plugin>                <groupId>org.apache.maven.plugins</groupId>                <artifactId>maven-surefire-plugin</artifactId>                <version>2.13</version>                <configuration>                    <includes>                        <include>**/*Tests.java</include>                    </includes>                </configuration>            </plugin> my activities:add to core->pom.xml<forkMode>always</forkMode>result - doesn't workadd to ui->pom.xml(see comment unshow here)    org.apache.maven.plugins    maven-surefire-plugin    2.12 alwaysresult - doesn't workchange core->pom.xmldelete this:<includes>                        <include>**/*Tests.java</include>                    </includes>result - good workBut now if I change something in pom.xml wired with maven-surefire-plugin(I can delete from both pom.xml) it is good work. It is strange for me.
19598485	[]	I would suggest using a Graph data structure. You could use JGraphT. It has an implementation for the Dijkstra Algorithm which calculates the shortest path. The nodes would be your ParkingDests and the weight of the edges would be your traveltime of distance. The optimal route would be a subgraph. Have fun.
19738249	[u'jgrapht']	You can use org.jgrapht.alg.VertexCovers to find the min vertex cover of the graph. The compliment of that set will give your max independent set.
19952468	[u'lang', u'hibernate', u'hibernate', u'hibernate', u'hibernate', u'hibernate', u'hibernate', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'lang', u'hibernate', u'hibernate', u'hibernate', u'hibernate', u'hibernate', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'springframework', u'mule', u'mule', u'mule', u'mule', u'mule', u'mule', u'mule', u'mule', u'mule', u'mule', u'mule', u'mule', u'mule', u'mule', u'mule', u'mule', u'mule:mule-core:jar:3', u'8', u'safehaus', u'2:provided', u'2', u'4:provided', u'4:provided', u'5', u'apache', u'annotation:jsr250-api:jar:1', u'slf4j:jcl-over-slf4j:jar:1', u'slf4j:slf4j-api:jar:1', u'slf4j:slf4j-log4j12:jar:1', u'2', u'1:provided', u'1:provided', u'1:provided', u'mvel:mvel2:jar:2', u'jgrapht:jgrapht-jdk1', u'mule', u'mule', u'mule', u'2:provided', u'springframework:spring-context:jar:3', u'springframework:spring-aop:jar:3', u'springframework:spring-expression:jar:3', u'6', u'1', u'0:provided', u'mule', u'mule', u'apache', u'3-osgi:provided', u'thoughtworks', u'1', u'6:provided', u'1', u'codehaus', u'codehaus', u'java', u'sf', u'sf', u'sf', u'xml', u'sun', u'mule', u'springframework:spring-beans:jar:3', u'0:test', u'apache', u'apache', u'apache', u'apache', u'mule:mule-core:test-jar:tests:3', u'activation:activation:jar:1', u'apache', u'mockito:mockito-all:jar:1', u'09:test', u'9:test', u'hamcrest:hamcrest-core:jar:1', u'1', u'mule', u'mail:mail:jar:1', u'mule', u'2:provided', u'experlog:xapool:jar:1', u'springframework:spring-orm:jar:3', u'0:compile', u'springframework:spring-core:jar:3', u'1', u'hibernate:hibernate-entitymanager:jar:4', u'jboss', u'hibernate:hibernate-core:jar:4', u'7', u'hibernate', u'jboss', u'javassist:javassist:jar:3', u'hibernate', u'myapp:jar:0', u'springframework:spring-jdbc:jar:3', u'springframework:spring-tx:jar:3', u'springframework', u'springframework', u'aspectj:aspectjrt:jar:1']	I test a POC with Service include in Mule like bean spring, I have a issue with Hibernate and Jpa dependencies. Every body now which version of Hibernate and JPA are supported/use in Mule 3.4 CE.I have a lot of exception when i wan't to run the flow : whith hibernate 3.6.0.Final :java.lang.IllegalAccessError: tried to access method org.hibernate.engine.CascadeStyle.<init>()V from class org.hibernate.engine.EJB3CascadeStyle$1at org.hibernate.engine.EJB3CascadeStyle$1.<init>(EJB3CascadeStyle.java:44)at org.hibernate.engine.EJB3CascadeStyle.<clinit>(EJB3CascadeStyle.java:39)at org.hibernate.ejb.event.EJB3PersistEventListener.<clinit>(EJB3PersistEventListener.java:39)at org.hibernate.ejb.EventListenerConfigurator.<init>(EventListenerConfigurator.java:101)at org.hibernate.ejb.Ejb3Configuration.<init>(Ejb3Configuration.java:159)at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:72)at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:288)at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:310)at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1545)at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1483)at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:295)at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:292)at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)with 4.0.1 and uppe :  java.lang.NoSuchMethodError: org.hibernate.cfg.Environment.verifyProperties(Ljava/util/Map;)V    at org.hibernate.service.ServiceRegistryBuilder.buildServiceRegistry(ServiceRegistryBuilder.java:244)    at org.hibernate.ejb.Ejb3Configuration.buildLifecycleControledServiceRegistry(Ejb3Configuration.java:930)    at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:903)    at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:889)    at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:73)    at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:288)    at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:310)    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1545)    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1483)    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:295)    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:292)    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)    at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1117)    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:922)    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)    at org.mule.config.spring.SpringRegistry.doInitialise(SpringRegistry.java:89)    at org.mule.registry.AbstractRegistry.initialise(AbstractRegistry.java:109)    at org.mule.config.spring.SpringXmlConfigurationBuilder.createSpringRegistry(SpringXmlConfigurationBuilder.java:119)    at org.mule.config.spring.SpringXmlConfigurationBuilder.doConfigure(SpringXmlConfigurationBuilder.java:73)    at org.mule.config.builders.AbstractConfigurationBuilder.configure(AbstractConfigurationBuilder.java:46)    at org.mule.config.builders.AbstractResourceConfigurationBuilder.configure(AbstractResourceConfigurationBuilder.java:78)    at org.mule.config.builders.AutoConfigurationBuilder.autoConfigure(AutoConfigurationBuilder.java:101)    at org.mule.config.builders.AutoConfigurationBuilder.doConfigure(AutoConfigurationBuilder.java:57)    at org.mule.config.builders.AbstractConfigurationBuilder.configure(AbstractConfigurationBuilder.java:46)    at org.mule.config.builders.AbstractResourceConfigurationBuilder.configure(AbstractResourceConfigurationBuilder.java:78)    at org.mule.context.DefaultMuleContextFactory.createMuleContext(DefaultMuleContextFactory.java:84)    at org.mule.module.launcher.application.DefaultMuleApplication.init(DefaultMuleApplication.java:207)    at org.mule.module.launcher.application.ApplicationWrapper.init(ApplicationWrapper.java:64)    at org.mule.module.launcher.DefaultMuleDeployer.deploy(DefaultMuleDeployer.java:47)    at org.mule.tooling.server.application.ApplicationDeployer.run(ApplicationDeployer.java:58)    at org.mule.tooling.server.application.ApplicationDeployer.main(ApplicationDeployer.java:91)My dependence tree :[INFO] +- org.mule:mule-core:jar:3.4.0:provided[INFO] |  +- commons-beanutils:commons-beanutils:jar:1.8.0:provided[INFO] |  +- org.safehaus.jug:jug:jar:asl:2.0.0:provided[INFO] |  +- commons-cli:commons-cli:jar:1.2:provided[INFO] |  +- commons-collections:commons-collections:jar:3.2.1:provided[INFO] |  +- commons-io:commons-io:jar:1.4:provided[INFO] |  +- commons-lang:commons-lang:jar:2.4:provided[INFO] |  +- commons-pool:commons-pool:jar:1.5.3:provided[INFO] |  +- org.apache.geronimo.specs:geronimo-jta_1.1_spec:jar:1.1.1:provided[INFO] |  +- javax.annotation:jsr250-api:jar:1.0:provided[INFO] |  +- org.slf4j:jcl-over-slf4j:jar:1.6.1:provided[INFO] |  +- org.slf4j:slf4j-api:jar:1.6.1:compile[INFO] |  +- org.slf4j:slf4j-log4j12:jar:1.6.1:compile[INFO] |  +- log4j:log4j:jar:1.2.16:compile[INFO] |  +- asm:asm:jar:3.1:provided[INFO] |  +- asm:asm-commons:jar:3.1:provided[INFO] |  |  \- asm:asm-tree:jar:3.1:provided[INFO] |  +- org.mvel:mvel2:jar:2.1.3.Final:provided[INFO] |  +- org.jgrapht:jgrapht-jdk1.5:jar:0.7.3:provided[INFO] |  \- org.mule.common:mule-common:jar:0.11.0:provided[INFO] +- org.mule.modules:mule-module-spring-config:jar:3.4.0:provided[INFO] |  +- org.mule.modules:mule-module-annotations:jar:3.4.0:provided[INFO] |  |  \- cglib:cglib-nodep:jar:2.2:provided[INFO] |  +- org.springframework:spring-context:jar:3.2.1.RELEASE:compile[INFO] |  |  +- org.springframework:spring-aop:jar:3.2.1.RELEASE:compile[INFO] |  |  \- org.springframework:spring-expression:jar:3.2.1.RELEASE:compile[INFO] |  +- dom4j:dom4j:jar:1.6.1-osgi:provided[INFO] |  \- jaxen:jaxen:jar:1.1.1:provided[INFO] |     \- jdom:jdom:jar:1.0:provided[INFO] +- org.mule.transports:mule-transport-file:jar:3.4.0:provided[INFO] +- org.mule.modules:mule-module-xml:jar:3.4.0:provided[INFO] |  +- org.apache.geronimo.specs:geronimo-stax-api_1.0_spec:jar:1.0.1:provided[INFO] |  +- commons-jxpath:commons-jxpath:jar:1.3-osgi:provided[INFO] |  +- com.thoughtworks.xstream:xstream:jar:1.4.2:provided[INFO] |  |  \- xmlpull:xmlpull:jar:1.1.3.1:provided[INFO] |  +- joda-time:joda-time:jar:1.6:provided[INFO] |  +- xpp3:xpp3_min:jar:1.1.3.4.O-osgi:provided[INFO] |  +- org.codehaus.woodstox:woodstox-core-asl:jar:4.0.8:provided[INFO] |  |  \- org.codehaus.woodstox:stax2-api:jar:3.0.2:provided[INFO] |  +- net.java.dev.stax-utils:stax-utils:jar:20080702-osgi:provided[INFO] |  +- net.sf.saxon:saxon:jar:8.9.0.4-osgi:provided[INFO] |  +- net.sf.saxon:saxon-dom:jar:8.9.0.4-osgi:provided[INFO] |  +- net.sf.saxon:saxon-xqj:jar:8.9.0.4:provided[INFO] |  +- javax.xml.bind:jaxb-api:jar:2.1:provided[INFO] |  \- com.sun.xml.bind:jaxb-impl:jar:2.1.5:provided[INFO] +- org.mule.tests:mule-tests-functional:jar:3.4.0:test[INFO] |  +- org.springframework:spring-beans:jar:3.2.1.RELEASE:compile[INFO] |  +- commons-net:commons-net:jar:2.0:test[INFO] |  +- org.apache.ftpserver:ftpserver-core:jar:1.0.2:test[INFO] |  |  \- org.apache.mina:mina-core:jar:2.0.0-M6:test[INFO] |  +- org.apache.ftpserver:ftplet-api:jar:1.0.2:test[INFO] |  +- org.apache.sshd:sshd-core:jar:0.6.0:test[INFO] |  +- bouncycastle:bcprov-jdk14:jar:139:test[INFO] |  +- org.mule:mule-core:test-jar:tests:3.4.0:test[INFO] |  |  +- javax.activation:activation:jar:1.1-osgi:provided[INFO] |  |  \- org.apache.geronimo.specs:geronimo-j2ee-connector_1.5_spec:jar:1.1-osgi:test[INFO] |  \- org.mockito:mockito-all:jar:1.9.0:test[INFO] +- mockobjects:mockobjects-core:jar:0.09:test[INFO] +- junit:junit:jar:4.9:test[INFO] |  \- org.hamcrest:hamcrest-core:jar:1.1:test[INFO] +- mysql:mysql-connector-java:jar:5.1.10:compile[INFO] +- org.mule.transports:mule-transport-email:jar:3.4.0:provided[INFO] |  \- javax.mail:mail:jar:1.4.3:provided[INFO] +- org.mule.transports:mule-transport-jdbc:jar:3.4.0:provided[INFO] |  +- commons-dbutils:commons-dbutils:jar:1.2:provided[INFO] |  \- com.experlog:xapool:jar:1.5.0-osgi:provided[INFO] +- org.springframework:spring-orm:jar:3.2.1.RELEASE:compile[INFO] |  +- aopalliance:aopalliance:jar:1.0:compile[INFO] |  \- org.springframework:spring-core:jar:3.2.1.RELEASE:compile[INFO] |     \- commons-logging:commons-logging:jar:1.1.1:compile[INFO] +- org.hibernate:hibernate-entitymanager:jar:4.0.1.Final:test[INFO] |  +- org.jboss.spec.javax.transaction:jboss-transaction-api_1.1_spec:jar:1.0.0.Final:test[INFO] |  +- org.hibernate:hibernate-core:jar:4.0.1.Final:test[INFO] |  |  \- antlr:antlr:jar:2.7.7:test[INFO] |  +- org.hibernate.javax.persistence:hibernate-jpa-2.0-api:jar:1.0.1.Final:test[INFO] |  +- org.jboss.logging:jboss-logging:jar:3.1.0.CR2:test[INFO] |  +- org.javassist:javassist:jar:3.15.0-GA:test[INFO] |  \- org.hibernate.common:hibernate-commons-annotations:jar:4.0.1.Final:test[INFO] \- fr.myapp:jar:0.0.1-SNAPSHOT:compile[INFO]    +- org.springframework:spring-jdbc:jar:3.2.4.RELEASE:compile[INFO]    |  \- org.springframework:spring-tx:jar:3.2.4.RELEASE:compile[INFO]    \- org.springframework.data:spring-data-jpa:jar:1.4.2.RELEASE:compile[INFO]       +- org.springframework.data:spring-data-commons:jar:1.6.2.RELEASE:compile[INFO]       \- org.aspectj:aspectjrt:jar:1.7.2:compileMy spring service run in test context whithout muleESB, is OK.
20001915	[u'Circular;', u'invokeLater', u'setDefaultCloseOperation', u'add', u'add', u'add', u'getRootPane', u'pack', u'setLocationByPlatform', u'setVisible', u'setOpaque', u'addMouseListener', u'addMouseMotionListener', u'setColor', u'fillRect', u'draw', u'draw', u'setColor', u'drawRect', u'width, mouseRect', u'setBounds', u'isPopupTrigger', u'getComponent', u'getPoint', u'isShiftDown', u'selectToggle', u'isPopupTrigger', u'selectOne', u'selectOne', u'selectNone', u'getComponent', u'popup', u'setBounds', u'min', u'min', u'abs', u'abs', u'selectRect', u'setLocation', u'getX', u'getY', u'updatePosition', u'getPoint', u'getComponent', u'blue);', u'setLayout', u'setBackground', u'add', u'add', u'add', u'add', u'add', u'setModel', u'addChangeListener', u'getSource', u'getValue', u'updateRadius', u'this', u'add', u'add', u'add', u'add', u'add', u'add', u'add', u'add', u'values', u'addItem', u'add', u'add', u'addActionListener', u'toString', u'k = k;', u'setSelectedItem', u'clear', u'clear', u'hueIcon', u'showDialog', u'this, "Choose a color", color);', u'updateColor', u'hueIcon', u'repaint', u'getSelected', u'size', u'size', u'get', u'get', u'add', u'listIterator', u'hasNext', u'next', u'isSelected', u'remove', u'listIterator', u'hasNext', u'next', u'n1 == n || e', u'remove', u'getSource', u'getSelectedItem', u'updateKind', u'selectNone', u'getLocation', u'hueIcon', u'showInputDialog', u'setSelected', u'add', u'nextInt', u'nextInt', u'add', u'', u'', u'n1 = n1;', u'n2 = n2;', u'getLocation', u'getLocation', u'setColor', u'drawLine', u'', u'', u'p = p;', u'r = r;', u'color = color;', u'kind = kind;', u'p = p;', u'r = r;', u'color = color;', u'kind = kind;', u'n = n;', u'', u'setBounds', u'', u'setColor', u'kind == Kind', u'fillOval', u'drawString', u'kind == Kind', u'fillRoundRect', u'drawString', u'kind == Kind', u'fillRect', u'drawString', u'setColor', u'drawRect', u'', u'', u'contains', u'', u'', u'selected = selected;', u'', u'clear', u'isSelected', u'add', u'', u'setSelected', u'', u'contains', u'isSelected', u'selectNone', u'setSelected', u'', u'setSelected', u'', u'contains', u'setSelected', u'', u'isSelected', u'p', u'p', u'setBoundary', u'', u'isSelected', u'r = r;', u'setBoundary', u'', u'isSelected', u'color = color;', u'', u'isSelected', u'kind = kind;', u'color = color;', u'color = color;', u'setColor', u'fillRect']	I have a class(below) that draws circles/squares/rectangle nodes.(Snap shot provided)From the nodes( circles in the snapshot) I want to create a Directed Graph. I want to be able to select all of the inserted NODEs and create a graph out of them.Currently the class can insert the nodes.But I don't know how to turn them into Graph NODEs. Can someone point on how to do that? Thanksimport java.awt.*;import java.awt.event.*;import java.util.ArrayList;import java.util.List;import java.util.ListIterator;import java.util.Random;import javax.swing.*;import javax.swing.event.*;import org.jgraph.JGraph;import org.jgraph.graph.DefaultCellViewFactory;import org.jgraph.graph.DefaultGraphCell;import org.jgraph.graph.DefaultGraphModel;import org.jgraph.graph.GraphLayoutCache;import org.jgraph.graph.GraphModel;import org.jgrapht.EdgeFactory;import org.jgrapht.Graphs;import org.jgrapht.graph.DefaultDirectedWeightedGraph;public class GraphPanel extends JComponent {private static final int WIDE = 640;private static final int HIGH = 480;private static final int RADIUS = 35;private static final Random rnd = new Random();private ControlPanel control = new ControlPanel();private int radius = RADIUS;private Kind kind = Kind.Circular;private List<Node> nodes = new ArrayList<Node>();private List<Node> selected = new ArrayList<Node>();private List<Edge> edges = new ArrayList<Edge>();private Point mousePt = new Point(WIDE / 2, HIGH / 2);private Rectangle mouseRect = new Rectangle();private boolean selecting = false;public static void main(String[] args) throws Exception {    EventQueue.invokeLater(new Runnable() {        public void run() {            //==============================================            GraphModel model = new DefaultGraphModel();            GraphLayoutCache view = new GraphLayoutCache(model, new DefaultCellViewFactory());            JGraph graph = new JGraph(model, view);            //===============================================            JGraph g = new JGraph();            JFrame f = new JFrame("GraphPanel");            f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);            GraphPanel gp = new GraphPanel();            f.add(g);            f.add(gp.control, BorderLayout.NORTH);            f.add(new JScrollPane(gp), BorderLayout.CENTER);            f.getRootPane().setDefaultButton(gp.control.defaultButton);            f.pack();            f.setLocationByPlatform(true);            f.setVisible(true);        }    });}public GraphPanel() {    this.setOpaque(true);    this.addMouseListener(new MouseHandler());    this.addMouseMotionListener(new MouseMotionHandler());}@Overridepublic Dimension getPreferredSize() {    return new Dimension(WIDE, HIGH);}// @Override public void paintComponent(Graphics g) {    g.setColor(new Color(0x00f0f0f0));    g.fillRect(0, 0, getWidth(), getHeight());    for (Edge e : edges) {        e.draw(g);    }    for (Node n : nodes) {        n.draw(g);    }    if (selecting) {        g.setColor(Color.darkGray);        g.drawRect(mouseRect.x, mouseRect.y,            mouseRect.width, mouseRect.height);    }}private class MouseHandler extends MouseAdapter {    @Override    public void mouseReleased(MouseEvent e) {        selecting = false;        mouseRect.setBounds(0, 0, 0, 0);        if (e.isPopupTrigger()) {            showPopup(e);        }        e.getComponent().repaint();    }    @Override    public void mousePressed(MouseEvent e) {        mousePt = e.getPoint();        if (e.isShiftDown()) {            Node.selectToggle(nodes, mousePt);        } else if (e.isPopupTrigger()) {            Node.selectOne(nodes, mousePt);            showPopup(e);        } else if (Node.selectOne(nodes, mousePt)) {            selecting = false;        } else {            Node.selectNone(nodes);            selecting = true;        }        e.getComponent().repaint();    }    private void showPopup(MouseEvent e) {        control.popup.show(e.getComponent(), e.getX(), e.getY());    }}private class MouseMotionHandler extends MouseMotionAdapter {    Point delta = new Point();    @Override    public void mouseDragged(MouseEvent e) {        if (selecting) {            mouseRect.setBounds(                Math.min(mousePt.x, e.getX()),                Math.min(mousePt.y, e.getY()),                Math.abs(mousePt.x - e.getX()),                Math.abs(mousePt.y - e.getY()));            Node.selectRect(nodes, mouseRect);        } else {            delta.setLocation(                e.getX() - mousePt.x,                e.getY() - mousePt.y);            Node.updatePosition(nodes, delta);            mousePt = e.getPoint();        }        e.getComponent().repaint();    }}public JToolBar getControlPanel() {    return control;}public class ControlPanel extends JToolBar {    private Action createGraph = new CreateGraphAction("Create Graph");    private Action newNode = new NewNodeAction("New");    private Action clearAll = new ClearAction("Clear");    private Action kind = new KindComboAction("Kind");    private Action color = new ColorAction("Color");    private Action connect = new ConnectAction("Connect");    private Action delete = new DeleteAction("Delete");    private Action random = new RandomAction("Random");    private JButton defaultButton = new JButton(newNode);    private JComboBox kindCombo = new JComboBox();    private ColorIcon hueIcon = new ColorIcon(Color.blue);    private JPopupMenu popup = new JPopupMenu();    public ControlPanel() {        this.setLayout(new FlowLayout(FlowLayout.LEFT));        this.setBackground(Color.lightGray);        this.add(defaultButton);        this.add(new JButton(clearAll));        this.add(kindCombo);        this.add(new JButton(color));        this.add(new JLabel(hueIcon));        JSpinner js = new JSpinner();        js.setModel(new SpinnerNumberModel(RADIUS, 5, 100, 5));        js.addChangeListener(new ChangeListener() {            @Override            public void stateChanged(ChangeEvent e) {                JSpinner s = (JSpinner) e.getSource();                radius = (Integer) s.getValue();                Node.updateRadius(nodes, radius);                GraphPanel.this.repaint();            }        });        this.add(new JLabel("Size:"));        this.add(js);        this.add(new JButton(random));        popup.add(new JMenuItem(createGraph));        popup.add(new JMenuItem(newNode));        popup.add(new JMenuItem(color));        popup.add(new JMenuItem(connect));                   popup.add(new JMenuItem(delete));        JMenu subMenu = new JMenu("Kind");        for (Kind k : Kind.values()) {            kindCombo.addItem(k);            subMenu.add(new JMenuItem(new KindItemAction(k)));        }        popup.add(subMenu);        kindCombo.addActionListener(kind);    }    class CreateGraphAction extends AbstractAction{        public CreateGraphAction(String name){            super(name);        }        public void actionPerformed(ActionEvent e){        }    }    class KindItemAction extends AbstractAction {        private Kind k;        public KindItemAction(Kind k) {            super(k.toString());            this.k = k;        }        @Override        public void actionPerformed(ActionEvent e) {            kindCombo.setSelectedItem(k);        }    }}private class ClearAction extends AbstractAction {    public ClearAction(String name) {        super(name);    }    public void actionPerformed(ActionEvent e) {        nodes.clear();        edges.clear();        repaint();    }}private class ColorAction extends AbstractAction {    public ColorAction(String name) {        super(name);    }    public void actionPerformed(ActionEvent e) {        Color color = control.hueIcon.getColor();        color = JColorChooser.showDialog(            GraphPanel.this, "Choose a color", color);        if (color != null) {            Node.updateColor(nodes, color);            control.hueIcon.setColor(color);            control.repaint();            repaint();        }    }}private class ConnectAction extends AbstractAction {    public ConnectAction(String name) {        super(name);    }    public void actionPerformed(ActionEvent e) {        Node.getSelected(nodes, selected);        if (selected.size() > 1) {            for (int i = 0; i < selected.size() - 1; ++i) {                Node n1 = selected.get(i);                Node n2 = selected.get(i + 1);                edges.add(new Edge(n1, n2));            }        }        repaint();    }}private class DeleteAction extends AbstractAction {    public DeleteAction(String name) {        super(name);    }    public void actionPerformed(ActionEvent e) {        ListIterator<Node> iter = nodes.listIterator();        while (iter.hasNext()) {            Node n = iter.next();            if (n.isSelected()) {                deleteEdges(n);                iter.remove();            }        }        repaint();    }    private void deleteEdges(Node n) {        ListIterator<Edge> iter = edges.listIterator();        while (iter.hasNext()) {            Edge e = iter.next();            if (e.n1 == n || e.n2 == n) {                iter.remove();            }        }    }}private class KindComboAction extends AbstractAction {    public KindComboAction(String name) {        super(name);    }    public void actionPerformed(ActionEvent e) {        JComboBox combo = (JComboBox) e.getSource();        kind = (Kind) combo.getSelectedItem();        Node.updateKind(nodes, kind);        repaint();    }}private class NewNodeAction extends AbstractAction {    public NewNodeAction(String name) {        super(name);    }    public void actionPerformed(ActionEvent e) {        Node.selectNone(nodes);        Point p = mousePt.getLocation();        Color color = control.hueIcon.getColor();        String s = JOptionPane.showInputDialog("Name For Node");        Node n = new Node(p, radius, color, kind, s);        n.setSelected(true);        nodes.add(n);        repaint();    }}private class RandomAction extends AbstractAction {    public RandomAction(String name) {        super(name);    }    public void actionPerformed(ActionEvent e) {        for (int i = 0; i < 16; i++) {            Point p = new Point(rnd.nextInt(getWidth()),                    rnd.nextInt(getHeight()));            nodes.add(new Node(p, radius, new Color(rnd.nextInt())            , kind));        }        repaint();    }}/** * The kinds of node in a graph. */public enum Kind {    Circular, Rounded, Square;}/** * An Edge is a pair of Nodes. */public static class Edge {    private Node n1;    private Node n2;    public Edge(Node n1, Node n2) {        this.n1 = n1;        this.n2 = n2;    }    public void draw(Graphics g) {        Point p1 = n1.getLocation();        Point p2 = n2.getLocation();        g.setColor(Color.darkGray);        g.drawLine(p1.x, p1.y, p2.x, p2.y);    }}/** * A Node represents a node in a graph. */public static class Node {    private String n;    private Point p;    private int r;    private Color color;    private Kind kind;    private boolean selected = false;    private Rectangle b = new Rectangle();    /**     * Construct a new node.     */    public Node(Point p, int r, Color color, Kind kind) {        this.p = p;        this.r = r;        this.color = color;        this.kind = kind;        setBoundary(b);    }    public Node(Point p, int r, Color color, Kind kind,String n) {        this.p = p;        this.r = r;        this.color = color;        this.kind = kind;        this.n = n;        setBoundary(b);    }    /**     * Calculate this node's rectangular boundary.     */    private void setBoundary(Rectangle b) {        b.setBounds(p.x - r, p.y - r, 2 * r, 2 * r);    }    /**     * Draw this node.     */    public void draw(Graphics g) {        g.setColor(this.color);        if (this.kind == Kind.Circular) {            g.fillOval(b.x, b.y, b.width, b.height);            g.drawString(n, b.x,b.y);        } else if (this.kind == Kind.Rounded) {            g.fillRoundRect(b.x, b.y, b.width, b.height, r, r);            g.drawString(n, b.x,b.y);        } else if (this.kind == Kind.Square) {            g.fillRect(b.x, b.y, b.width, b.height);            g.drawString(n, b.x,b.y);        }        if (selected) {            g.setColor(Color.darkGray);            g.drawRect(b.x, b.y, b.width, b.height);        }    }    /**     * Return this node's location.     */    public Point getLocation() {        return p;    }    /**     * Return true if this node contains p.     */    public boolean contains(Point p) {        return b.contains(p);    }    /**     * Return true if this node is selected.     */    public boolean isSelected() {        return selected;    }    /**     * Mark this node as selected.     */    public void setSelected(boolean selected) {        this.selected = selected;    }    /**     * Collected all the selected nodes in list.     */    public static void getSelected(List<Node> list, List<Node> selected) {        selected.clear();        for (Node n : list) {            if (n.isSelected()) {                selected.add(n);            }        }    }    /**     * Select no nodes.     */    public static void selectNone(List<Node> list) {        for (Node n : list) {            n.setSelected(false);        }    }    /**     * Select a single node; return true if not already selected.     */    public static boolean selectOne(List<Node> list, Point p) {        for (Node n : list) {            if (n.contains(p)) {                if (!n.isSelected()) {                    Node.selectNone(list);                    n.setSelected(true);                }                return true;            }        }        return false;    }    /**     * Select each node in r.     */    public static void selectRect(List<Node> list, Rectangle r) {        for (Node n : list) {            n.setSelected(r.contains(n.p));        }    }    /**     * Toggle selected state of each node containing p.     */    public static void selectToggle(List<Node> list, Point p) {        for (Node n : list) {            if (n.contains(p)) {                n.setSelected(!n.isSelected());            }        }    }    /**     * Update each node's position by d (delta).     */    public static void updatePosition(List<Node> list, Point d) {        for (Node n : list) {            if (n.isSelected()) {                n.p.x += d.x;                n.p.y += d.y;                n.setBoundary(n.b);            }        }    }    /**     * Update each node's radius r.     */    public static void updateRadius(List<Node> list, int r) {        for (Node n : list) {            if (n.isSelected()) {                n.r = r;                n.setBoundary(n.b);            }        }    }    /**     * Update each node's color.     */    public static void updateColor(List<Node> list, Color color) {        for (Node n : list) {            if (n.isSelected()) {                n.color = color;            }        }    }    /**     * Update each node's kind.     */    public static void updateKind(List<Node> list, Kind kind) {        for (Node n : list) {            if (n.isSelected()) {                n.kind = kind;            }        }    }}private static class ColorIcon implements Icon {    private static final int WIDE = 20;    private static final int HIGH = 20;    private Color color;    public ColorIcon(Color color) {        this.color = color;    }    public Color getColor() {        return color;    }    public void setColor(Color color) {        this.color = color;    }    public void paintIcon(Component c, Graphics g, int x, int y) {        g.setColor(color);        g.fillRect(x, y, WIDE, HIGH);    }    public int getIconWidth() {        return WIDE;    }    public int getIconHeight() {        return HIGH;    }}}
20002605	[]	You have no such data structure in the Java Collections Framework.I suggest you the guava library you may find something useful there.Note that what you have here is essentially a undirected graph so keep an eye out for graph libraries (for example JGraphT), or write your own.
20081999	[u'/lib/jgrapht-all/jgrapht-all', u'/lib/ojdbc6', u'/resources', u'/lib/velocity-1', u'/lib/jazzy-core/jazzy-core', u'/lib/jython-2', u'/lib/velocity-1', u'/lib/velocity-1', u'/lib/lablib-checkboxtree-3', u':', u'modelsphere']	Create a file with the following contents into the root folder of the program, and execute this.Ex. $vim model.sh  # put content    $./model.shpath="./lib/jgrapht-all/jgrapht-all.jar\ ./lib/ojdbc6.jar ./modelsphere.jar ./plugins/bin/repository_functions.jar \ ./resources.zip ./lib/jakarta-regexp-1.5/jakarta-regexp-1.5.jar \ ./lib/velocity-1.6.1/velocity-1.6.1.jar \ ./lib/jazzy-core/jazzy-core.jar \ ./lib/jython-2.2.1/jython.jar \ ./lib/velocity-1.6.1/lib/commons-collections-3.2.1.jar \ ./lib/velocity-1.6.1/lib/commons-lang-2.4.jar \ ./lib/lablib-checkboxtree-3.0.2.jar"libs=".:./resources:./targets"for x in $pathdo  if [ ! -f $x ]   then     echo "File not found [$x]"     exit 1  else     libs="$libs:$x"  fidonejava -ms64m -mx512m -ss16m -classpath "$libs" org.modelsphere.sms.Application
20181843	[u'class);', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'hasNext', u'out']	Just traverse the graph using DepthFirstSearchIterator. Here is an example: import org.jgrapht.DirectedGraph;import org.jgrapht.graph.DefaultDirectedGraph;import org.jgrapht.graph.DefaultEdge;import org.jgrapht.traverse.DepthFirstIterator;import org.jgrapht.traverse.GraphIterator;public class GraphDemo {    public static void main(String[] args) {        DirectedGraph<Integer, DefaultEdge> graph =             new DefaultDirectedGraph <Integer, DefaultEdge>(DefaultEdge.class);        graph.addVertex(7);        graph.addVertex(4);        graph.addVertex(9);        graph.addVertex(3);        graph.addVertex(2);        graph.addVertex(5);        graph.addEdge(7, 4);        graph.addEdge(7, 9);        graph.addEdge(9, 3);        graph.addEdge(3, 2);        graph.addEdge(3, 5);        GraphIterator<Integer, DefaultEdge> iterator =                 new DepthFirstIterator<Integer, DefaultEdge>(graph);        while (iterator.hasNext()) {            System.out.println( iterator.next() );        }    }}For more control, you can attach TraversalListener to the iterator using addTraversalListener(). Here is an example of a basic listener. 
20202434	[]	The jgrapht library contains an edge type called DefaultWeightedEdge if you need border weights (for distance, etc.)  Otherwise, you might just use the DefaultEdge class.This is a more practical answer, ie these are actual classes within jgrapht that would suit your purposes. If you are looking for a more conceptual answer, I think that peter.petrov's answer regarding Border class is pretty much spot on. 
20242961	[u'99', u'lang', u'jgrapht', u'MyGraph', u'GraphApp', u'class);', u'class); ', u'addVertex', u'addVertex', u'addEdge', u'addEdge', u'setEdgeWeight', u'out', u'out', u'out', u'in);', u'out', u'nextInt', u'out', u'addVertex', u'out', u'next', u'next', u'addEdge', u'out', u'setEdgeWeight', u'out', u'nextInt', u'out', u'out', u'getSpanningTree', u'out', u'getSpanningTreeCost']	Why am I getting a NULL pointer error for this program, as far as I can see everything looks fine, I've just started using JGraphT and need a little help with it. Context:I need to be able to add flights to the graph, each flight is bi-directional and the flights should be weighted with their prices.Error:run:Please enter the number of flights: 2Please enter the flight destination for flight 1:EdinburgPlease enter the flight destination for flight 2:HeathrowEnter the edgesEdinburgHeathrowPlease enter a price for this edge:25.99Exception in thread "main" java.lang.NullPointerException    at org.jgrapht.graph.AbstractBaseGraph.setEdgeWeight(Unknown Source)    at graphapp.MyGraph.setEdgeWeight(MyGraph.java:25)    at graphapp.GraphApp.main(GraphApp.java:33)Java Result: 1BUILD SUCCESSFUL (total time: 14 seconds)MyGraph.java (Class):package graphapp;import org.jgrapht.*;import org.jgrapht.graph.*;import org.jgrapht.alg.KruskalMinimumSpanningTree;public class MyGraph {    private final SimpleDirectedWeightedGraph<String, DefaultWeightedEdge> g = new SimpleDirectedWeightedGraph<String, DefaultWeightedEdge>(DefaultWeightedEdge.class);    static final double DEFAULT_EDGE_WEIGHT=19;    //DefaultWeightedEdge > (DefaultWeightedEdge.class);     private DefaultWeightedEdge e1;    public void addVertex(String name) {        g.addVertex(name);        //graph.addVertex(name);    }    public void addEdge(String v1, String v2) {        g.addEdge(v1, v2);        e1 = g.addEdge(v1, v2);    }    public void setEdgeWeight(String EDGE_WEIGHT) {        g.setEdgeWeight(e1, Double.valueOf(EDGE_WEIGHT));              }    public SimpleDirectedWeightedGraph<String, DefaultWeightedEdge> getGraph() {        return g;    }    /*public SimpleWeightedGraph<String,DefaultWeightedEdge> getGraph() {        return graph;    }*/    public void getSpanningTree() {        KruskalMinimumSpanningTree k = new KruskalMinimumSpanningTree(g);        System.out.println(k.getEdgeSet().toString());        //KruskalMinimumSpanningTree k1=new KruskalMinimumSpanningTree(graph);        //System.out.println(k1.getEdgeSet().toString());       }    public void getSpanningTreeCost() {        KruskalMinimumSpanningTree k = new KruskalMinimumSpanningTree(g);        System.out.println(k.getSpanningTreeCost());    }}GraphApp (Main):package graphapp;import org.jgrapht.demo.*;import java.util.Scanner;import graphapp.*;public class GraphApp{    public static void main(String args[]) {        int x;        Scanner sc = new Scanner(System.in);        MyGraph my = new MyGraph();        System.out.println("Please enter the number of flights: ");        int no_of_ver = sc.nextInt();        for(int i=1;i <= no_of_ver;i++) {            System.out.println("Please enter the flight destination for flight "+i+ ":");            my.addVertex(sc.next());        }        do {            System.out.println("Enter the edges");            String e1 = sc.next();            String e2 = sc.next();            my.addEdge(e1, e2);            System.out.println("Please enter a price for this edge:");            my.setEdgeWeight(sc.next());            System.out.println("Continue... Yes:1 ********** No:0");            x=sc.nextInt();        } while(x==1);        System.out.println("Graph\n" + my.getGraph().toString());        System.out.println("\n\n**********Spanning Tree*********");        my.getSpanningTree();        System.out.println("\nSpanning Tree Cost");        my.getSpanningTreeCost();    }}
20246409	[u'jgrapht;', u'0;']	I want to include weights or costs of the edge on my graph using this jgrapht interface-class:package org.jgrapht;public interface WeightedGraph<V extends Object, E extends Object> extends Graph<V, E> {    public static final double DEFAULT_EDGE_WEIGHT = 1.0;    public void setEdgeWeight(E e, double d);}Can someone help me? Thanks.
20247041	[u'addVertex', u'setEdgeWeight', u'findPathBetween', u'class); ', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addEdge', u'setEdgeWeight', u'addEdge', u'setEdgeWeight', u'addEdge', u'setEdgeWeight', u'addEdge', u'setEdgeWeight', u'addEdge', u'setEdgeWeight', u'addEdge', u'setEdgeWeight', u'addEdge', u'setEdgeWeight', u'addEdge', u'setEdgeWeight', u'addEdge', u'setEdgeWeight', u'addEdge', u'setEdgeWeight', u'out', u'findPathBetween', u'out']	Yo have described Interface WeightedGraph<V,E> from here.You need to use SimpleDirectedWeightedGraph to set the weights of its edges.Look at this example, it creates Directed Weighted Graph by using  graph.addVertex(), graph.setEdgeWeight() methods and considersshortest path between some edges by using Dijkstra Algorithm implemented in DijkstraShortestPath.findPathBetween() method.    import org.jgrapht.*;    import org.jgrapht.alg.*;    import org.jgrapht.graph.*;    import java.util.List;    public class Graph {        public static void main(String args[]) {            SimpleDirectedWeightedGraph<String, DefaultWeightedEdge>  graph =             new SimpleDirectedWeightedGraph<String, DefaultWeightedEdge>            (DefaultWeightedEdge.class);             graph.addVertex("vertex1");            graph.addVertex("vertex2");            graph.addVertex("vertex3");            graph.addVertex("vertex4");            graph.addVertex("vertex5");            DefaultWeightedEdge e1 = graph.addEdge("vertex1", "vertex2");             graph.setEdgeWeight(e1, 5);             DefaultWeightedEdge e2 = graph.addEdge("vertex2", "vertex3");             graph.setEdgeWeight(e2, 3);             DefaultWeightedEdge e3 = graph.addEdge("vertex4", "vertex5");             graph.setEdgeWeight(e3, 6);             DefaultWeightedEdge e4 = graph.addEdge("vertex2", "vertex4");             graph.setEdgeWeight(e4, 2);             DefaultWeightedEdge e5 = graph.addEdge("vertex5", "vertex4");             graph.setEdgeWeight(e5, 4);             DefaultWeightedEdge e6 = graph.addEdge("vertex2", "vertex5");             graph.setEdgeWeight(e6, 9);             DefaultWeightedEdge e7 = graph.addEdge("vertex4", "vertex1");             graph.setEdgeWeight(e7, 7);             DefaultWeightedEdge e8 = graph.addEdge("vertex3", "vertex2");             graph.setEdgeWeight(e8, 2);             DefaultWeightedEdge e9 = graph.addEdge("vertex1", "vertex3");             graph.setEdgeWeight(e9, 10);             DefaultWeightedEdge e10 = graph.addEdge("vertex3", "vertex5");             graph.setEdgeWeight(e10, 1);             System.out.println("Shortest path from vertex1 to vertex5:");            List shortest_path =   DijkstraShortestPath.findPathBetween(graph, "vertex1", "vertex5");            System.out.println(shortest_path);        }    }
20250632	[u'class);', u'class); ', u'addVertex', u'addVertex', u'addEdge', u'addEdge', u'setEdgeWeight', u'setEdgeWeight', u'out', u'out', u'getContentPane', u'setTitle', u'setDefaultCloseOperation', u'out', u'in);', u'out', u'out', u'nextInt', u'out', u'out', u'addVertex', u'out', u'out', u'next', u'out', u'next', u'addEdge', u'out', u'setEdgeWeight', u'out', u'equals', u'out', u'out', u'out', u'getSpanningTreeCost', u'out', u'out', u'next', u'out', u'next', u'out', u'getShortestPath', u'length;', u'out', u'out']	I need to be able to display this program along with a JApplet that shows the connnecting nodes in an applet window, I was just wondering how to do this in my current application.MyGraph (Class):package graphapp;import org.jgrapht.GraphPath;import org.jgrapht.alg.DijkstraShortestPath;import org.jgrapht.graph.*;import org.jgrapht.alg.KruskalMinimumSpanningTree;import java.awt.*; import java.awt.geom.*; import javax.swing.JApplet;import javax.swing.JFrame;import java.applet.Applet;import org.jgrapht.ListenableGraph;import org.jgrapht.ext.JGraphModelAdapter;public class MyGraph extends JApplet {    private final SimpleDirectedWeightedGraph<String, DefaultWeightedEdge> g = new SimpleDirectedWeightedGraph<String, DefaultWeightedEdge>(DefaultWeightedEdge.class);    static final double DEFAULT_EDGE_WEIGHT=19;    //DefaultWeightedEdge > (DefaultWeightedEdge.class);     private DefaultWeightedEdge e1, e2;    public void addVertex(String name) {        g.addVertex(name);        //graph.addVertex(name);    }    public void addEdge(String v1, String v2) {        e1 = g.addEdge(v1, v2);        e2 = g.addEdge(v2, v1);    }    public void setEdgeWeight(String EDGE_WEIGHT) {        g.setEdgeWeight(e1, Double.valueOf(EDGE_WEIGHT));        g.setEdgeWeight(e2, Double.valueOf(EDGE_WEIGHT));    }    public SimpleDirectedWeightedGraph<String, DefaultWeightedEdge> getGraph() {        return g;    }    /*public SimpleWeightedGraph<String,DefaultWeightedEdge> getGraph() {        return graph;    }*/    public void getSpanningTree() {        KruskalMinimumSpanningTree k = new KruskalMinimumSpanningTree(g);        System.out.println(k.getEdgeSet().toString());        //KruskalMinimumSpanningTree k1=new KruskalMinimumSpanningTree(graph);        //System.out.println(k1.getEdgeSet().toString());       }    public DijkstraShortestPath getShortestPath (String start, String end) {        DijkstraShortestPath path = new DijkstraShortestPath(g, start, end);        return path;    }    public void initFrame() {        //JFrame frame = new JFrame();        //frame.getContentPane().addapplet();        //frame.setTitle("Node Paths");        //frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); frame.pack(); frame.setVisible(true);    }    /*public void getSpanningTreeCost() {        KruskalMinimumSpanningTree k = new KruskalMinimumSpanningTree(g);        System.out.println(k.getSpanningTreeCost());    }*/}GraphApp (Main):package graphapp;import java.util.Scanner;public class GraphApp{    public static void main(String args[]) {        //Initialise required variables        int x;        Scanner sc = new Scanner(System.in);        MyGraph my = new MyGraph();        //Print welcome message        System.out.println("|------------------------------------------------------------------------------------------------------------|\n| Welcome to Conner McCabe's flight path calculator.                                                         |\n| This project is intended to calculate the cheapest path between two nodes through paths between the nodes. |\n|------------------------------------------------------------------------------------------------------------|\n");        //Set the number of nodes to create        System.out.println("Please enter the number of flight nodes: ");        int no_of_ver = sc.nextInt();        //Get all of the node names        System.out.println("\nNow create the nodes:-");        for(int i=1;i <= no_of_ver;i++) {            System.out.println("Please enter a node for a flight to start at or end at for node "+i+ ":");            my.addVertex(sc.next());        }        //Get all nodes that are connected to each other        do {            System.out.println("\nWe will now create a flight route:- ");            System.out.println("Please enter the starting point:");            String e1 = sc.next();            System.out.println("Please enter the destination:");            String e2 = sc.next();            my.addEdge(e1, e2);            System.out.println("Please enter a price for this flight route:");            my.setEdgeWeight(sc.next().toString());            System.out.println("Would you like to add another flight path? y/n = yes/no");        } while("y".equals(sc.next()));        //Print a list of all connected routes        //System.out.println("Graph\n" + my.getGraph().toString());        System.out.println("\n\n********** List of Bi-Directional Routes *********\n" + my.getGraph().toString());        //System.out.print("\nTotal cost to go all routes one way: ");        //my.getSpanningTreeCost();        //Get route start point and end point        System.out.println("\n\n********** Now we will calculate the cheapest route between two node points *********");        System.out.println("\nPlease enter the starting point:");        String start = sc.next();        System.out.println("Please enter the destination:");        String end = sc.next();        //Get path results and display them        System.out.println("\n\n********** This is the cheapest route between "+start+" & "+end+" *********");        Object[] list = my.getShortestPath(start, end).getPathEdgeList().toArray();        Integer listLength = list.length;        for(Integer i = 0; i < listLength; i++)            System.out.println("Path " + (i+1) + ": " + list[i].toString());        System.out.println("Total price of this route: " + (my.getShortestPath(start, end)).getPathLength());    }}
20277866	[u'graph = g;', u'getVertex', u'getVertices', u'hasNext', u'next', u'getProperty', u'add', u'getEdgesOfClass', u'hasNext', u'next', u'add', u'getEdges', u'hasNext', u'getEdges', u'hasNext', u'next', u'add', u'getEdges', u'hasNext', u'getEdges', u'hasNext', u'next', u'add', u'getEdges', u'hasNext', u'next', u'getVertex', u'add', u'getEdges', u'hasNext', u'next', u'getVertex', u'addEdge', u'getEdges', u'hasNext', u'next', u'getVertex', u'addEdge', u'getEdges', u'hasNext', u'next', u'equals', u'addEdge', u'getVertex', u'addVertex', u'getEdges', u'hasNext', u'next', u'getVertex', u'getEdge', u'getEdge', u'getEdges', u'hasNext', u'next', u'add', u'getEdges', u'hasNext', u'next', u'getVertex', u'add', u'removeEdge', u'"); //To change body of generated methods, choose Tools | Templates', u'"); //To change body of generated methods, choose Tools | Templates', u'getEdge', u'removeEdge', u'containsEdge', u'removeEdge', u'containsVertex', u'removeVertex', u'getVertices', u'hasNext', u'next', u'add', u'getVertex', u'getVertex', u'getProperty', u'valueOf', u'0;']	I use OrientDB to store graph data but it has few graph algorith and can not process weighted graph so I want to use JGraphT. Is there any tool to automatically convert between 2 types of graph. After process in JGraphT graph, I want to save back to database, but I don't want to re-save the whole graph, just changed part of the graph.Does anyone have other solutions for my problem?--Edit--I solved it myself, I write a class assump that OrientDB has DirectedGraph interface, here is it for anyone need later. Hope that it's correct.package Utilities;import com.tinkerpop.blueprints.Direction;import com.tinkerpop.blueprints.Edge;import com.tinkerpop.blueprints.Vertex;import com.tinkerpop.blueprints.impls.orient.OrientGraph;import java.util.Collection;import java.util.Iterator;import java.util.Set;import org.jboss.weld.util.collections.ArraySet;import org.jgrapht.DirectedGraph;import org.jgrapht.EdgeFactory;/** * * @author bachn_000 */public class OrientDBDirectedGraph implements DirectedGraph<Vertex, Edge> {private final OrientGraph graph;public OrientDBDirectedGraph(OrientGraph g) {    this.graph = g;}public Vertex getVertex(Object id) {    return graph.getVertex(id);}public Set<Vertex> getVertices(String name) {    Set<Vertex> temp = new ArraySet<>();    Iterator<Vertex> iterator = graph.getVertices().iterator();    while (iterator.hasNext()) {        Vertex vertex = iterator.next();        if(vertex.getProperty("name").equals(name)) {            temp.add(vertex);        }    }    return temp;}public Set<Edge> getEdges(String className) {    Iterator<Edge> iterator = graph.getEdgesOfClass(className).iterator();    Set<Edge> temp = new ArraySet<>();    while (iterator.hasNext()) {        Edge edge = iterator.next();        temp.add(edge);    }    return temp;}@Overridepublic int inDegreeOf(Vertex vertex) {    int count = 0;    Iterator<Edge> edges = vertex.getEdges(Direction.IN).iterator();    while (edges.hasNext()) {        count++;    }    return count;}@Overridepublic Set<Edge> incomingEdgesOf(Vertex vertex) {    Set<Edge> temp = new ArraySet<>();    Iterator<Edge> edges = vertex.getEdges(Direction.IN).iterator();    while (edges.hasNext()) {        Edge edge = edges.next();        temp.add(edge);    }    return temp;}@Overridepublic int outDegreeOf(Vertex vertex) {    int count = 0;    Iterator<Edge> edges = vertex.getEdges(Direction.OUT).iterator();    while (edges.hasNext()) {        count++;    }    return count;}@Overridepublic Set<Edge> outgoingEdgesOf(Vertex vertex) {    Set<Edge> temp = new ArraySet<>();    Iterator<Edge> edges = vertex.getEdges(Direction.OUT).iterator();    while (edges.hasNext()) {        Edge edge = edges.next();        temp.add(edge);    }    return temp;}@Overridepublic Set<Edge> getAllEdges(Vertex sourceVertex, Vertex targetVertex) {    Set<Edge> temp = new ArraySet<>();    Iterator<Edge> edges = sourceVertex.getEdges(Direction.OUT).iterator();    while (edges.hasNext()) {        Edge edge = edges.next();        if (edge.getVertex(Direction.IN).equals(targetVertex)) {            temp.add(edge);        }    }    return temp;}@Overridepublic Edge getEdge(Vertex sourceVertex, Vertex targetVertex) {    Iterator<Edge> edges = sourceVertex.getEdges(Direction.OUT).iterator();    while (edges.hasNext()) {        Edge edge = edges.next();        if (edge.getVertex(Direction.IN).equals(targetVertex)) {            return edge;        }    }    return null;}@Overridepublic EdgeFactory<Vertex, Edge> getEdgeFactory() {    return new EdgeFactory<Vertex, Edge>() {        @Override        public Edge createEdge(Vertex sourceVertex, Vertex targetVertex) {            return graph.addEdge(null, sourceVertex, targetVertex, "default_edge");        }    };}@Overridepublic Edge addEdge(Vertex sourceVertex, Vertex targetVertex) {    Edge temp = null;    Iterator<Edge> edges = sourceVertex.getEdges(Direction.OUT).iterator();    while (edges.hasNext()) {        Edge edge = edges.next();        if (edge.getVertex(Direction.IN).equals(targetVertex)) {            temp = edge;        }    }    if (temp == null) {        return graph.addEdge(null, sourceVertex, targetVertex, "default_edge");    } else {        return temp;    }}@Overridepublic boolean addEdge(Vertex sourceVertex, Vertex targetVertex, Edge e) {    Edge temp = null;    Iterator<Edge> edges = sourceVertex.getEdges(Direction.OUT).iterator();    while (edges.hasNext()) {        Edge edge = edges.next();        if (edge.equals(e)) {            temp = edge;            break;        }    }    if (temp == null) {        graph.addEdge(null, sourceVertex, targetVertex, "default_edge");        return true;    } else {        return false;    }}@Overridepublic boolean addVertex(Vertex v) {    Vertex vertex = graph.getVertex(v.getId());    if (vertex == null) {        graph.addVertex(v.getId());        return true;    } else {        return false;    }}@Overridepublic boolean containsEdge(Vertex sourceVertex, Vertex targetVertex) {    Iterator<Edge> edges = sourceVertex.getEdges(Direction.OUT).iterator();    while (edges.hasNext()) {        Edge edge = edges.next();        if (edge.getVertex(Direction.IN).equals(targetVertex)) {            return true;        }    }    return false;}@Overridepublic boolean containsEdge(Edge e) {    return (graph.getEdge(e.getId()) != null);}@Overridepublic boolean containsVertex(Vertex v) {    return (graph.getEdge(v.getId()) != null);}@Overridepublic Set<Edge> edgeSet() {    Set<Edge> temp = new ArraySet<>();    Iterator<Edge> edges = graph.getEdges().iterator();    while (edges.hasNext()) {        Edge edge = edges.next();        temp.add(edge);    }    return temp;}@Overridepublic Set<Edge> edgesOf(Vertex vertex) {    Set<Edge> temp = new ArraySet<>();    Iterator<Edge> edges = graph.getEdges().iterator();    while (edges.hasNext()) {        Edge edge = edges.next();        if (edge.getVertex(Direction.OUT).equals(vertex) || edge.getVertex(Direction.IN).equals(vertex)) {            temp.add(edge);        }    }    return temp;}@Overridepublic boolean removeAllEdges(Collection<? extends Edge> edges) {    for (Edge edge : edges) {        graph.removeEdge(edge);    }    return true;}@Overridepublic Set<Edge> removeAllEdges(Vertex sourceVertex, Vertex targetVertex) {    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.}@Overridepublic boolean removeAllVertices(Collection<? extends Vertex> vertices) {    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.}@Overridepublic Edge removeEdge(Vertex sourceVertex, Vertex targetVertex) {    Edge temp = this.getEdge(sourceVertex, targetVertex);    if (temp != null) {        graph.removeEdge(temp);    }    return temp;}@Overridepublic boolean removeEdge(Edge e) {    if (this.containsEdge(e)) {        graph.removeEdge(e);        return true;    } else {        return false;    }}@Overridepublic boolean removeVertex(Vertex v) {    if (this.containsVertex(v)) {        graph.removeVertex(v);        return true;    } else {        return false;    }}@Overridepublic Set<Vertex> vertexSet() {    Set<Vertex> temp = new ArraySet<>();    Iterator<Vertex> vertices = graph.getVertices().iterator();    while (vertices.hasNext()) {        Vertex vertex = vertices.next();        temp.add(vertex);    }    return temp;}@Overridepublic Vertex getEdgeSource(Edge e) {    return e.getVertex(Direction.OUT);}@Overridepublic Vertex getEdgeTarget(Edge e) {    return e.getVertex(Direction.IN);}@Overridepublic double getEdgeWeight(Edge e) {    Object property = e.getProperty("weight");    if (property != null) {        return Double.valueOf(property.toString());    } else {        return 1.0;    }}}
20560986	[u'slf4j', u'slf4j', u'', u'', u'rapportive', u'plugins', u'', u'', u'141s', u' You must specify a valid lifecycle phase or a goal in the format <plugin-prefix>:<goal> or <plugin-group-id>:<plugin-artifact-id>[:<plugin-version>]:<goal>', u'', u'', u'apache', u'apache', u'objenesis:objenesis:jar:1', u'3', u'activation:activation:jar:1', u'2', u'mortbay', u'8', u'googlecode', u'3', u'4', u'slf4j:slf4j-api:jar:1', u'netflix', u'google', u'2', u'2', u' Original error: Could not transfer artifact log4j:log4j:pom:', u'2', u'eclipse', u'9', u'mail:mail:jar:1', u'drools:drools-core:jar:5', u'esotericsoftware', u'3', u'thoughtworks', u'ow2', u'7', u'6', u'8', u'yaml:snakeyaml:jar:1', u'mortbay', u'antlr:stringtemplate:jar:3', u'clojure:tools', u'drools:knowledge-api:jar:5', u'clojure:tools', u'mvel:mvel2:jar:2', u'3', u'drools:knowledge-internal-api:jar:5', u'antlr:antlr-runtime:jar:3', u'antlr:antlr:jar:3', u'clojure:core', u'apache', u'0-801', u'2', u'8', u'5', u'4', u'netflix', u'rabbitmq:amqp-client:jar:3', u'clojure:math', u'esotericsoftware', u'apache', u'servlet:servlet-api:jar:2', u'servlet:servlet-api:pom:2', u' Original error: Could not transfer artifact ', u'servlet:servlet-api:pom:2', u'1', u'mortbay', u'cli:jar:0', u'4', u'drools:drools-compiler:jar:5', u'1', u'clojure:clojure:jar:1', u'1', u'googlecode']	I am trying to run a Storm API project in my windows XP desktop,but the project is showing build failure with following message in the console..SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".SLF4J: Defaulting to no-operation (NOP) logger implementationSLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.[WARNING] [WARNING] Some problems were encountered while building the effective settings[WARNING] expected START_TAG or END_TAG not TEXT (position: TEXT seen ...r\r\n   | the parameter in question.\r\n   |\r\n   | Default: true\r\n  <i... @61:5)  @ C:\Documents and Settings\377445\.m2\settings.xml, line 61, column 5[WARNING] [INFO] Scanning for projects...[WARNING] [WARNING] Some problems were encountered while building the effective model for com.rapportive.storm:storm-amqp-spout:jar:0.2.1-SNAPSHOT[WARNING] 'build.plugins.plugin.version' for org.apache.maven.plugins:maven-compiler-plugin is missing. @ line 134, column 21[WARNING] [WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.[WARNING] [WARNING] For this reason, future Maven versions might no longer support building such malformed projects.[WARNING] [INFO] ------------------------------------------------------------------------[INFO] BUILD FAILURE[INFO] ------------------------------------------------------------------------[INFO] Total time: 0.141s[INFO] Finished at: Fri Dec 13 12:33:12 GMT+05:30 2013[INFO] Final Memory: 3M/15M[INFO] ------------------------------------------------------------------------[ERROR] No goals have been specified for this build. You must specify a valid lifecycle phase or a goal in the format <plugin-prefix>:<goal> or <plugin-group-id>:<plugin-artifact-id>[:<plugin-version>]:<goal>. Available lifecycle phases are: validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy, pre-site, site, post-site, site-deploy, pre-clean, clean, post-clean. -> [Help 1][ERROR] [ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.[ERROR] Re-run Maven using the -X switch to enable full debug logging.[ERROR] [ERROR] For more information about the errors and possible solutions, please read the following articles:[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/NoGoalSpecifiedExceptionThe project in eclipse (Indigo) is showing following errors in pom.xml file..Multiple annotations found at this line:    - Missing artifact org.apache.httpcomponents:httpclient:jar:4.1.1    - Missing artifact org.objenesis:objenesis:jar:1.2    - Missing artifact ring:ring-jetty-adapter:jar:0.3.11    - Missing artifact javax.activation:activation:jar:1.1    - Missing artifact commons-fileupload:commons-fileupload:jar:1.2.1    - Missing artifact org.mortbay.jetty:servlet-api:jar:2.5-20081211    - Missing artifact storm:storm:jar:0.8.1    - Missing artifact com.googlecode.json-simple:json-simple:jar:1.1    - Missing artifact hiccup:hiccup:jar:0.3.6    - Missing artifact commons-codec:commons-codec:jar:1.4    - Missing artifact org.slf4j:slf4j-api:jar:1.6.4    - Missing artifact com.netflix.curator:curator-client:jar:1.0.1    - Missing artifact com.google.guava:guava:jar:13.0    - ArtifactDescriptorException: Failed to read artifact descriptor for log4j:log4j:jar:1.2.16: ArtifactResolutionException: Failure to      transfer log4j:log4j:pom:1.2.16 from http://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be      reattempted until the update interval of Apache has elapsed or updates are forced. Original error: Could not transfer artifact log4j:log4j:pom:     1.2.16 from/to Apache (http://repo.maven.apache.org/maven2): NullPointerException    - Missing artifact org.eclipse.jdt.core.compiler:ecj:jar:3.5.1    - Missing artifact jline:jline:jar:0.9.94    - Missing artifact javax.mail:mail:jar:1.4    - Missing artifact org.drools:drools-core:jar:5.5.0.Final    - Missing artifact com.esotericsoftware.minlog:minlog:jar:1.2    - Missing artifact ring:ring-core:jar:0.3.10    - Missing artifact com.thoughtworks.xstream:xstream:jar:1.4.1    - Missing artifact org.ow2.asm:asm:jar:4.0    - Missing artifact antlr:antlr:jar:2.7.7    - Missing artifact compojure:compojure:jar:0.6.4    - Missing artifact junit:junit:jar:3.8.1    - Missing artifact org.yaml:snakeyaml:jar:1.9    - Missing artifact org.mortbay.jetty:jetty:jar:6.1.26    - Missing artifact org.antlr:stringtemplate:jar:3.2.1    - Missing artifact org.clojure:tools.macro:jar:0.1.0    - Missing artifact org.drools:knowledge-api:jar:5.5.0.Final    - Missing artifact org.clojure:tools.logging:jar:0.2.3    - Missing artifact org.mvel:mvel2:jar:2.1.3.Final    - Missing artifact ring:ring-servlet:jar:0.3.11    - Missing artifact org.drools:knowledge-internal-api:jar:5.5.0.Final    - Missing artifact org.antlr:antlr-runtime:jar:3.3    - Missing artifact org.antlr:antlr:jar:3.3    - Missing artifact org.clojure:core.incubator:jar:0.1.0    - Missing artifact org.apache.httpcomponents:httpcore:jar:4.1    - Missing artifact postgresql:postgresql:jar:9.0-801.jdbc4    - Missing artifact log4j:log4j:jar:1.2.15    - Missing artifact storm:jgrapht:jar:0.8.3    - Missing artifact storm:carbonite:jar:1.5.0    - Missing artifact commons-io:commons-io:jar:1.4    - Missing artifact com.netflix.curator:curator-framework:jar:1.0.1    - Missing artifact com.rabbitmq:amqp-client:jar:3.0.2    - Missing artifact org.clojure:math.numeric-tower:jar:0.0.1    - Missing artifact com.esotericsoftware.reflectasm:reflectasm:jar:shaded:1.07    - Missing artifact org.apache.zookeeper:zookeeper:jar:3.3.3    - ArtifactDescriptorException: Failed to read artifact descriptor for javax.servlet:servlet-api:jar:2.5: ArtifactResolutionException:      Failure to transfer javax.servlet:servlet-api:pom:2.5 from http://repo.maven.apache.org/maven2 was cached in the local repository, resolution      will not be reattempted until the update interval of Apache has elapsed or updates are forced. Original error: Could not transfer artifact      javax.servlet:servlet-api:pom:2.5 from/to Apache (http://repo.maven.apache.org/maven2): NullPointerException    - Missing artifact commons-logging:commons-logging:jar:1.1.1    - Missing artifact org.mortbay.jetty:jetty-util:jar:6.1.26    - Missing artifact storm:tools.cli:jar:0.2.2    - Missing artifact clout:clout:jar:0.4.1    - Missing artifact org.drools:drools-compiler:jar:5.5.0.Final    - Missing artifact xmlpull:xmlpull:jar:1.1.3.1    - Missing artifact org.clojure:clojure:jar:1.4.0    - Missing artifact backtype:jzmq:jar:2.1.0    - Missing artifact com.googlecode.disruptor:disruptor:jar:2.10.1I have installed Storm-0.8.1 but I am not sure whether it is properly installed in windows XP.Can anyone please help me to solve this problem?
21125610	[u'xml', u'xml']	Github is separate repository hosting supported by git, right? Then why are there pom.xml files in such projects like this one? What are they doing there?UPDATEI know pom.xml is from Maven. But Maven has it's own repository here. Why is this project on github while configured for maven?
21194211	[u'esotericsoftware']	I get the following error when trying to serialize a SimpleDirectedGraph:com.esotericsoftware.kryo.KryoException: java.lang.IllegalArgumentException: Unable to create serializer "com.esotericsoftware.kryo.serializers.FieldSerializer" for class: org.jgrapht.graph.SimpleDirectedGraphMy internet search regarding this type of error returns a lot of people recommending the user update to the ASM 4.0 library. I am using Kryo 2.2 All, which includes the ASM 4.0 library. I also tried including the ASM 4 library on its own just in case, but no luck.I have tried serializing simpler objects such as ArrayList. Those go fine. I am not clear why kryo is failing to serialize this graph class. Does anyone have an idea?Update:Since I am working with a graph, I have tried implementing the experimental "continuations" branch of kryo https://github.com/EsotericSoftware/kryo/issues/103Unfortunately, I still receive the same error.Update:I think the trick might be using a different kind of serializer. Unfortunately, I can't seem to find one that will work with a SimpleDirectedGraph. BeanSerializer only serializes the first object layer. Nested objects don't seem to get serialized. The other serializers just throw the same error as FieldSerializer. Is there a serializer that folks normally use with graphs?
21552910	[u'apache', u'0', u'mallet</groupId>', u'0', u'', u'cs', u'0</name>', u'eclipse', u'cs', u'8', u'0b4</version>', u'6', u'3', u'0', u'9', u'jdom</groupId>', u'1</version>', u'sourceforge', u'sourceforge', u'ontotext', u'ontotext', u'scalanlp', u'scalanlp']	When first running the example of mallet project, I got following error.My netbeans has Maven and also read the error instruction below. But I couldn't repair this problem. What should I do?Failed to execute goal org.codehaus.mojo:exec-maven-plugin:1.2.1:exec (default-cli) on project mallet: Command execution failed. Process exited with an error: 1 (Exit value: 1) -> [Help 1]To see the full stack trace of the errors, re-run Maven with the -e switch.  Re-run Maven using the -X switch to enable full debug logging.For more information about the errors and possible solutions, please read the following articles:  [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionExceptionPom file. <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">  <modelVersion>4.0.0</modelVersion>  <groupId>cc.mallet</groupId>  <artifactId>mallet</artifactId>  <version>2.0.7-SNAPSHOT</version>  <packaging>jar</packaging>  <name>MAchine Learning for LanguagE Toolkit (MALLET)</name>  <description>    MALLET is a Java-based package for statistical natural language processing,    document classification, clustering, topic modeling, information extraction,    and other machine learning applications to text.  </description>  <url>http://mallet.cs.umass.edu/</url>  <licenses>    <license>      <name>Common Public License Version 1.0</name>      <url>http://www.eclipse.org/legal/cpl-v10.html</url>      <distribution>repo</distribution>    </license>  </licenses>  <scm>    <url>http://hg-iesl.cs.umass.edu/hg/mallet</url>  </scm>  <build>    <sourceDirectory>src</sourceDirectory>    <testSourceDirectory>src</testSourceDirectory>  </build>  <dependencies>    <dependency>        <groupId>junit</groupId>        <artifactId>junit</artifactId>        <version>4.8.2</version>    </dependency>    <dependency>        <groupId>bsh</groupId>        <artifactId>bsh</artifactId>        <version>2.0b4</version>    </dependency>    <dependency>        <groupId>jgrapht</groupId>        <artifactId>jgrapht</artifactId>        <version>0.6.0</version>    </dependency>    <dependency>        <groupId>jwnl</groupId>        <artifactId>jwnl</artifactId>        <version>1.3.3</version>    </dependency>    <dependency>        <groupId>trove</groupId>        <artifactId>trove</artifactId>        <version>2.0.4</version>    </dependency>    <dependency>        <groupId>mtj</groupId>        <artifactId>mtj</artifactId>        <version>0.9.9</version>    </dependency>    <dependency>        <groupId>org.jdom</groupId>        <artifactId>jdom</artifactId>        <version>1.1</version>    </dependency>  </dependencies>  <repositories>    <!-- for JWNL -->    <repository>      <id>opennlp.sourceforge.net</id>      <url>http://opennlp.sourceforge.net/maven2</url>    </repository>    <!-- for Trove -->    <repository>      <id>maven.ontotext.com</id>      <url>http://maven.ontotext.com/archiva/repository/public</url>    </repository>    <!-- for MTJ -->    <repository>      <id>repo.scalanlp.org</id>      <url>http://repo.scalanlp.org/repo</url>    </repository>  </repositories></project>
21630860	[u'submitTopology', u'sleep', u'killTopology', u'shutdown', u'/storm jar /home/winoria/Desktop/Storm/storm-starter/target/storm-starter-0', u'', u'0', u'0', u'slf4j', u'options= -Dstorm', u'jar AND slf4j-log4j12', u'slf4j', u'lang', u'apache', u'apache', u'rapportive', u'winoria', u'lang', u'apache', u'']	i have configured my machine zookeeper,nimbus,supervisor are running properly and my topology working in LocalClusterLocalCluster cluster = new LocalCluster();cluster.submitTopology("SendPost", conf, builder.createTopology());Utils.sleep(10000000000l);cluster.killTopology("SendPost");cluster.shutdown();now i want try submit my topology bt it not working/usr/local/storm/bin$ ./storm jar /home/winoria/Desktop/Storm/storm-starter/target/storm-starter-0.0.1-SNAPSHOT-jar-with-dependencies.jar com.winoria.post.PostTopology Posti getting following error SLF4J: Class path contains multiple SLF4J bindings.SLF4J: Found binding in [jar:file:/usr/local/storm/lib/logback-classic-1.0.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]SLF4J: Found binding in [jar:file:/home/winoria/Desktop/Storm/storm-starter/target/storm-starter-0.0.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.Running: java -client -Dstorm.options= -Dstorm.home=/usr/local/storm -Djava.library.path=/usr/local/lib:/opt/local/lib:/usr/lib -Dstorm.conf.file= -cp /usr/local    /storm/storm-netty-0.9.0.1.jar:/usr/local/storm/storm-console-logging-0.9.0.1.jar:/usr/local/storm/storm-core-0.9.0.1.jar:/usr/local/storm/lib/httpcore-4.1.jar:/usr/local/storm/lib/carbonite-1.5.0.jar:/usr/local/storm/lib/mockito-all-1.9.5.jar:/usr/local/storm/lib/commons-io-1.4.jar:/usr/local/storm/lib/commons-fileupload-1.2.1.jar:/usr/local/storm/lib/jgrapht-0.8.3.jar:/usr/local/storm/lib/ring-jetty-adapter-0.3.11.jar:/usr/local/storm/lib/jzmq-2.1.0.jar:/usr/local/storm/lib/asm-4.0.jar:/usr/local/storm/lib/logback-core-1.0.6.jar:/usr/local/storm/lib/tools.nrepl-0.2.3.jar:/usr/local/storm/lib/compojure-1.1.3.jar:/usr/local/storm/lib/json-simple-1.1.jar:/usr/local/storm/lib/ring-devel-0.3.11.jar:/usr/local/storm/lib/commons-logging-1.1.1.jar:/usr/local/storm/lib/httpclient-4.1.1.jar:/usr/local/storm/lib/reflectasm-1.07-shaded.jar:/usr/local/storm/lib/commons-exec-1.1.jar:/usr/local/storm/lib/guava-13.0.jar:/usr/local/storm/lib/clout-1.0.1.jar:/usr/local/storm/lib/objenesis-1.2.jar:/usr/local/storm/lib/slf4j-api-1.6.5.jar:/usr/local/storm/lib/clojure-1.4.0.jar:/usr/local/storm/lib/jetty-6.1.26.jar:/usr/local/storm/lib/hiccup-0.3.6.jar:/usr/local/storm/lib/clj-stacktrace-0.2.2.jar:/usr/local/storm/lib/log4j-over-slf4j-1.6.6.jar:/usr/local/storm/lib/tools.logging-0.2.3.jar:/usr/local/storm/lib/ring-core-1.1.5.jar:/usr/local/storm/lib/zookeeper-3.3.3.jar:/usr/local/storm/lib/math.numeric-tower-0.0.1.jar:/usr/local/storm/lib/disruptor-2.10.1.jar:/usr/local/storm/lib/minlog-1.2.jar:/usr/local/storm/lib/core.incubator-0.1.0.jar:/usr/local/storm/lib/servlet-api-2.5-20081211.jar:/usr/local/storm/lib/netty-3.6.3.Final.jar:/usr/local/storm/lib/ring-servlet-0.3.11.jar:/usr/local/storm/lib/clj-time-0.4.1.jar:/usr/local/storm/lib/snakeyaml-1.11.jar:/usr/local/storm/lib/commons-codec-1.4.jar:/usr/local/storm/lib/tools.cli-0.2.2.jar:/usr/local/storm/lib/logback-classic-1.0.6.jar:/usr/local/storm/lib/servlet-api-2.5.jar:/usr/local/storm/lib/kryo-2.17.jar:/usr/local/storm/lib/joda-time-2.0.jar:/usr/local/storm/lib/curator-client-1.0.1.jar:/usr/local/storm/lib/libthrift7-0.7.0-2.jar:/usr/local/storm/lib/tools.macro-0.1.0.jar:/usr/local/storm/lib/jline-0.9.94.jar:/usr/local/storm/lib/clojure-complete-0.2.3.jar:/usr/local/storm/lib/curator-framework-1.0.1.jar:/usr/local/storm/lib/commons-lang-2.5.jar:/usr/local/storm/lib/junit-3.8.1.jar:/usr/local/storm/lib/jetty-util-6.1.26.jar:/home/winoria/Desktop/Storm/storm-starter/target/storm-starter-0.0.1-SNAPSHOT-jar-with-dependencies.jar:/usr/local/storm/conf:/usr/local/storm/bin -Dstorm.jar=/home/winoria/Desktop/Storm/storm-starter/target/storm-starter-0.0.1-SNAPSHOT-jar-with-dependencies.jar com.winoria.post.PostTopology PostSLF4J: Detected both log4j-over-slf4j.jar AND slf4j-log4j12.jar on the class path, preempting StackOverflowError. SLF4J: See also http://www.slf4j.org/codes.html#log4jDelegationLoop for more details.Exception in thread "main" java.lang.ExceptionInInitializerErrorat org.apache.log4j.Logger.getLogger(Logger.java:39)at org.apache.log4j.Logger.getLogger(Logger.java:43)at com.rapportive.storm.spout.AMQPSpout.<clinit>(AMQPSpout.java:67)at com.winoria.post.PostTopology.main(PostTopology.java:33)Caused by: java.lang.IllegalStateException: Detected both log4j-over-slf4j.jar AND slf4j-    log4j12.jar on the class path, preempting StackOverflowError. See also http://www.slf4j.org/codes.html#log4jDelegationLoop for more details.at org.apache.log4j.Log4jLoggerFactory.<clinit>(Log4jLoggerFactory.java:49)... 4 moreplz help me ...........thanks in advance 
21729455	[]	How can I install the JGraphT distribution offered in this link:http://sourceforge.net/projects/jgrapht/files/I do not understand the tree structure of files and its relation with the structure of a project in Eclipse. I would like to run the java code listed in:http://jgrapht.org/visualizations.htmlbut I am not able to import the proyect to Eclipse. For example, that .java file is underjgrapht-0.9.0\source\jgrapht-demo\src\main\java\org\jgrapht\demo
21754560	[u'', u'', u'', u'', u'', u'', u'', u'', u'']	Id like to define elegant interfaces for a binary relation and for a transitive relation. I consider a binary relation as a set of pairs, a subset of some set X  Y. In fact I intend to work mainly with transitive relations, but I occasionally need general binary relations. This is mainly for my own usage but I may end-up publishing this as a FLOSS library for other users. I would like my definitions to make sense on a general level as I do not have yet precise requirements about usage of these classes: I need them for experimental work related to scientific research, I have some ideas right now but it is unclear yet what kind of experiments I will need as more ideas come while doing the research.General ideaThe core of what I (think I) need is as follows./** * @param <F> *            the type used for the from elements. * @param <T> *            the type used for the to elements. *  */public interface BinaryRelationTentative<F, T> {    /**     * @return a view of the domain of this relation: all the elements x such that for some y, (x, y) is in the     *         relation.     */    public Set<F> getFromSet();    /**     * @return a view of the range of this relation: all the elements y such that for some x, (x, y) is in the relation.     */    public Set<T> getToSet();    /**     * @return the number of pairs that this relation contains.     */    public int size();    /**     * @return <code>true</code> iff the relation has empty from and to sets.     */    public boolean isEmpty();    /**     * A binary relation equals an other one iff they have equal from and to sets and for each (x, y) contained in one,     * (x, y) is contained in the other one.     */    @Override    public boolean equals(Object obj);    /**     * @return whether the given <code>from</code> element is in relation with the <code>to</code> element.     */    public boolean contains(F from, T to);    /**     * Optional operation.     */    public boolean add(F from, T to);}(This is only the core features, so that you see what I mean  nicer features for traversal and so on would be welcome, see below.) Then I would define a TransitiveRelation<E> that extends BinaryRelation<E, E>, that does not implement add but rather provides addTransitive(F from, T to).Re-using classical collectionsNow of course, I want to re-use classical collection interfaces as much as possible. It seems Guavas SetMultimap (javadoc, user guide) has the core features I need and more. The user guide even mentions the use case of an unlabeled directed graph. One problem I see with using directly SetMultimap is that the terminology is not exactly right: speaking of keys and values in case of a binary relation is strange. Moreover, it misses something. There is an asymetry that makes sense in a SetMultimap (designed to go from key to values), that makes less sense in a binary relation. The SetMultimap has an interface (and implementations) that allows one to, given a from element, iterate efficiently (i.e. without traversing the whole relation) through the to elements in relation to it. Similarly, I would like to be able to, having a to element, iterate over the corresponding from elements efficiently. So I need something that could be called a BiSetMultimap (corresponding to both a Map<K, Set<V>> and a Map<V, Set<K>>). I have not been able to find such thing in the Java world.I am currently, thus, thinking about defining BinaryRelation<F, T> as a facade to SetMultimap<F, T>. I can then create better-named methods in the interface (conceptually equivalent to the methods in SetMultimap), and I can add a method getInverselyRelated(T to): Set<F> that gives the from elements. I could provide implementations based on two SetMultimaps kept in sync, one representing the relation and one representing its inverse.Theres numerous alternative approaches to this problem. I could for example define BinaryRelation as extending SetMultimap. Or I could avoid hiding completely SetMultimap and provide access to it through BinaryRelation#asSetMultimap(). That way I get all their nice method interfaces. Or I could give up entirely the idea of a specific interface and use a SetMultimap instead of a BinaryRelation, considering then the reverse-traversal operation as an optimisation feature available in specific classes but not on the interface level. Or I could perhaps use something else than SetMultimap as a basis for the design.Therefore, my question (finally!): what do you think about my approach? Can you think about other approaches? Some problems I overlooked? An existing solution I could use?Possible linksI thought about using some Graph library (JUNG, JGraphT, Blueprint), but I do not think they fit my needs. All these have an Edge class (or an Edge type parameter) which adds complexity and none provide interfaces and implementations as nice as SetMultimap, in my humble opinion. Grph does not provide objects for vertices, as the user manual says. I may have missed something though so tell me if you disagree.(Edit.) As mentioned by Xaerxess, this guava issue suggests to add what I call here a BiSetMultimap to Guava.
22242637	[u'decode', u'applet', u'class );', u'add', u'jsonconversion', u'getVertexList', u'iterator', u'hasNext', u'next', u'getName', u'getEmpId', u'addVertex', u'getPos', u'out', u'random', u'out', u'jsonconversion', u'getEdgeList', u'iterator', u'hasNext', u'next', u'get_id', u'get_inV', u'get_outV', u'out', u'getNameId', u'getNameId', u'getNameId', u'get_label', u'addEdge', u'addEdge', u'util', u'util', u'getDefaultToolkit', u'createScreenCapture', u'write', u'err', u'setPreferredSize', u'decode', u'setBackground', u'getVertexCell', u'getAttributes', u'getBounds', u'setBounds', u'put', u'edit']	I am new to programming. I am struck with an issue. I am constructing a listenable graph in java applet using jgraph. Now i would like to save the applet as an image directly without getting the applet output on screen. I have tried with robot.createScreenCapture(). It is of no use since it just serves as a screenshot . I have also tried  gConfig.createCompatibleImage() and it generates a blank image file for me. Can anyone please tell me the possible way to do that?package Demo1;import java.awt.Color;import java.awt.Dimension;import java.util.HashMap;import java.util.Map;import org.jgraph.graph.AttributeMap.*;import javax.swing.JApplet;import java.util.*;import org.jgraph.JGraph;import org.jgraph.graph.DefaultGraphCell;import org.jgraph.graph.GraphConstants;import java.io.*;import org.jgrapht.ListenableGraph;import org.jgrapht.ext.JGraphModelAdapter;import org.jgrapht.graph.ListenableDirectedGraph;import org.jgrapht.graph.DefaultEdge;import Demo1.RelationshipEdge;import com.mxgraph.view.*;import javax.imageio.*;import java.awt.image.*;public class JGraphAdapterDemo extends JApplet  {private static final Color     DEFAULT_BG_COLOR = Color.decode( "#FAFBFF" );private static final Dimension DEFAULT_SIZE = new Dimension( 900, 900 );List<Vertices> lv=new ArrayList<Vertices>();List<Edges> le=new ArrayList<Edges>();int[] pos=new int[2];//Vertices ver2=null;Edges edg1=null;ReadFile rf=new ReadFile();mxGraph graph = new mxGraph();// private JGraphModelAdapter m_jgAdapter;/** * @see java.applet.Applet#init(). */public void init (  ) {    // create a JGraphT graph    ListenableGraph g = new ListenableDirectedGraph( DefaultEdge.class );    // create a visualization using JGraph, via an adapter    m_jgAdapter = new JGraphModelAdapter( g );    JGraph jgraph = new JGraph( m_jgAdapter );    adjustDisplaySettings( jgraph );    getContentPane(  ).add( jgraph );    resize( DEFAULT_SIZE );    // add some sample data (graph manipulated via JGraphT)    demo d=new demo();    d.jsonconversion();    lv=d.getVertexList();    Iterator<Vertices> itr1 = lv.iterator();    while(itr1.hasNext())    {           Vertices ver1=itr1.next();        String n=ver1.getName();        int no=ver1.getEmpId();        g.addVertex(n);        try{        pos=rf.getPos(no);        //System.out.println(no+" "+pos[0]+" "+pos[1]);        positionVertexAt( n,pos[0],pos[1] );        //double r=Math.random();        }        catch(Exception e)        {        System.out.println(e.getMessage());         }    }    demo_edges de=new demo_edges();    de.jsonconversion();    le=de.getEdgeList();    Iterator<Edges> itr2 = le.iterator();    while(itr2.hasNext())    {           edg1=itr2.next();        int selfid=edg1.get_id();        int inv=edg1.get_inV();        int outv=edg1.get_outV();        //System.out.println(inv+" "+selfid+" "+outv);        String self=d.getNameId(selfid);        String next=d.getNameId(outv);        String prev=d.getNameId(inv);        String label=edg1.get_label();         g.addEdge( self, next,new RelationshipEdge<String>(self, next, label));         g.addEdge( prev, self,new RelationshipEdge<String>(prev, self, label));    }    new java.util.Timer().schedule(             new java.util.TimerTask() {                @Override                public void run() {                    /* try {                         Robot robot = new Robot();                         Rectangle captureSize = new Rectangle(Toolkit.getDefaultToolkit().getScreenSize());                         BufferedImage bufferedImage = robot.createScreenCapture(captureSize);                         ImageIO.write(bufferedImage, "png", new File("H:\\html\\diagram api\\d.png"));                             }                     catch(Exception e) {                         System.err.println(e.getMessage());                     }  */                }            },             5000     );}private void adjustDisplaySettings( JGraph jg ) {    jg.setPreferredSize( DEFAULT_SIZE );    Color  c        = DEFAULT_BG_COLOR;    String colorStr = null;    try {        colorStr = getParameter( "bgcolor" );    }     catch( Exception e ) {}    if( colorStr != null ) {        c = Color.decode( colorStr );    }    jg.setBackground( c );}private void positionVertexAt( Object vertex, int x, int y ) {    DefaultGraphCell cell = m_jgAdapter.getVertexCell( vertex );    Map              attr = cell.getAttributes(  );    SerializableRectangle2D       b    = (SerializableRectangle2D)GraphConstants.getBounds( attr );    GraphConstants.setBounds( attr, new SerializableRectangle2D( x, y, b.width, b.height ) );    Map cellAttr = new HashMap(  );    cellAttr.put( cell, attr );    m_jgAdapter.edit( cellAttr, null, null, null );}}
22544404	[u'options= -Dstorm', u'm', u'm', u'm', u'200', u'200', u'200', u'200', u'storm', u'apache', u'apache', u'apache', u'storm', u'storm', u'lang', u'lang', u'storm', u'net', u'net', u'net', u'net', u'net', u'net', u'net', u'apache', u'', u'0']	I've setup a Storm development cluster utilizing several sources, such as Storm Real-time Processing Cookbook, Setting up Storm on OSX by P. Taylor Goetz and of course all of the content from Nathan Marz. Currently I've used Puppet and Vagrant to setup a cluster on a single machine that has VMs for Nimbus, Zookeeper, and two Supervisors. The local machine itself being the master. I can seemingly submit the sample topologies from storm-starter https://github.com/nathanmarz/storm-starter and have them run but I'm having a couple of problems either with running various tools through Storm or verifying that the cluster actually works!Questions:Whenever I run any of the Storm tools from its bin, such as storm ui or storm logviewer, the console immediately spits out the following and usually hangs:Running: java -server -Dstorm.options= -Dstorm.home=/Users/jhogan/Development/storm -Djava.library.path=/usr/local/lib:/opt/local/lib:/usr/lib -Dstorm.conf.file= -cp /Users/jhogan/Development/storm/lib/asm-4.0.jar:/Users/jhogan/Development/storm/lib/carbonite-1.3.2.jar:/Users/jhogan/Development/storm/lib/clj-stacktrace-0.2.4.jar:/Users/jhogan/Development/storm/lib/clj-time-0.4.1.jar:/Users/jhogan/Development/storm/lib/clojure-1.4.0.jar:/Users/jhogan/Development/storm/lib/clout-1.0.1.jar:/Users/jhogan/Development/storm/lib/commons-codec-1.4.jar:/Users/jhogan/Development/storm/lib/commons-exec-1.1.jar:/Users/jhogan/Development/storm/lib/commons-fileupload-1.2.1.jar:/Users/jhogan/Development/storm/lib/commons-io-1.4.jar:/Users/jhogan/Development/storm/lib/commons-lang-2.5.jar:/Users/jhogan/Development/storm/lib/commons-logging-1.1.1.jar:/Users/jhogan/Development/storm/lib/compojure-1.1.3.jar:/Users/jhogan/Development/storm/lib/core.incubator-0.1.0.jar:/Users/jhogan/Development/storm/lib/curator-client-1.0.1.jar:/Users/jhogan/Development/storm/lib/curator-framework-1.0.1.jar:/Users/jhogan/Development/storm/lib/disruptor-2.10.1.jar:/Users/jhogan/Development/storm/lib/guava-13.0.jar:/Users/jhogan/Development/storm/lib/hiccup-0.3.6.jar:/Users/jhogan/Development/storm/lib/httpclient-4.1.1.jar:/Users/jhogan/Development/storm/lib/httpcore-4.1.jar:/Users/jhogan/Development/storm/lib/jetty-6.1.26.jar:/Users/jhogan/Development/storm/lib/jetty-util-6.1.26.jar:/Users/jhogan/Development/storm/lib/jgrapht-core-0.9.0.jar:/Users/jhogan/Development/storm/lib/jline-2.11.jar:/Users/jhogan/Development/storm/lib/joda-time-2.0.jar:/Users/jhogan/Development/storm/lib/json-simple-1.1.jar:/Users/jhogan/Development/storm/lib/junit-3.8.1.jar:/Users/jhogan/Development/storm/lib/kryo-2.17.jar:/Users/jhogan/Development/storm/lib/log4j-over-slf4j-1.6.6.jar:/Users/jhogan/Development/storm/lib/logback-classic-1.0.6.jar:/Users/jhogan/Development/storm/lib/logback-core-1.0.6.jar:/Users/jhogan/Development/storm/lib/math.numeric-tower-0.0.1.jar:/Users/jhogan/Development/storm/lib/meat-locker-0.3.1.jar:/Users/jhogan/Development/storm/lib/minlog-1.2.jar:/Users/jhogan/Development/storm/lib/netty-3.6.3.Final.jar:/Users/jhogan/Development/storm/lib/objenesis-1.2.jar:/Users/jhogan/Development/storm/lib/reflectasm-1.07-shaded.jar:/Users/jhogan/Development/storm/lib/ring-core-1.1.5.jar:/Users/jhogan/Development/storm/lib/ring-devel-0.3.11.jar:/Users/jhogan/Development/storm/lib/ring-jetty-adapter-0.3.11.jar:/Users/jhogan/Development/storm/lib/ring-servlet-0.3.11.jar:/Users/jhogan/Development/storm/lib/servlet-api-2.5-20081211.jar:/Users/jhogan/Development/storm/lib/servlet-api-2.5.jar:/Users/jhogan/Development/storm/lib/slf4j-api-1.6.5.jar:/Users/jhogan/Development/storm/lib/snakeyaml-1.11.jar:/Users/jhogan/Development/storm/lib/storm-core-0.9.1-incubating.jar:/Users/jhogan/Development/storm/lib/tools.cli-0.2.2.jar:/Users/jhogan/Development/storm/lib/tools.logging-0.2.3.jar:/Users/jhogan/Development/storm/lib/tools.macro-0.1.0.jar:/Users/jhogan/Development/storm/lib/zookeeper-3.3.3.jar:/Users/jhogan/Development/storm:/Users/jhogan/Development/storm/conf -Xmx768m -Dlogfile.name=ui.log -Dlogback.configurationFile=/Users/jhogan/Development/storm/logback/cluster.xml backtype.storm.ui.coreIn this particular case I want to startup the storm ui. The ui logs in storm (from the master machine):2014-03-20 12:26:24 o.m.log [INFO] Logging to Logger[org.mortbay.log] via org.mortbay.log.Slf4jLog2014-03-20 12:26:24 o.m.log [INFO] jetty-6.1.262014-03-20 12:26:24 o.m.log [INFO] Started SocketConnector@0.0.0.0:8080..do not really make sense, as I assume I need to connect to the UI generated from the Nimbus machine:Vagrantfile:boxes = [  { :name => :nimbus, :ip => '10.200.1.100', :cpus =>2, :memory => 512, :instance => 'm1.small' },  { :name => :supervisor1, :ip => '10.200.1.101', :cpus =>4, :memory => 1024, :instance => 'm1.medium' },  { :name => :supervisor2, :ip => '10.200.1.102', :cpus =>4, :memory => 1024, :instance => 'm1.medium' },  { :name => :zookeeper1, :ip => '10.200.1.201', :cpus =>1, :memory => 1024, :instance => 'm1.small' },]In either situation I get a 404 error for the page.Running 'storm list':`1941 [main] INFO  backtype.storm.thrift - Connecting to Nimbus at 10.200.1.100:6627Exception in thread "main" org.apache.thrift7.transport.TTransportException: java.net.ConnectException: Connection refused    at org.apache.thrift7.transport.TSocket.open(TSocket.java:183)    at org.apache.thrift7.transport.TFramedTransport.open(TFramedTransport.java:81)    at backtype.storm.thrift$nimbus_client_and_conn.invoke(thrift.clj:71)    at backtype.storm.command.list$_main.invoke(list.clj:22)    at clojure.lang.AFn.applyToHelper(AFn.java:159)    at clojure.lang.AFn.applyTo(AFn.java:151)    at backtype.storm.command.list.main(Unknown Source)Caused by: java.net.ConnectException: Connection refused    at java.net.PlainSocketImpl.socketConnect(Native Method)    at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)    at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)    at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)    at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)    at java.net.Socket.connect(Socket.java:579)    at org.apache.thrift7.transport.TSocket.open(TSocket.java:178)    ... 6 more`Each machine seems to be setup and running correctly and I can ssh into any one of them using Vagrant ssh . I can submit topologies:`storm jar storm-starter-0.0.1-SNAPSHOT-jar-with-dependencies.jar storm.starter.WordCountTopology`And have them seemingly run, but I'm not sure how to check if the system is actually running correctly. Where do I check logs on the progress of a topology? Why can't I connect to the storm ui on 10.200.1.100:8080 as specified in the docs?I'm very new to this system so I apologize if I haven't posted the correct data. Let me know what parts of Puppet, Vagrant, or Storm I need to post to assist in this resolution.Thanks!
22669614	[]	I seen examples of jgraph and jgrapht and there easy to follow but now sure how I would go about using the CompleteBipartiteGraph? How is the syntax to be used to instantiate the graph?http://jgrapht.org/javadoc/http://jgrapht.org/javadoc/org/jgrapht/generate/CompleteBipartiteGraphGenerator.html
22674477	[u'class);', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'', u'', u'out', u'minCut', u'out', u'size', u'out', u'out', u'', u'edgesOf', u'getEdgeSource', u'getEdgeTarget', u'add', u'add', u'remove', u'size', u'size', u'get', u'get', u'getEdge', u'addEdge', u'edgesOf', u'getEdgeSource', u'getEdgeTarget', u'contains', u'add', u'contains', u'add']	Slightly too long for a comment:I think the formal characteristics of what you are looking for are not specified clearly enough. You are obviously looking for a graph with a certain connectivity ( http://en.wikipedia.org/wiki/Connectivity_%28graph_theory%29 ), but based on the current question, one could just recommend to use a CompleteGraphGenerator. The crucial points are probably those where you are mentioning "some redundancy" and "some weights" (and "some webpage" documenting the topology).Presumably, you want a minimal redundancy. That is, you probably want to insert the minimum number of additional edges so that the graph is still connected after removing k arbitrary vertices. I'm not aware of a library that can do this out-of-the-box. Two rough ideas based on what JGraphT offers: One could compute the minium cut, and insert additional edges between the vertices on both sides of the cut. The http://jgrapht.org/javadoc/org/jgrapht/alg/StoerWagnerMinimumCut.html could be a starting point here. One could compute the strongly connected components, and insert additional edges between these components. The strongly connected components can be computed with the  http://jgrapht.org/javadoc/org/jgrapht/alg/StrongConnectivityInspector.htmlEDIT:Added an implementation based on the first idea mentioned above. The ensureConnectivity method will make sure that a given graph has a certain connectivity as follows: It computes the minimum cut using the StoerWagnerMinimumCut class. The output of this class is a list of vertices that are one of the components that will be created by the cut. The computeCutVertices method will compute the vertices that actually have to be removed in order to divide the graph into several components. For each of these vertices, the set of neighbors will be computed. Any two of these neighbors (that had not already been connected) will be connected with a new edge. This whole process will be repeated until the number of "cut vertices" is greater than the desired connectivity.Note that this has not been tested extensively, and there might be more elegant or efficient solutions, but ... it should work, in generalimport java.util.ArrayList;import java.util.LinkedHashSet;import java.util.List;import java.util.Set;import org.jgrapht.Graph;import org.jgrapht.UndirectedGraph;import org.jgrapht.alg.StoerWagnerMinimumCut;import org.jgrapht.graph.DefaultEdge;import org.jgrapht.graph.SimpleGraph;public class GraphConnectivityTest{    public static void main(String[] args)    {        UndirectedGraph<String, DefaultEdge> graph =            new SimpleGraph<String, DefaultEdge>(DefaultEdge.class);        String v0 = "0";        String v1 = "1";        String v2 = "2";        String v3 = "3";        String v4 = "4";        String v5 = "5";        String v6 = "6";        String v7 = "7";        graph.addVertex(v0);        graph.addVertex(v1);        graph.addVertex(v2);        graph.addVertex(v3);        graph.addVertex(v4);        graph.addVertex(v5);        graph.addVertex(v6);        graph.addVertex(v7);        graph.addEdge(v0, v1);        graph.addEdge(v0, v2);        graph.addEdge(v0, v3);        graph.addEdge(v1, v2);        graph.addEdge(v1, v3);        graph.addEdge(v2, v3);        graph.addEdge(v4, v5);        graph.addEdge(v4, v6);        graph.addEdge(v4, v7);        graph.addEdge(v5, v6);        graph.addEdge(v5, v7);        graph.addEdge(v6, v7);        graph.addEdge(v1, v4);        //graph.addEdge(v3, v6);        ensureConnectivity(graph, 2);    }    /**     * Make sure that the given graph has the specified connectivity.     * That is: Make sure that more than the given number of vertices     * have to be removed in order to split the graph into two     * components.     *      * @param graph The graph     * @param connectivity The desired connectivity     */    private static <V, E> void ensureConnectivity(        UndirectedGraph<V, E> graph, int connectivity)    {        System.out.println("Desired connectivity is "+connectivity);        while (true)        {            StoerWagnerMinimumCut<V, E> m =                 new StoerWagnerMinimumCut<V, E>(graph);            Set<V> minCut = m.minCut();            Set<V> cutVertices =                 computeCutVertices(graph, minCut);            System.out.println("Removing "+cutVertices+" will create two components");            if (cutVertices.size() > connectivity)            {                System.out.println("Reached desired connectivity");                return;            }            for (V cutVertex : cutVertices)            {                E edge = addBridgeEdge(graph, cutVertex);                System.out.println("Added edge "+edge);            }        }    }    /**     * Creates an edge between two arbitrary neighbors of the     * given vertex in the given graph that have not yet     * been connected.     *      * @param graph The graph     * @param v The vertex     */    private static <V, E> E addBridgeEdge(Graph<V, E> graph, V v)    {        Set<E> edges = graph.edgesOf(v);        Set<V> neighbors = new LinkedHashSet<V>();        for (E edge : edges)        {            V v0 = graph.getEdgeSource(edge);            V v1 = graph.getEdgeTarget(edge);            neighbors.add(v0);            neighbors.add(v1);        }        neighbors.remove(v);        List<V> neighborsList = new ArrayList<V>(neighbors);        for (int i=0; i<neighborsList.size(); i++)        {            for (int j=i+1; j<neighborsList.size(); j++)            {                V n0 = neighborsList.get(i);                V n1 = neighborsList.get(j);                E present = graph.getEdge(n0, n1);                if (present == null)                {                    return graph.addEdge(n0, n1);                }            }        }        return null;    }    /**     * Compute the vertices in the given graph that have to be      * removed from the graph in order to split it into two      * components (of which one only contains the given      * "minCut" vertices)     *      * @param graph The graph     * @param minCut The set of vertices on one side of the cut     * @return The vertices that have to be removed      */    private static <V, E> Set<V> computeCutVertices(        Graph<V, E> graph, Set<V> minCut)    {        Set<V> cutVertices = new LinkedHashSet<V>();        for (V v : minCut)        {            Set<E> edges = graph.edgesOf(v);            for (E edge : edges)            {                V v0 = graph.getEdgeSource(edge);                V v1 = graph.getEdgeTarget(edge);                if (minCut.contains(v0) && !minCut.contains(v1))                {                    cutVertices.add(v1);                }                if (!minCut.contains(v0) && minCut.contains(v1))                {                    cutVertices.add(v0);                }            }        }        return cutVertices;    }}
22674888	[u'class);', u'valueOf', u'out', u'createVertex', u'addVertex', u'add', u'createVertex', u'addVertex', u'add', u'edgeSet', u'nextInt', u'get', u'nextInt', u'get', u'addEdge', u'max', u'out', u'createVertex', u'addVertex', u'add', u'createVertex', u'addVertex', u'add', u'nextInt', u'get', u'remove', u'size', u'addEdge', u'edgeSet', u'nextInt', u'get', u'nextInt', u'get', u'addEdge']	In response to the question "Could I still use this generator?" from the comment: You could still use it to create a complete bipartite graph, and then randomly remove some edges. But a more straightforward approach would be to simply generate two sets of vertices and insert some random edges between them. In fact, this is so easy that I have to assume that there are additional constraints that you did not mention until now. I inserted another method where it is made sure that the bipartite graph does not contain isolated vertices (my crystal ball told be to do so...)import java.util.ArrayList;import java.util.List;import java.util.Random;import org.jgrapht.Graph;import org.jgrapht.UndirectedGraph;import org.jgrapht.VertexFactory;import org.jgrapht.graph.DefaultEdge;import org.jgrapht.graph.SimpleGraph;public class BipartiteGraphTest{    public static void main(String[] args)    {        UndirectedGraph<String, DefaultEdge> graph =            new SimpleGraph<String, DefaultEdge>(DefaultEdge.class);        VertexFactory<String> vertexFactory = new VertexFactory<String>()        {            int n = 0;            @Override            public String createVertex()            {                String s = String.valueOf(n);                n++;                return s;            }        };        int numVertices0 = 10;        int numVertices1 = 15;        int numEdges = 20;        generateGraph(graph, numVertices0, numVertices1, numEdges, vertexFactory);        System.out.println(graph);    }    // Creates a bipartite graph with the given numbers     // of vertices and edges    public static <V, E> void generateGraph(Graph<V, E> graph,        int numVertices0, int numVertices1, int numEdges,        final VertexFactory<V> vertexFactory)    {        List<V> vertices0 = new ArrayList<V>();        for (int i = 0; i < numVertices0; i++)        {            V v = vertexFactory.createVertex();            graph.addVertex(v);            vertices0.add(v);        }        List<V> vertices1 = new ArrayList<V>();        for (int i = 0; i < numVertices1; i++)        {            V v = vertexFactory.createVertex();            graph.addVertex(v);            vertices1.add(v);        }        // Create edges between random vertices        Random random = new Random(0);        while (graph.edgeSet().size() < numEdges)        {            int i1 = random.nextInt(vertices1.size());            V v1 = vertices1.get(i1);            int i0 = random.nextInt(vertices0.size());            V v0 = vertices0.get(i0);            graph.addEdge(v0, v1);        }    }    // Creates a bipartite graph with the given numbers    // of vertices and edges without isolated vertices    public static <V, E> void generateGraphNoIsolatedVertices(        Graph<V, E> graph, int numVertices0, int numVertices1, int numEdges,        final VertexFactory<V> vertexFactory,         List<V> vertices0, List<V> vertices1)    {        int minNumEdges = Math.max(numVertices0, numVertices0);        if (numEdges < minNumEdges)        {            System.out.println("At least " + minNumEdges + " are required to " +                "connect each of the " + numVertices0 + " vertices " +                "to any of the " + numVertices1 + " vertices");            numEdges = minNumEdges;        }        for (int i = 0; i < numVertices0; i++)        {            V v = vertexFactory.createVertex();            graph.addVertex(v);            vertices0.add(v);        }        for (int i = 0; i < numVertices1; i++)        {            V v = vertexFactory.createVertex();            graph.addVertex(v);            vertices1.add(v);        }        // Connect each vertex of the larger set with        // a random vertex of the smaller set        Random random = new Random(0);        List<V> larger = null;        List<V> smaller = null;        if (numVertices0 > numVertices1)        {            larger = new ArrayList<V>(vertices0);            smaller = new ArrayList<V>(vertices1);        }        else        {            larger = new ArrayList<V>(vertices1);            smaller = new ArrayList<V>(vertices0);        }        List<V> unmatched = new ArrayList<V>(smaller);        for (V vL : larger)        {            int i = random.nextInt(unmatched.size());            V vS = unmatched.get(i);            unmatched.remove(i);            if (unmatched.size() == 0)            {                unmatched = new ArrayList<V>(smaller);            }            graph.addEdge(vL, vS);        }        // Create the remaining edges between random vertices        while (graph.edgeSet().size() < numEdges)        {            int i0 = random.nextInt(vertices0.size());            V v0 = vertices0.get(i0);            int i1 = random.nextInt(vertices1.size());            V v1 = vertices1.get(i1);            graph.addEdge(v0, v1);        }    }}
22703918	[u'init', u'getContentPane', u'setTitle', u'setDefaultCloseOperation', u'pack', u'setVisible', u'class);', u'add', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'asList', u'asList', u'getMatching', u'execute', u'out', u'out']	I having problem getting jgrapht or jgraph or applet to visualize this graph correctly?  Can I use this graph library to visualize similarly to the picture beneath?  U would be x and V would be Y in the code for example. I'm using the demo versions that used directed graphs to do same in this example.  Not sure if I should use a jgAdapter or jgxAdapter? Currently getting blank applet for either.public class GraphDemo  extends JApplet{     private static final long serialVersionUID = 2202072534703043194L;        private static final Dimension DEFAULT_SIZE = new Dimension(530, 320);        private JGraphXAdapter<String, DefaultEdge> jgxAdapter;    public static void main(String[] args) {                JGraphAdapterDemo applet = new JGraphAdapterDemo();                applet.init();                JFrame frame = new JFrame();                frame.getContentPane().add(applet);                frame.setTitle("JGraphT Adapter to JGraph Demo");                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);                frame.pack();                frame.setVisible(true);            }    public void init()    {         UndirectedGraph<String, DefaultEdge> g =                 new SimpleGraph<String, DefaultEdge>(DefaultEdge.class);        jgxAdapter = new JGraphXAdapter<String, DefaultEdge>(g);        getContentPane().add(new mxGraphComponent(jgxAdapter));        resize(DEFAULT_SIZE);        String x1 = "x1";        String x2 = "x2";        String x3 = "x3";        String y1 = "y1";        String y2 = "y2";        String y3 = "y3";        String y4 = "y5";        g.addVertex(x1);        g.addVertex(x2);        g.addVertex(x3);        g.addVertex(y1);        g.addVertex(y2);        g.addVertex(y3);        g.addVertex(y4);        g.addEdge(x1, y1);        g.addEdge(x1, y2);        g.addEdge(x2, y1);        g.addEdge(x2, y4);        g.addEdge(x3, y2);        g.addEdge(x3, y3);        Set<String> p1 = new HashSet<String>(Arrays.asList(x1, x2, x3));        Set<String> p2 = new HashSet<String>(Arrays.asList(y1, y2, y3, y4));        HopcroftKarpBipartiteMatching<String, DefaultEdge> alg =             new HopcroftKarpBipartiteMatching<String, DefaultEdge>(g, p1, p2);        Set<DefaultEdge> match = alg.getMatching();        mxCircleLayout layout = new mxCircleLayout(jgxAdapter);        layout.execute(jgxAdapter.getDefaultParent());        System.out.println(g.toString());        System.out.println(match);    }}
22703705	[u'', u'', u'', u'class);', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'asList', u'asList', u'getMatching', u'out', u'out']	HopcroftKarpBipartiteMatching constructor needs a graph and two partitioning sets, ie:  UndirectedGraph<String, DefaultEdge> g = ...Set<String> part1 = ...Set<String> part2 = ...new HopcroftKarpBipartiteMatching<String, DefaultEdge>(g, part1, part2);Here is a simple example: import java.util.Arrays;import java.util.HashSet;import java.util.Set;import org.jgrapht.UndirectedGraph;import org.jgrapht.alg.HopcroftKarpBipartiteMatching;import org.jgrapht.graph.DefaultEdge;import org.jgrapht.graph.SimpleGraph;public class GraphDemo {    public static void main(String[] args) {        UndirectedGraph<String, DefaultEdge> g =                 new SimpleGraph<String, DefaultEdge>(DefaultEdge.class);        String x1 = "x1";        String x2 = "x2";        String x3 = "x3";        String y1 = "y1";        String y2 = "y2";        String y3 = "y3";        String y4 = "y5";        g.addVertex(x1);        g.addVertex(x2);        g.addVertex(x3);        g.addVertex(y1);        g.addVertex(y2);        g.addVertex(y3);        g.addVertex(y4);        g.addEdge(x1, y1);        g.addEdge(x1, y2);        g.addEdge(x2, y1);        g.addEdge(x2, y4);        g.addEdge(x3, y2);        g.addEdge(x3, y3);        Set<String> p1 = new HashSet<String>(Arrays.asList(x1, x2, x3));        Set<String> p2 = new HashSet<String>(Arrays.asList(y1, y2, y3, y4));        HopcroftKarpBipartiteMatching<String, DefaultEdge> alg =             new HopcroftKarpBipartiteMatching<String, DefaultEdge>(g, p1, p2);        Set<DefaultEdge> match = alg.getMatching();        System.out.println(g.toString());        System.out.println(match);    }}
22709336	[u'org/visualizations', u'decode', u'applet', u'class );', u'add', u'height / ', u'height / ', u'valueOf', u'setPreferredSize', u'decode', u'setBackground', u'getVertexCell', u'getAttributes', u'getBounds', u'setBounds', u'put', u'edit', u'max', u'out', u'createVertex', u'addVertex', u'add', u'createVertex', u'addVertex', u'add', u'nextInt', u'get', u'remove', u'size', u'addEdge', u'edgeSet', u'nextInt', u'get', u'nextInt', u'get', u'addEdge']	Based on the example from http://jgrapht.org/visualizations.html and some methods that I already posted in Java JGrapht Bipartite graph :import java.awt.Color;import java.awt.Dimension;import java.awt.geom.Rectangle2D;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import java.util.Random;import javax.swing.JApplet;import org.jgraph.JGraph;import org.jgraph.graph.DefaultGraphCell;import org.jgraph.graph.GraphConstants;import org.jgrapht.Graph;import org.jgrapht.ListenableGraph;import org.jgrapht.VertexFactory;import org.jgrapht.ext.JGraphModelAdapter;import org.jgrapht.graph.DefaultEdge;import org.jgrapht.graph.ListenableUndirectedGraph;/** * Based on the example from http://jgrapht.org/visualizations.html */public class BipartiteGraphVisualizationTest extends JApplet {    private static final Color     DEFAULT_BG_COLOR = Color.decode( "#FAFBFF" );    private static final Dimension DEFAULT_SIZE = new Dimension( 800, 600 );    //     private JGraphModelAdapter<String, DefaultEdge> m_jgAdapter;    /**     * @see java.applet.Applet#init().     */    public void init(  ) {        // create a JGraphT graph        ListenableGraph<String, DefaultEdge> g =             new ListenableUndirectedGraph<String, DefaultEdge>( DefaultEdge.class );        // create a visualization using JGraph, via an adapter        m_jgAdapter = new JGraphModelAdapter<String, DefaultEdge>( g );        JGraph jgraph = new JGraph( m_jgAdapter );        adjustDisplaySettings( jgraph );        getContentPane(  ).add( jgraph );        resize( DEFAULT_SIZE );        List<String> vertices0 = new ArrayList<String>();        List<String> vertices1 = new ArrayList<String>();        fillGraph(g, vertices0, vertices1);        positionVertices(vertices0, vertices1);    }    private void positionVertices(List<String> vertices0, List<String> vertices1)    {        int dy0 = DEFAULT_SIZE.height / (vertices0.size() + 2);        int y0 = dy0;        for (String v0 : vertices0)        {            positionVertexAt(v0, 100, y0);            y0+=dy0;        }        int dy1 = DEFAULT_SIZE.height / (vertices1.size() + 2);        int y1 = dy1;        for (String v1 : vertices1)        {            positionVertexAt(v1, 600, y1);            y1+=dy1;        }    }    public static void fillGraph(Graph<String, DefaultEdge> graph,         List<String> vertices0, List<String> vertices1)    {        VertexFactory<String> vertexFactory = new VertexFactory<String>()        {            int n = 0;            @Override            public String createVertex()            {                String s = String.valueOf(n);                n++;                return s;            }        };        int numVertices0 = 10;        int numVertices1 = 15;        int numEdges = 20;        generateGraphNoIsolatedVertices(graph,             numVertices0, numVertices1, numEdges,             vertexFactory, vertices0, vertices1);    }    private void adjustDisplaySettings( JGraph jg ) {        jg.setPreferredSize( DEFAULT_SIZE );        Color  c        = DEFAULT_BG_COLOR;        String colorStr = null;        try {            colorStr = getParameter( "bgcolor" );        }         catch( Exception e ) {}        if( colorStr != null ) {            c = Color.decode( colorStr );        }        jg.setBackground( c );    }    private void positionVertexAt( Object vertex, int x, int y ) {        DefaultGraphCell cell = m_jgAdapter.getVertexCell( vertex );        Map              attr = cell.getAttributes(  );        Rectangle2D        b    = GraphConstants.getBounds( attr );        GraphConstants.setBounds( attr, new Rectangle2D.Double( x, y, b.getWidth(), b.getHeight() ) );        Map cellAttr = new HashMap(  );        cellAttr.put( cell, attr );        m_jgAdapter.edit( cellAttr, null, null, null);    }    // Creates a bipartite graph with the given numbers    // of vertices and edges without isolated vertices    public static <V, E> void generateGraphNoIsolatedVertices(        Graph<V, E> graph, int numVertices0, int numVertices1, int numEdges,        final VertexFactory<V> vertexFactory,         List<V> vertices0, List<V> vertices1)    {        int minNumEdges = Math.max(numVertices0, numVertices0);        if (numEdges < minNumEdges)        {            System.out.println("At least " + minNumEdges + " are required to " +                "connect each of the " + numVertices0 + " vertices " +                "to any of the " + numVertices1 + " vertices");            numEdges = minNumEdges;        }        for (int i = 0; i < numVertices0; i++)        {            V v = vertexFactory.createVertex();            graph.addVertex(v);            vertices0.add(v);        }        for (int i = 0; i < numVertices1; i++)        {            V v = vertexFactory.createVertex();            graph.addVertex(v);            vertices1.add(v);        }        // Connect each vertex of the larger set with        // a random vertex of the smaller set        Random random = new Random(0);        List<V> larger = null;        List<V> smaller = null;        if (numVertices0 > numVertices1)        {            larger = new ArrayList<V>(vertices0);            smaller = new ArrayList<V>(vertices1);        }        else        {            larger = new ArrayList<V>(vertices1);            smaller = new ArrayList<V>(vertices0);        }        List<V> unmatched = new ArrayList<V>(smaller);        for (V vL : larger)        {            int i = random.nextInt(unmatched.size());            V vS = unmatched.get(i);            unmatched.remove(i);            if (unmatched.size() == 0)            {                unmatched = new ArrayList<V>(smaller);            }            graph.addEdge(vL, vS);        }        // Create the remaining edges between random vertices        while (graph.edgeSet().size() < numEdges)        {            int i0 = random.nextInt(vertices0.size());            V v0 = vertices0.get(i0);            int i1 = random.nextInt(vertices1.size());            V v1 = vertices1.get(i1);            graph.addEdge(v0, v1);        }    }}
22792787	[]	I am working on generating a graph with Java using jgraph and jgrapht libraries. The problem is that my graph has a very big number of vertices (varying from 300 to 1000 in some cases) and no matter what I try, vertices and edges keep on overlapping each other creating a mess and, of course, a non-readable graph. The method I used until now for placing the vertices on the JFrame is using random numbers as coordinates. Is there some other way to make this work? Maybe a better working algorithm or another Java library for better results?Thank you in advance!
22809489	[u'', u'decode', u'applet', u'class );', u'add', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'', u'setPreferredSize', u'decode', u'setBackground', u'getVertexCell', u'getAttributes', u'random', u'setBounds', u'put', u'edit', u'Paintable rings;', u'setSize', u'setBackground', u'getRenderContext', u'getRenderContext', u'getRenderContext', u'setVertexToolTipTransformer', u'getRenderContext', u'add', u'setGraphMouse', u'getModeComboBox', u'addItemListener', u'setMode', u'addActionListener', u'scale', u'addActionListener', u'scale', u'addItemListener', u'getStateChange', u'start', u'getRenderContext', u'addPreRenderPaintable', u'start', u'getRenderContext', u'removePreRenderPaintable', u'repaint', u'setBorder', u'add', u'add', u'add', u'add', u'add', u'add', u'Paintable {', u'getPolarLocations', u'getVertices', u'get', u'add', u'setColor', u'getCenter', u'Double', u'Double', u'setFrameFromDiagonal', u'getX', u'setFrameFromDiagonal', u'getX', u'getRenderContext', u'draw', u'addVertex', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addVertex', u'addEdge', u'addEdge', u'addEdge', u'addVertex', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'getContentPane', u'setDefaultCloseOperation', u'add', u'pack', u'setVisible']	I am working to a program that reads some xml files and creates graph diagram based on information in those xml files.I have difficulties in making the  graph diagram. I want that my graph to look:http://pic.dhe.ibm.com/infocenter/elixent/v3r5/topic/com.ibm.ilog.elixir.doc/Content/Visualization/Documentation/Flex/Diagram4Flex/_media/TreeLayoutExample_default.pngSo, I want it to have a  treelayout, names of vertexes to be inside some colored rectangles(pref have different colors for different kind of items) and I also want to have some writing on the edges between two vertexes. On top of that, I would very much like that the vertexes to be some Objects that I created in my project, so when I click on a vertex to get the instance of the Object that was placed on the Vertex.So far, I tried two frameworks to have my graph drawn easily and without working too much on the drawing algorithm:At first I tried jgraph frameowork:    package mainPack;    import java.awt.Color;    import java.awt.Dimension;    import java.awt.Rectangle;    import java.util.ArrayList;    import java.util.HashMap;    import java.util.Map;    import javax.swing.JApplet;    import javax.swing.JFrame;    import org.jgraph.JGraph;    import org.jgraph.graph.DefaultGraphCell;    import org.jgraph.graph.GraphConstants;    import org.jgrapht.ListenableGraph;    import org.jgrapht.ext.JGraphModelAdapter;    import org.jgrapht.graph.ListenableDirectedGraph;    import org.jgrapht.graph.DefaultEdge;    import org.jgrapht.graph.ListenableDirectedWeightedGraph;    /**     * A demo applet that shows how to use JGraph to visualize JGraphT graphs.     *     * @author Barak Naveh     *     * @since Aug 3, 2003     */    public class Test extends JApplet {  private static final Color     DEFAULT_BG_COLOR = Color.decode( "#FAFBFF" );            private static final Dimension DEFAULT_SIZE = new Dimension( 530, 320 );    //     private JGraphModelAdapter m_jgAdapter;    /**     * @see java.applet.Applet#init().     */    public void init(  ) {        // create a JGraphT graph        ListenableGraph g = new ListenableDirectedGraph( DefaultEdge.class );        // create a visualization using JGraph, via an adapter        m_jgAdapter = new JGraphModelAdapter( g );        JGraph jgraph = new JGraph( m_jgAdapter );        adjustDisplaySettings( jgraph );        getContentPane(  ).add( jgraph );        resize( DEFAULT_SIZE );        // add some sample data (graph manipulated via JGraphT)        g.addVertex( "v1" );        g.addVertex( "v2" );        g.addVertex( "v3" );        g.addVertex( "v4" );        g.addEdge( "v1", "v2", "1" );        g.addEdge( "v2", "v3", "2" );        g.addEdge( "v3", "v1", "3" );        g.addEdge( "v4", "v3", "4" );        // position vertices nicely within JGraph component        positionVertexAt( "v1", 130, 40 );        positionVertexAt( "v2", 60, 200 );        positionVertexAt( "v3", 310, 230 );        positionVertexAt( "v4", 380, 70 );        // that's all there is to it!...    }    private void adjustDisplaySettings( JGraph jg ) {        jg.setPreferredSize( DEFAULT_SIZE );        Color  c        = DEFAULT_BG_COLOR;        String colorStr = null;        try {            colorStr = getParameter( "bgcolor" );        }         catch( Exception e ) {}        if( colorStr != null ) {            c = Color.decode( colorStr );        }        jg.setBackground( c );    }    private void positionVertexAt( Object vertex, int x, int y ) {        DefaultGraphCell cell = m_jgAdapter.getVertexCell( vertex );        Map             attr = cell.getAttributes();   //      Rectangle       b    =  new Rectangle((int)(Math.random()*1000),(int)(Math.random()*500),100,30);        Rectangle       b    =  new Rectangle(20,50 ,100,30);       GraphConstants.setBounds( attr, b );         Map cellAttr = new HashMap(  );         cellAttr.put( cell, attr );         m_jgAdapter.edit( cellAttr, null, null, null );    }}This framework works well on making the graph, with vertex name inside Rectangles and names on the edges and can get the String that is inside the vertex when click on it using MouseListener. But  I could not find a way to make it have a TreeLayout and add vertexes as some Objects that I may get returned when click on the Vertex . I tried to make use of the generic classes that are in this example, but got only Exceptions when tried to run it. I searched in the Internet but could not find a way to apply a treelayout on this GraphI have also tried Java JUNG Framework which has a lot more options for drawing the graph. I found this example:    @SuppressWarnings("serial")    public class TreeLayoutDemo extends JApplet {/** * the graph */Forest<String,Integer> graph;Factory<DirectedGraph<String,Integer>> graphFactory =     new Factory<DirectedGraph<String,Integer>>() {        public DirectedGraph<String, Integer> create() {            return new DirectedSparseMultigraph<String,Integer>();        }    };Factory<Tree<String,Integer>> treeFactory =    new Factory<Tree<String,Integer>> () {    public Tree<String, Integer> create() {        return new DelegateTree<String,Integer>(graphFactory);    }};Factory<Integer> edgeFactory = new Factory<Integer>() {    int i=0;    public Integer create() {        return i++;    }};Factory<String> vertexFactory = new Factory<String>() {    int i=0;    public String create() {        return "V"+i++;    }};/** * the visual component and renderer for the graph */VisualizationViewer<String,Integer> vv;VisualizationServer.Paintable rings;String root;TreeLayout<String,Integer> treeLayout;RadialTreeLayout<String,Integer> radialLayout;public TreeLayoutDemo() {    // create a simple graph for the demo    graph = new DelegateForest<String,Integer>();    createTree();    treeLayout = new TreeLayout<String,Integer>(graph);    radialLayout = new RadialTreeLayout<String,Integer>(graph);    radialLayout.setSize(new Dimension(600,600));    vv =  new VisualizationViewer<String,Integer>(treeLayout, new Dimension(600,600));    vv.setBackground(Color.white);   vv.getRenderContext().setEdgeShapeTransformer(new EdgeShape.Line());    vv.getRenderContext().setVertexLabelTransformer(new ToStringLabeller());   // vv.getRenderContext().setVertexShapeTransformer(arg0);    // add a listener for ToolTips    vv.setVertexToolTipTransformer(new ToStringLabeller());    vv.getRenderContext().setArrowFillPaintTransformer(new ConstantTransformer(Color.lightGray));    rings = new Rings();    Container content = getContentPane();    final GraphZoomScrollPane panel = new GraphZoomScrollPane(vv);    content.add(panel);    final DefaultModalGraphMouse graphMouse = new DefaultModalGraphMouse();    vv.setGraphMouse(graphMouse);    JComboBox modeBox = graphMouse.getModeComboBox();    modeBox.addItemListener(graphMouse.getModeListener());    graphMouse.setMode(ModalGraphMouse.Mode.TRANSFORMING);    final ScalingControl scaler = new CrossoverScalingControl();    JButton plus = new JButton("+");    plus.addActionListener(new ActionListener() {        public void actionPerformed(ActionEvent e) {            scaler.scale(vv, 1.1f, vv.getCenter());        }    });    JButton minus = new JButton("-");    minus.addActionListener(new ActionListener() {        public void actionPerformed(ActionEvent e) {            scaler.scale(vv, 1/1.1f, vv.getCenter());        }    });    JToggleButton radial = new JToggleButton("Radial");    radial.addItemListener(new ItemListener() {        public void itemStateChanged(ItemEvent e) {            if(e.getStateChange() == ItemEvent.SELECTED) {                LayoutTransition<String,Integer> lt =                    new LayoutTransition<String,Integer>(vv, treeLayout, radialLayout);                Animator animator = new Animator(lt);                animator.start();                vv.getRenderContext().getMultiLayerTransformer().setToIdentity();                vv.addPreRenderPaintable(rings);            } else {                LayoutTransition<String,Integer> lt =                    new LayoutTransition<String,Integer>(vv, radialLayout, treeLayout);                Animator animator = new Animator(lt);                animator.start();                vv.getRenderContext().getMultiLayerTransformer().setToIdentity();                vv.removePreRenderPaintable(rings);            }            vv.repaint();        }});    JPanel scaleGrid = new JPanel(new GridLayout(1,0));    scaleGrid.setBorder(BorderFactory.createTitledBorder("Zoom"));    JPanel controls = new JPanel();    scaleGrid.add(plus);    scaleGrid.add(minus);    controls.add(radial);    controls.add(scaleGrid);    controls.add(modeBox);    content.add(controls, BorderLayout.SOUTH);}class Rings implements VisualizationServer.Paintable {    Collection<Double> depths;    public Rings() {        depths = getDepths();    }    private Collection<Double> getDepths() {        Set<Double> depths = new HashSet<Double>();        Map<String,PolarPoint> polarLocations = radialLayout.getPolarLocations();        for(String v : graph.getVertices()) {            PolarPoint pp = polarLocations.get(v);            depths.add(pp.getRadius());        }        return depths;    }    public void paint(Graphics g) {        g.setColor(Color.lightGray);        Graphics2D g2d = (Graphics2D)g;        Point2D center = radialLayout.getCenter();        Rectangle2D rectangle = new Rectangle2D.Double();   // (center.getX()-10, center.getY()-20, 20, 40);        Ellipse2D ellipse = new Ellipse2D.Double();        for(double d : depths) {            ellipse.setFrameFromDiagonal(center.getX()-d, center.getY()-d,                     center.getX()+d, center.getY()+d);            rectangle.setFrameFromDiagonal(center.getX()-d, center.getY()-d,                     center.getX()+d, center.getY()+d);            Shape shape = vv.getRenderContext().getMultiLayerTransformer().getTransformer(Layer.LAYOUT).transform(rectangle);            g2d.draw(shape);        }    }    public boolean useTransform() {        return true;    }}/** *  */private void createTree() {    graph.addVertex("V0");    graph.addEdge(edgeFactory.create(), "V0", "V1");     graph.addEdge(edgeFactory.create(), "V0", "V2");    graph.addEdge(edgeFactory.create(), "V1", "V4");    graph.addEdge(edgeFactory.create(), "V2", "V3");    graph.addEdge(edgeFactory.create(), "V2", "V5");    graph.addEdge(edgeFactory.create(), "V4", "V6");    graph.addEdge(edgeFactory.create(), "V4", "V7");    graph.addEdge(edgeFactory.create(), "V3", "V8");    graph.addEdge(edgeFactory.create(), "V6", "V9");    graph.addEdge(edgeFactory.create(), "V4", "V10");    graph.addVertex("A0");    graph.addEdge(edgeFactory.create(), "A0", "A1");    graph.addEdge(edgeFactory.create(), "A0", "A2");    graph.addEdge(edgeFactory.create(), "A0", "A3");    graph.addVertex("B0");    graph.addEdge(edgeFactory.create(), "B0", "B1");    graph.addEdge(edgeFactory.create(), "B0", "B2");    graph.addEdge(edgeFactory.create(), "B1", "B4");    graph.addEdge(edgeFactory.create(), "B2", "B3");    graph.addEdge(edgeFactory.create(), "B2", "B5");    graph.addEdge(edgeFactory.create(), "B4", "B6");    graph.addEdge(edgeFactory.create(), "B4", "B7");    graph.addEdge(edgeFactory.create(), "B3", "B8");    graph.addEdge(edgeFactory.create(), "B6", "B9");}/** * a driver for this demo */public static void main(String[] args) {    JFrame frame = new JFrame();    Container content = frame.getContentPane();    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);    content.add(new TreeLayoutDemo());    frame.pack();    frame.setVisible(true);}}Using this framework I could add the Vertexes as some Objects that I created and on the vertex name is displayed what that object returns in the toString() method. It also has the TreeLayout algorithm, that I wanted so much, implemented but I cannot manage to change the look of the vertexes. I want them to look like the vertexes that are drawn by JGraph framework, but with JUNG I only get some circles and name of vertex is outside the vertex shape. I have discovered an example that changes the shape of vertex, but the writing is still outside. So, I would like very much some suggestions about  how can I draw some graph that is in between what I get with these two frameworks: Have the name of vertex inside the shape, have the Treelayout and add vertexes as some Object that I can get returned when I click on the vertex.The answer from Marco13 was very useful. I have figured to make the Rectangles have a size to fit he String by setting String.length * 10 for the width of the Rectangle.I think this may be useful for someone else trying to make a graph like this: Instead of  that appears in most generic classes in this example can be used whatever Object is needed, String is for Vertex and Integer is for Edge type. Inside the Transformer functions you get the Object that is assigned for the Vertex or Edge. Like this, I could set different shapes, colors and fonts for objects with some specific properties.I work to figure how to make a MouseListener that returns the Edge Object when I click on it but I hope that will be easy.
22967289	[u'newFixedThreadPool', u'submit', u'', u'', u'', u'connect', u'complete', u'', u'flow', u'flow', u'flow', u'flow', u'agg', u'agg', u'util', u'util', u'util', u'util', u'util', u'util', u'util', u'lang', u'lang', u'jgrapht', u'jgrapht', u'jgrapht', u'jgrapht', u'flow', u'flow', u'']	I'm running following code:ExecutorService executor = Executors.newFixedThreadPool(numberOfConcurrentJobs);ExecutorCompletionService<Integer> ecs = new ExecutorCompletionService<Integer>(executor);List<Future<Integer>> submittedJobs = new ArrayList<Future<Integer>>();try {   for (Account account : accounts) {      AggExecutor aggExecutor = new AggExecutor(account, args, aggregationCreator);      ecs.submit(aggExecutor);     ...   }  }public class AggExecutor implements Callable<Integer> {     Flow flow;...@Overridepublic Integer call() throws Exception {   ...    CascadeConnector connector = new CascadeConnector();    Cascade cascade = connector.connect(flows);    cascade.complete();          ...}This is executed in single JVM for many accounts.For some cases, not really reproducible I'm getting the following exception: cascading.flow.planner.PlannerException: could not build flow from assembly: [null]    at cascading.flow.planner.FlowPlanner.handleExceptionDuringPlanning(FlowPlanner.java:533)    at cascading.flow.hadoop.planner.HadoopPlanner.buildFlow(HadoopPlanner.java:237)    at cascading.flow.FlowConnector.connect(FlowConnector.java:454)    at com.agg.common.manager.AggExecutor.call(AggExecutor.java:57)    at com.agg.common.manager.AggExecutor.call(AggExecutor.java:24)    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)    at java.util.concurrent.FutureTask.run(FutureTask.java:138)    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:439)    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)    at java.util.concurrent.FutureTask.run(FutureTask.java:138)    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)    at java.lang.Thread.run(Thread.java:662)Caused by: java.lang.NullPointerException    at org.jgrapht.traverse.TopologicalOrderIterator.decrementInDegree(Unknown Source)    at org.jgrapht.traverse.TopologicalOrderIterator.encounterVertex(Unknown Source)    at org.jgrapht.traverse.CrossComponentIterator.addUnseenChildrenOf(Unknown Source)    at org.jgrapht.traverse.CrossComponentIterator.next(Unknown Source)    at cascading.flow.planner.ElementGraph.resolveFields(ElementGraph.java:595)    at cascading.flow.hadoop.planner.HadoopPlanner.buildFlow(HadoopPlanner.java:222)    ... 15 moreDo I have some statics, some global state  in the cascading infrastructures that must be a real singletons?
23066765	[u'', u'6', u'simpleframework:simple-xml:2']	You can refer to a local repository (a directory in this case) with the following:repositories {    ivy {        // URL can refer to a local directory        url "../local-repo"    }}To exclude the dependent jars from your final jar, you can use the compile configuration like this:compileOnly files('libs/jgrapht-jdk1.6.jar')compile 'org.simpleframework:simple-xml:2.7'A more detailed answer can be seen over here:Gradle dependencies local jar file
23114449	[u'field = field;', u'getClass', u'equals', u'getClass', u'equals', u'field == vertex', u'field;', u'field = field;', u'getClass', u'equals', u'getClass', u'equals', u'field == edge', u'field;', u'addVertex', u'addVertex', u'addEdge', u'equals']	In Java, want to create a simple graph (a unweighted, undirected graph containing no graph loops or multiple edges) containing vertexes/edges that are equal.I have two Java Classes, one for the vertexes:  class Vertex {    private int field;    public Vertex(int field) {        this.field = field;    }    @Override    public boolean equals(Object obj) {        if (obj.getClass().getPackage()                .equals(this.getClass().getPackage())                && obj.getClass().getName()                        .equals(this.getClass().getName())) {            Vertex vertex = (Vertex) obj;            if (this.field == vertex.field)                return true;        }        // Else        return false;    }    @Override    public int hashCode() {        // No need for a perfect hash        return this.field;    }}And a class for the edges:class Edge {    private int field;    public Edge(int field) {        this.field = field;    }    @Override    public boolean equals(Object obj) {        if (obj.getClass().getPackage()                .equals(this.getClass().getPackage())                && obj.getClass().getName()                        .equals(this.getClass().getName())) {            Edge edge = (Edge) obj;            if (this.field == edge.field)                return true;        }        // Else        return false;    }    @Override    public int hashCode() {        // No need for a perfect hash        return this.field;    }}I currently use the JGraphT library. But I ran into a IllegalArgumentException: "loops not allowed" after starting this code:    // Define a EdgeFactory    EdgeFactory<Vertex, Edge> BOND_FACTORY = new EdgeFactory<Vertex, Edge>() {        @Override        public Edge createEdge(Vertex sourceVertex, Vertex targetVertex) {            return new Edge(2);        }    };    // Create the graph    SimpleGraph<Vertex, Edge> graph = new SimpleGraph<Vertex, Edge>(            BOND_FACTORY);    // Create vertexes    Vertex v1 = new Vertex(1);    Vertex v2 = new Vertex(1);    // Add them to the graph    graph.addVertex(v1);    graph.addVertex(v2);    graph.addEdge(v1, v2);The problem is that i try to add v2 to the graph, but because v1.equals(v2) == true v2 is never added to the graph. From the JavaDoc of the lib:Adds the specified vertex to this graph if not already present. More formally, adds the specified vertex, v, to this graph if this graph contains no vertex u such that u.equals(v). This check is implemented here.But then, how do I acomplish what I'm trying to do? Is there another implemention in this library that I could use for it, or is changing the equals() method a good idea?
23252758	[u'netflix', u'storm', u'netflix', u'storm', u'lang', u'storm', u'storm', u'storm', u'storm', u'storm', u'storm', u'storm', u'storm', u'storm', u'lang', u'lang', u'lang', u'core$seq', u'core$dorun', u'core$doall', u'storm', u'lang', u'lang', u'core$apply', u'storm', u'lang', u'storm', u'lang', u'storm', u'lang', u'lang', u'lang', u'core$seq', u'core$dorun', u'core$doall', u'storm', u'lang', u'lang', u'core$apply', u'core$partial$fn__4070', u'lang', u'storm', u'lang', u'lang', u'storm', u'build', u'extra', u'version>1', u'version>1', u'version>0', u'verson>2', u'version>2', u'version>1', u'version>0', u'version>1', u'version>1', u'version>0', u'tools', u'math', u'version>1', u'version>1', u'version>4', u'tools', u'version>2', u'version>0', u'version>13', u'version>1', u'version>1', u'version>3', u'tools', u'version>0', u'version>1', u'version>0', u'version>3']	For trying out the storm-starter examples, I am following the instructions as per this page- https://github.com/apache/incubator-storm/tree/master/examples/storm-starterAfter following the instructions, the default setup with storm 0.9.1 does not execute when I run the command - mvn compile exec:java -Dstorm.topology=storm.starter.ExclamationTopologyThis gives an error as - java.lang.ClassNotFoundException: org.apache.zookeeper.server.NIOServerCnxn$FactoryThis arises due the class being renamed in Zookeeper 3.4.x versions. I changed the dependencies according to this discussion thread - http://mail-archives.apache.org/mod_mbox/storm-user/201403.mbox/%3C53162E6B01FE029000391290_0_83060@p057%3ENow when I run the mvn command above, I end up with the error trace as below: 4749 [Thread-9] INFO  com.netflix.curator.framework.imps.CuratorFrameworkImpl - Starting4765 [Thread-9-EventThread] INFO  backtype.storm.zookeeper - Zookeeper state update: :connected:none4774 [Thread-9] INFO  com.netflix.curator.framework.imps.CuratorFrameworkImpl - Starting4969 [Thread-9] ERROR backtype.storm.daemon.worker - Error on initialization of server mk-workerjava.lang.NoSuchMethodError: backtype.storm.serialization.DefaultKryoFactory$KryoSerializableDefault.setReferences(Z)V    at backtype.storm.serialization.DefaultKryoFactory.getKryo(DefaultKryoFactory.java:49) ~[storm-core-0.9.1-incubating.jar:0.9.1-incubating]    at backtype.storm.serialization.SerializationFactory.getKryo(SerializationFactory.java:51) ~[storm-core-0.9.1-incubating.jar:0.9.1-incubating]    at backtype.storm.serialization.KryoValuesDeserializer.<init>(KryoValuesDeserializer.java:33) ~[storm-core-0.9.1-incubating.jar:0.9.1-incubating]    at backtype.storm.serialization.KryoTupleDeserializer.<init>(KryoTupleDeserializer.java:39) ~[storm-core-0.9.1-incubating.jar:0.9.1-incubating]    at backtype.storm.daemon.executor$mk_executor_data$fn__2099.invoke(executor.clj:211) ~[classes/:na]    at backtype.storm.util$assoc_apply_self.invoke(util.clj:792) ~[classes/:0.9.1-incubating]    at backtype.storm.daemon.executor$mk_executor_data.invoke(executor.clj:211) ~[classes/:na]    at backtype.storm.daemon.executor$mk_executor.invoke(executor.clj:316) ~[classes/:na]    at backtype.storm.daemon.worker$fn__2575$exec_fn__1083__auto____2576$iter__2581__2585$fn__2586.invoke(worker.clj:375) ~[classes/:na]    at clojure.lang.LazySeq.sval(LazySeq.java:42) ~[clojure-1.4.0.jar:na]    at clojure.lang.LazySeq.seq(LazySeq.java:60) ~[clojure-1.4.0.jar:na]    at clojure.lang.RT.seq(RT.java:473) ~[clojure-1.4.0.jar:na]    at clojure.core$seq.invoke(core.clj:133) ~[clojure-1.4.0.jar:na]    at clojure.core$dorun.invoke(core.clj:2725) ~[clojure-1.4.0.jar:na]    at clojure.core$doall.invoke(core.clj:2741) ~[clojure-1.4.0.jar:na]    at backtype.storm.daemon.worker$fn__2575$exec_fn__1083__auto____2576.invoke(worker.clj:375) ~[classes/:na]    at clojure.lang.AFn.applyToHelper(AFn.java:185) ~[clojure-1.4.0.jar:na]    at clojure.lang.AFn.applyTo(AFn.java:151) ~[clojure-1.4.0.jar:na]    at clojure.core$apply.invoke(core.clj:601) ~[clojure-1.4.0.jar:na]    at backtype.storm.daemon.worker$fn__2575$mk_worker__2631.doInvoke(worker.clj:344) ~[classes/:na]    at clojure.lang.RestFn.invoke(RestFn.java:512) ~[clojure-1.4.0.jar:na]    at backtype.storm.daemon.supervisor$fn__3060.invoke(supervisor.clj:504) ~[classes/:na]    at clojure.lang.MultiFn.invoke(MultiFn.java:177) ~[clojure-1.4.0.jar:na]    at backtype.storm.daemon.supervisor$sync_processes$iter__2918__2922$fn__2923.invoke(supervisor.clj:264) ~[classes/:na]    at clojure.lang.LazySeq.sval(LazySeq.java:42) ~[clojure-1.4.0.jar:na]    at clojure.lang.LazySeq.seq(LazySeq.java:60) ~[clojure-1.4.0.jar:na]    at clojure.lang.RT.seq(RT.java:473) ~[clojure-1.4.0.jar:na]    at clojure.core$seq.invoke(core.clj:133) ~[clojure-1.4.0.jar:na]    at clojure.core$dorun.invoke(core.clj:2725) ~[clojure-1.4.0.jar:na]    at clojure.core$doall.invoke(core.clj:2741) ~[clojure-1.4.0.jar:na]    at backtype.storm.daemon.supervisor$sync_processes.invoke(supervisor.clj:252) ~[classes/:na]    at clojure.lang.AFn.applyToHelper(AFn.java:161) ~[clojure-1.4.0.jar:na]    at clojure.lang.AFn.applyTo(AFn.java:151) ~[clojure-1.4.0.jar:na]    at clojure.core$apply.invoke(core.clj:603) ~[clojure-1.4.0.jar:na]    at clojure.core$partial$fn__4070.doInvoke(core.clj:2343) ~[clojure-1.4.0.jar:na]    at clojure.lang.RestFn.invoke(RestFn.java:397) ~[clojure-1.4.0.jar:na]    at backtype.storm.event$event_manager$fn__747.invoke(event.clj:39) ~[classes/:0.9.1-incubating]    at clojure.lang.AFn.run(AFn.java:24) ~[clojure-1.4.0.jar:na]    at java.lang.Thread.run(Thread.java:701) ~[na:1.6.0_30]4999 [Thread-9] INFO  backtype.storm.util - Halting process: ("Error on initialization")Here's how the pom.xml properties are set up currently.<properties>        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>        <test.extra.args>-Djava.net.preferIPv4Stack=true</test.extra.args>        <!-- dependency versions -->        <clojure.version>1.4.0</clojure.version>        <compojure.version>1.1.3</compojure.version>        <hiccup.version>0.3.6</hiccup.version>        <commons-io.verson>2.4</commons-io.verson>        <commons-lang.version>2.5</commons-lang.version>        <commons-exec.version>1.1</commons-exec.version>        <clj-time.version>0.4.1</clj-time.version>        <curator.version>1.0.1</curator.version>        <json-simple.version>1.1</json-simple.version>        <ring.version>0.3.11</ring.version>        <clojure.tools.logging.version>0.2.3</clojure.tools.logging.version>        <clojure.math.numeric-tower.version>0.0.1</clojure.math.numeric-tower.version>        <carbonite.version>1.4.0</carbonite.version>        <snakeyaml.version>1.11</snakeyaml.version>        <httpclient.version>4.1.1</httpclient.version>        <clojure.tools.cli.version>0.2.2</clojure.tools.cli.version>        <disruptor.version>2.10.1</disruptor.version>        <jgrapht.version>0.9.0</jgrapht.version>        <guava.version>13.0</guava.version>        <logback-classic.version>1.0.6</logback-classic.version>        <log4j-over-slf4j.version>1.6.6</log4j-over-slf4j.version>        <netty.version>3.6.3.Final</netty.version>        <clojure.tools.nrepl.version>0.2.3</clojure.tools.nrepl.version>        <clojure-complete.version>0.2.3</clojure-complete.version>        <mockito.version>1.9.5</mockito.version>        <reply.version>0.3.0</reply.version>        <zookeeper.version>3.3.3</zookeeper.version>    </properties>I haven't yet located any thread that suggests a solution for this DefaultKryoFactory error. Any pointers are appreciated.
23274488	[]	~/src/storm-0.8.1/bin/storm jar /root/src/storm-starter/target/storm-starter-0.0.1-SNAPSHOT-jar-with-dependencies.jar storm.starter.ExclamationTopology demo I tried to run this and it said that the problem is with the nimbus connection , but my storm client (and supervisor in the same time ) is connected with my nimbus (shown in Strom UI )Running: java -client -Dstorm.options= -Dstorm.home=/root/src/storm-0.8.1 -Djava.library.path=/usr/local/lib:/opt/local/lib:/usr/lib -cp /root/src/storm-0.8.1/storm-0.8.1.jar:/root/src/storm-0.8.1/lib/asm-4.0.jar:/root/src/storm-0.8.1/lib/commons-codec-1.4.jar:/root/src/storm-0.8.1/lib/carbonite-1.5.0.jar:/root/src/storm-0.8.1/lib/kryo-2.17.jar:/root/src/storm-0.8.1/lib/clout-0.4.1.jar:/root/src/storm-0.8.1/lib/clojure-1.4.0.jar:/root/src/storm-0.8.1/lib/ring-servlet-0.3.11.jar:/root/src/storm-0.8.1/lib/hiccup-0.3.6.jar:/root/src/storm-0.8.1/lib/disruptor-2.10.1.jar:/root/src/storm-0.8.1/lib/tools.cli-0.2.2.jar:/root/src/storm-0.8.1/lib/snakeyaml-1.9.jar:/root/src/storm-0.8.1/lib/joda-time-2.0.jar:/root/src/storm-0.8.1/lib/jetty-util-6.1.26.jar:/root/src/storm-0.8.1/lib/commons-exec-1.1.jar:/root/src/storm-0.8.1/lib/jetty-6.1.26.jar:/root/src/storm-0.8.1/lib/servlet-api-2.5.jar:/root/src/storm-0.8.1/lib/jzmq-2.1.0.jar:/root/src/storm-0.8.1/lib/curator-framework-1.0.1.jar:/root/src/storm-0.8.1/lib/httpclient-4.1.1.jar:/root/src/storm-0.8.1/lib/slf4j-log4j12-1.5.8.jar:/root/src/storm-0.8.1/lib/clj-time-0.4.1.jar:/root/src/storm-0.8.1/lib/commons-lang-2.5.jar:/root/src/storm-0.8.1/lib/libthrift7-0.7.0.jar:/root/src/storm-0.8.1/lib/log4j-1.2.16.jar:/root/src/storm-0.8.1/lib/servlet-api-2.5-20081211.jar:/root/src/storm-0.8.1/lib/tools.logging-0.2.3.jar:/root/src/storm-0.8.1/lib/ring-core-0.3.10.jar:/root/src/storm-0.8.1/lib/minlog-1.2.jar:/root/src/storm-0.8.1/lib/objenesis-1.2.jar:/root/src/storm-0.8.1/lib/jline-0.9.94.jar:/root/src/storm-0.8.1/lib/commons-io-1.4.jar:/root/src/storm-0.8.1/lib/ring-jetty-adapter-0.3.11.jar:/root/src/storm-0.8.1/lib/jgrapht-0.8.3.jar:/root/src/storm-0.8.1/lib/json-simple-1.1.jar:/root/src/storm-0.8.1/lib/tools.macro-0.1.0.jar:/root/src/storm-0.8.1/lib/commons-fileupload-1.2.1.jar:/root/src/storm-0.8.1/lib/compojure-0.6.4.jar:/root/src/storm-0.8.1/lib/httpcore-4.1.jar:/root/src/storm-0.8.1/lib/commons-logging-1.1.1.jar:/root/src/storm-0.8.1/lib/guava-13.0.jar:/root/src/storm-0.8.1/lib/curator-client-1.0.1.jar:/root/src/storm-0.8.1/lib/math.numeric-tower-0.0.1.jar:/root/src/storm-0.8.1/lib/junit-3.8.1.jar:/root/src/storm-0.8.1/lib/slf4j-api-1.5.8.jar:/root/src/storm-0.8.1/lib/reflectasm-1.07-shaded.jar:/root/src/storm-0.8.1/lib/core.incubator-0.1.0.jar:/root/src/storm-0.8.1/lib/zookeeper-3.3.3.jar:/root/src/storm-starter/target/storm-starter-0.0.1-SNAPSHOT-jar-with-dependencies.jar:/root/.storm:/root/src/storm-0.8.1/bin -Dstorm.jar=/root/src/storm-starter/target/storm-starter-0.0.1-SNAPSHOT-jar-with-dependencies.jar storm.starter.ExclamationTopology demo Exception in thread "main" java.lang.RuntimeException: org.apache.thrift7.transport.TTransportException: java.net.ConnectException: Connection refused at backtype.storm.utils.NimbusClient.(NimbusClient.java:36) at backtype.storm.utils.NimbusClient.getConfiguredClient(NimbusClient.java:17) at backtype.storm.StormSubmitter.submitTopology(StormSubmitter.java:53) at storm.starter.ExclamationTopology.main(ExclamationTopology.java:59) Caused by: org.apache.thrift7.transport.TTransportException: java.net.ConnectException: Connection refused at org.apache.thrift7.transport.TSocket.open(TSocket.java:183) at org.apache.thrift7.transport.TFramedTransport.open(TFramedTransport.java:81) at backtype.storm.utils.NimbusClient.(NimbusClient.java:34) ... 3 more Caused by: java.net.ConnectException: Connection refused at java.net.PlainSocketImpl.socketConnect(Native Method) at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339) at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200) at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182) at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) at java.net.Socket.connect(Socket.java:579) at org.apache.thrift7.transport.TSocket.open(TSocket.java:178)
23281823	[u'', u'decode', u'', u'', u'init', u'getContentPane', u'setTitle', u'setDefaultCloseOperation', u'pack', u'setVisible', u'class);', u'add', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'', u'setPreferredSize', u'decode', u'setBackground', u'getVertexCell', u'getAttributes', u'getBounds', u'Double', u'getWidth', u'getHeight', u'setBounds', u'put', u'edit', u'', u'java', u'getAttributes']	I am trying to render a graph using JGraph and JGraphT. I am trying to modify the demo applet they have in their website to create graphs, but in a way that the graphs are not clickable or movable, and just remain static in the JFrame. The following is the code for the applet:import java.awt.*;import java.awt.geom.*;import javax.swing.*;import org.jgraph.*;import org.jgraph.graph.*;import org.jgrapht.*;import org.jgrapht.ext.*;import org.jgrapht.graph.*;// resolve ambiguityimport org.jgrapht.graph.DefaultEdge;/** * A demo applet that shows how to use JGraph to visualize JGraphT graphs. * * @author Barak Naveh * @since Aug 3, 2003 */public class JGraphAdapterDemo    extends JApplet{    private static final long serialVersionUID = 3256444702936019250L;    private static final Color DEFAULT_BG_COLOR = Color.decode("#FAFBFF");    private static final Dimension DEFAULT_SIZE = new Dimension(530, 320);    //    private JGraphModelAdapter<String, DefaultEdge> jgAdapter;    /**     * An alternative starting point for this demo, to also allow running this     * applet as an application.     *     * @param args ignored.     */    public static void main(String [] args)    {        JGraphAdapterDemo applet = new JGraphAdapterDemo();        applet.init();        JFrame frame = new JFrame();        frame.getContentPane().add(applet);        frame.setTitle("JGraphT Adapter to JGraph Demo");        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);        frame.pack();        frame.setVisible(true);    }    /**     * {@inheritDoc}     */    public void init()    {        // create a JGraphT graph        ListenableGraph<String, DefaultEdge> g =            new ListenableDirectedMultigraph<String, DefaultEdge>(                DefaultEdge.class);        // create a visualization using JGraph, via an adapter        jgAdapter = new JGraphModelAdapter<String, DefaultEdge>(g);        JGraph jgraph = new JGraph(jgAdapter);        adjustDisplaySettings(jgraph);        getContentPane().add(jgraph);        resize(DEFAULT_SIZE);        String v1 = "v1";        String v2 = "v2";        String v3 = "v3";        String v4 = "v4";        // add some sample data (graph manipulated via JGraphT)        g.addVertex(v1);        g.addVertex(v2);        g.addVertex(v3);        g.addVertex(v4);        g.addEdge(v1, v2);        g.addEdge(v2, v3);        g.addEdge(v3, v1);        g.addEdge(v4, v3);        // position vertices nicely within JGraph component        positionVertexAt(v1, 130, 40);        positionVertexAt(v2, 60, 200);        positionVertexAt(v3, 310, 230);        positionVertexAt(v4, 380, 70);        // that's all there is to it!...    }    private void adjustDisplaySettings(JGraph jg)    {        jg.setPreferredSize(DEFAULT_SIZE);        Color c = DEFAULT_BG_COLOR;        String colorStr = null;        try {            colorStr = getParameter("bgcolor");        } catch (Exception e) {        }        if (colorStr != null) {            c = Color.decode(colorStr);        }        jg.setBackground(c);    }    @SuppressWarnings("unchecked") // FIXME hb 28-nov-05: See FIXME below    private void positionVertexAt(Object vertex, int x, int y)    {        DefaultGraphCell cell = jgAdapter.getVertexCell(vertex);        AttributeMap attr = cell.getAttributes();        Rectangle2D bounds = GraphConstants.getBounds(attr);        Rectangle2D newBounds =            new Rectangle2D.Double(                x,                y,                bounds.getWidth(),                bounds.getHeight());        GraphConstants.setBounds(attr, newBounds);        // TODO: Clean up generics once JGraph goes generic        AttributeMap cellAttr = new AttributeMap();        cellAttr.put(cell, attr);        jgAdapter.edit(cellAttr, null, null, null);    }    /**     * a listenable directed multigraph that allows loops and parallel edges.     */    private static class ListenableDirectedMultigraph<V, E>        extends DefaultListenableGraph<V, E>        implements DirectedGraph<V, E>    {        private static final long serialVersionUID = 1L;        ListenableDirectedMultigraph(Class<E> edgeClass)        {            super(new DirectedMultigraph<V, E>(edgeClass));        }    }}// End JGraphAdapterDemo.javaI have been trying to overwrite the ListenableDirectedMultigraph and changing it with a DirectedMultigraph, but calling the cell.getAttributes() always returns null. How do I achieve static graphs?
23349428	[u'class);', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'graphml");', u'export', u'printStackTrace']	Help! I'm looking to create a Java application that generates a graph in any one of these formats:.graphml.ygf.gml.tgfI need to be able to open the file in the graph editor "yEd".So far, I have found these solutions:yFiles For JavaPro: Export to graphml, able to open in yEd, Java based, perfect. Why I can't use it: Would cost me more than $2000 to use :( it is exactly what I need howeverGephiPro: FREE, Export to graphml, Java based!Why I can't use it: When I try to open the generated graphml file in yEd, the graphml is broken: it's linear - one line, like this screenshot: If I get it to work, then this is perfectThe graph I tried was generated using their example projectJGraphXPro: Able to generate a graph, Java based, FREEWhy I can't use it: How to export the generated graph to graphml? I couldn't figure it out...PrefusePro: Free, graph generation, Java basedWhat I can't use it: Seems like I can only read graphml, and not write graphml. Also, I built the demos fine with build.sh all, but then when I tried to run demos.jar, I got "Failed to load Main-Class"...Blueprints with GraphML Reader and Writer Library (Tinkerpop?)Pro: Java, Free, seems like you can export graphml with itWhy I can't use it: I'm confused, do I need to use this in conjunction with one of the "Implementations" listed? How do I use this?JGraphT with GraphMLExporterPro: Able to generate graph, Java based, free, can export to graphml I thinkWhy I can't use it: I can't figure out how to export it! When I tried to open the generated graphml in yed, I got "yEd has encountered the following error: Could not import file test.graphml." I used thier example project, and did this:JGraphT Code I Used:UndirectedGraph<String, DefaultEdge> g = new SimpleGraph<String, DefaultEdge>(DefaultEdge.class);String v1 = "v1";String v2 = "v2";String v3 = "v3";String v4 = "v4";// add the verticesg.addVertex(v1);g.addVertex(v2);g.addVertex(v3);g.addVertex(v4);// add edges to create a circuitg.addEdge(v1, v2);g.addEdge(v2, v3);g.addEdge(v3, v4);g.addEdge(v4, v1);FileWriter w;try {GmlExporter<String, DefaultEdge> exporter =     new GmlExporter<String, DefaultEdge>();     w = new FileWriter("test.graphml");    exporter.export(w, g);} catch (IOException e) {    e.printStackTrace();}Any ideas? Thanks!
23512755	[]	I am looking at both jgrapht and jung but I seem to not find any method to allow me to do what I'd like.I have a graph and, by specifing a root node and some leaves, I'd like to obtain a tree from it or at least an error if this is not possible.Both jgraphT and jung seem to have alghoritms to obtain a minimum spanning tree out of a graph, but the obtained tree is random, no one assures me that a given node will be a leaf and another will be a relay....
23549639	[]	You can try:JUNG http://jung.sourceforge.net/JGraphT and JGraph library http://jgrapht.org/visualizations.htmlBoth of them can handle million of nodes/edges (if you have enough RAM). As I remember, they also allowing coloring of nodes / edges. 
23626992	[u'0', u'0', u'm2\\repository\\net\\sf\\proguard\\proguard\\4', u'3', u'0', u'0', u'0', u'0', u'8', u'8', u'1", arch: "x86", family: "dos"', u'xml', u'0" encoding="UTF-8"?>', u'apache', u'w3', u'apache', u'0', u'mycompany</groupId>', u'0', u'build', u'version>1', u'compiler', u'compiler', u'pyx4me</groupId>', u'home}/lib/rt', u'10</version>', u'easytesting</groupId>', u'2', u'powermock</groupId>', u'5', u'powermock</groupId>', u'5', u'powermock</groupId>', u'5', u'easytesting</groupId>', u'0M8</version>', u'google', u'0</version>', u'mockito</groupId>', u'9', u'h2database</groupId>', u'3', u'mycompany</groupId>', u'9</version>', u'powermock</groupId>', u'version}</version>', u'powermock</groupId>', u'version}</version>', u'easymock</groupId>', u'2</version>', u'powermock</groupId>', u'version}</version>', u'qos', u'9', u'qos', u'9', u'sf', u'0</version>', u'jgrapht</groupId>', u'5</artifactId>', u'7', u'13', u'googlecode', u'0', u'javadocmd</groupId>', u'3', u'kodapan', u'0', u'kodapan', u'0', u'apache', u'1', u'3</version>', u'javatuples</groupId>', u'2</version>', u'vividsolutions</groupId>', u'12</version>', u'0" encoding="UTF-8"?>', u'apache', u'w3', u'apache', u'0', u'mycompany</groupId>', u'0', u'build', u'version>1', u'compiler', u'compiler', u'github', u'0', u'0beta1</proguardVersion>', u'mycompany', u'home}/lib/rt', u'sf', u'0beta1</version>', u'10</version>', u'easytesting</groupId>', u'2', u'powermock</groupId>', u'5', u'powermock</groupId>', u'5', u'powermock</groupId>', u'5', u'easytesting</groupId>', u'0M8</version>', u'google', u'0</version>', u'mockito</groupId>', u'9', u'h2database</groupId>', u'3', u'mycompany</groupId>', u'9</version>', u'powermock</groupId>', u'version}</version>', u'powermock</groupId>', u'version}</version>', u'easymock</groupId>', u'2</version>', u'powermock</groupId>', u'version}</version>', u'qos', u'9', u'qos', u'9', u'sf', u'0</version>', u'jgrapht</groupId>', u'5</artifactId>', u'7', u'13', u'googlecode', u'0', u'javadocmd</groupId>', u'3', u'kodapan', u'0', u'kodapan', u'0', u'apache', u'1', u'3</version>', u'javatuples</groupId>', u'2</version>', u'vividsolutions</groupId>', u'12</version>']	When trying to obfuscate my Java program, I get following error (running mvn clean install):[INFO] --- proguard-maven-plugin:2.0.4:proguard (default) @ myproduct ---[INFO] execute ProGuard [-injars, 'D:\dev\myproduct\target\myproduct-1.0.6_proguard_base.jar'(!META-INF/maven/**), -outjars, 'D:\dev\myproduct\target\myproduct-1.0.6.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\org\easytesting\fest-util\1.2.3\fest-util-1.2.3.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\org\powermock\powermock-api-support\1.5.1\powermock-api-support-1.5.1.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\org\powermock\powermock-reflect\1.5.1\powermock-reflect-1.5.1.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\org\objenesis\objenesis\1.2\objenesis-1.2.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\org\powermock\powermock-core\1.5.1\powermock-core-1.5.1.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\org\javassist\javassist\3.18.0-GA\javassist-3.18.0-GA.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\org\easytesting\fest-assert-core\2.0M8\fest-assert-core-2.0M8.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\com\google\guava\guava\15.0\guava-15.0.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\org\mockito\mockito-all\1.9.5\mockito-all-1.9.5.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\com\h2database\h2\1.3.173\h2-1.3.173.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\ru\mycompany\commons\2.9\commons-2.9.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\com\google\inject\guice\2.0\guice-2.0.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.1.4\jackson-core-2.1.4.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.1.4\jackson-databind-2.1.4.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.1.4\jackson-annotations-2.1.4.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\org\easymock\easymock\3.2\easymock-3.2.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\cglib\cglib-nodep\2.2.2\cglib-nodep-2.2.2.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\ch\qos\logback\logback-core\0.9.26\logback-core-0.9.26.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\ch\qos\logback\logback-classic\0.9.26\logback-classic-0.9.26.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\net\sf\opencsv\opencsv\2.0\opencsv-2.0.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\org\jgrapht\jgrapht-jdk1.5\0.7.3\jgrapht-jdk1.5-0.7.3.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\jgraph\jgraph\5.13.0.0\jgraph-5.13.0.0.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\com\googlecode\soundlibs\jlayer\1.0.1-1\jlayer-1.0.1-1.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\com\javadocmd\simplelatlng\1.3.0\simplelatlng-1.3.0.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\se\kodapan\osm\common\core\0.0.2-SNAPSHOT\core-0.0.2-SNAPSHOT.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\org\json\json\20090211\json-20090211.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\se\kodapan\osm\common\java\0.0.2-SNAPSHOT\java-0.0.2-SNAPSHOT.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\org\apache\lucene\lucene-core\4.5.0\lucene-core-4.5.0.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\org\apache\lucene\lucene-analyzers-common\4.5.0\lucene-analyzers-common-4.5.0.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\org\apache\httpcomponents\httpclient\4.1.2\httpclient-4.1.2.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\org\apache\httpcomponents\httpcore\4.1.2\httpcore-4.1.2.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\commons-codec\commons-codec\1.4\commons-codec-1.4.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\commons-io\commons-io\2.3\commons-io-2.3.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\org\javatuples\javatuples\1.2\javatuples-1.2.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\com\vividsolutions\jts\1.12\jts-1.12.jar', -libraryjars, 'C:\Users\MYUSER\.m2\repository\xerces\xercesImpl\2.4.0\xercesImpl-2.4.0.jar', -libraryjars, 'C:\Program Files\Java\jdk1.8.0\jre/lib/rt.jar', -printmapping, 'D:\dev\myproduct\target\proguard_map.txt', -printseeds, 'D:\dev\myproduct\target\proguard_seeds.txt', -allowaccessmodification][INFO] proguard jar: C:\Users\MYUSER\.m2\repository\net\sf\proguard\proguard\4.3\proguard-4.3.jar [proguard] ProGuard, version 4.3 [proguard] Reading program jar [D:\dev\myproduct\target\myproduct-1.0.6_proguard_base.jar] (filtered) [proguard] Error: Can't read [D:\dev\myproduct\target\myproduct-1.0.6_proguard_base.jar(;;;;!META-INF/maven/**)] (Can't process class [com/roots/map/MapApplet.class] (Unsupported version number [52.0] for class format))Several folks suggested that I check the version of Java I'm using. mvn -version returns this:D:\dev\myproduct>mvn -versionApache Maven 3.0.4 (r1232337; 2012-01-17 12:44:56+0400)Maven home: C:\Program Files\apache-maven-3.0.4Java version: 1.8.0-ea, vendor: Oracle CorporationJava home: C:\Program Files\Java\jdk1.8.0\jreDefault locale: de_AT, platform encoding: Cp1252OS name: "windows 7", version: "6.1", arch: "x86", family: "dos"It seems to be correct.What can I do in order to fix this error?Note that com/roots/map/MapApplet is part of an open-source library, so it is not necessary to obfuscate it. If it's possible to exclude that class from obfusation, I'd like to do it.Below is my pom.xml.<?xml version="1.0" encoding="UTF-8"?><project xmlns="http://maven.apache.org/POM/4.0.0"         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">    <modelVersion>4.0.0</modelVersion>    <groupId>ru.mycompany</groupId>    <artifactId>myproduct</artifactId>    <version>1.0.6</version>    <properties>        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>        <powermock.version>1.5.1</powermock.version>        <maven.compiler.source>1.8</maven.compiler.source>        <maven.compiler.target>1.8</maven.compiler.target>    </properties>    <build>        <plugins>            <plugin>                <groupId>com.pyx4me</groupId>                <artifactId>proguard-maven-plugin</artifactId>                <executions>                    <execution>                        <phase>package</phase>                        <goals><goal>proguard</goal></goals>                    </execution>                </executions>                <configuration>                    <options>                        <option>-allowaccessmodification</option>                    </options>                    <libs>                        <lib>${java.home}/lib/rt.jar</lib>                    </libs>                </configuration>            </plugin>        </plugins>    </build>    <dependencies>        <dependency>            <groupId>junit</groupId>            <artifactId>junit</artifactId>            <version>4.10</version>            <scope>test</scope>        </dependency>        <dependency>            <groupId>org.easytesting</groupId>            <artifactId>fest-util</artifactId>            <version>1.2.3</version>        </dependency>        <dependency>            <groupId>org.powermock</groupId>            <artifactId>powermock-api-support</artifactId>            <version>1.5.1</version>        </dependency>        <dependency>            <groupId>org.powermock</groupId>            <artifactId>powermock-reflect</artifactId>            <version>1.5.1</version>        </dependency>        <dependency>            <groupId>org.powermock</groupId>            <artifactId>powermock-core</artifactId>            <version>1.5.1</version>        </dependency>        <dependency>            <groupId>org.easytesting</groupId>            <artifactId>fest-assert-core</artifactId>            <version>2.0M8</version>        </dependency>        <dependency>            <groupId>com.google.guava</groupId>            <artifactId>guava</artifactId>            <version>15.0</version>        </dependency>        <dependency>            <groupId>org.mockito</groupId>            <artifactId>mockito-all</artifactId>            <version>1.9.5</version>        </dependency>        <dependency>            <groupId>com.h2database</groupId>            <artifactId>h2</artifactId>            <version>1.3.173</version>        </dependency>        <dependency>            <groupId>ru.mycompany</groupId>            <artifactId>commons</artifactId>            <version>2.9</version>        </dependency>        <dependency>            <groupId>org.powermock</groupId>            <artifactId>powermock-module-junit4</artifactId>            <version>${powermock.version}</version>            <scope>test</scope>        </dependency>        <dependency>            <groupId>org.powermock</groupId>            <artifactId>powermock-api-mockito</artifactId>            <version>${powermock.version}</version>            <scope>test</scope>        </dependency>        <dependency>            <groupId>org.easymock</groupId>            <artifactId>easymock</artifactId>            <version>3.2</version>        </dependency>        <dependency>            <groupId>org.powermock</groupId>            <artifactId>powermock-api-easymock</artifactId>            <version>${powermock.version}</version>            <scope>test</scope>        </dependency>        <dependency>            <groupId>ch.qos.logback</groupId>            <artifactId>logback-core</artifactId>            <version>0.9.26</version>        </dependency>        <dependency>            <groupId>ch.qos.logback</groupId>            <artifactId>logback-classic</artifactId>            <version>0.9.26</version>        </dependency>        <dependency>            <groupId>net.sf.opencsv</groupId>            <artifactId>opencsv</artifactId>            <version>2.0</version>        </dependency>        <dependency>            <groupId>org.jgrapht</groupId>            <artifactId>jgrapht-jdk1.5</artifactId>            <version>0.7.3</version>        </dependency>        <dependency>            <groupId>jgraph</groupId>            <artifactId>jgraph</artifactId>            <version>5.13.0.0</version>        </dependency>        <dependency>            <groupId>com.googlecode.soundlibs</groupId>            <artifactId>jlayer</artifactId>            <version>1.0.1-1</version>        </dependency>        <dependency>            <groupId>com.javadocmd</groupId>            <artifactId>simplelatlng</artifactId>            <version>1.3.0</version>        </dependency>        <!-- Overpass stuff (start) -->        <dependency>            <groupId>se.kodapan.osm.common</groupId>            <artifactId>core</artifactId>            <version>0.0.2-SNAPSHOT</version>        </dependency>        <dependency>            <groupId>se.kodapan.osm.common</groupId>            <artifactId>java</artifactId>            <version>0.0.2-SNAPSHOT</version>        </dependency>        <dependency>            <groupId>org.apache.httpcomponents</groupId>            <artifactId>httpclient</artifactId>            <version>4.1.2</version>        </dependency>        <dependency>            <groupId>commons-io</groupId>            <artifactId>commons-io</artifactId>            <version>2.3</version>        </dependency>        <!-- Overpass stuff (end) -->        <dependency>            <groupId>org.javatuples</groupId>            <artifactId>javatuples</artifactId>            <version>1.2</version>            <scope>compile</scope>        </dependency>        <dependency>            <groupId>com.vividsolutions</groupId>            <artifactId>jts</artifactId>            <version>1.12</version>        </dependency>    </dependencies></project>Update 1: Modified POM with a ProGuard dependency.<?xml version="1.0" encoding="UTF-8"?><project xmlns="http://maven.apache.org/POM/4.0.0"         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">    <modelVersion>4.0.0</modelVersion>    <groupId>ru.mycompany</groupId>    <artifactId>myproduct</artifactId>    <version>1.0.6</version>    <properties>        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>        <powermock.version>1.5.1</powermock.version>        <maven.compiler.source>1.7</maven.compiler.source>        <maven.compiler.target>1.7</maven.compiler.target>    </properties>    <build>        <plugins>            <plugin>                <groupId>com.github.wvengen</groupId>                <artifactId>proguard-maven-plugin</artifactId>                <version>2.0.7</version>                <executions>                    <execution>                        <phase>package</phase>                        <goals><goal>proguard</goal></goals>                    </execution>                </executions>                <configuration>                    <proguardVersion>5.0beta1</proguardVersion>                    <options>                        <option>-allowaccessmodification</option>                        <option>-dontshrink</option>                        <option>-dontoptimize</option>                        <option>-dontpreverify</option>                        <option>-dontnote</option>                        <option>-keep ru.mycompany.ccp.myproduct.myproductApp</option>                    </options>                    <libs>                        <lib>${java.home}/lib/rt.jar</lib>                    </libs>                    <dependencies>                        <dependency>                            <groupId>net.sf.proguard</groupId>                            <artifactId>proguard-base</artifactId>                            <version>5.0beta1</version>                            <scope>runtime</scope>                        </dependency>                    </dependencies>                </configuration>            </plugin>        </plugins>    </build>    <dependencies>        <dependency>            <groupId>junit</groupId>            <artifactId>junit</artifactId>            <version>4.10</version>            <scope>test</scope>        </dependency>        <dependency>            <groupId>org.easytesting</groupId>            <artifactId>fest-util</artifactId>            <version>1.2.3</version>        </dependency>        <dependency>            <groupId>org.powermock</groupId>            <artifactId>powermock-api-support</artifactId>            <version>1.5.1</version>        </dependency>        <dependency>            <groupId>org.powermock</groupId>            <artifactId>powermock-reflect</artifactId>            <version>1.5.1</version>        </dependency>        <dependency>            <groupId>org.powermock</groupId>            <artifactId>powermock-core</artifactId>            <version>1.5.1</version>        </dependency>        <dependency>            <groupId>org.easytesting</groupId>            <artifactId>fest-assert-core</artifactId>            <version>2.0M8</version>        </dependency>        <dependency>            <groupId>com.google.guava</groupId>            <artifactId>guava</artifactId>            <version>15.0</version>        </dependency>        <dependency>            <groupId>org.mockito</groupId>            <artifactId>mockito-all</artifactId>            <version>1.9.5</version>        </dependency>        <dependency>            <groupId>com.h2database</groupId>            <artifactId>h2</artifactId>            <version>1.3.173</version>        </dependency>        <dependency>            <groupId>ru.mycompany</groupId>            <artifactId>commons</artifactId>            <version>2.9</version>        </dependency>        <dependency>            <groupId>org.powermock</groupId>            <artifactId>powermock-module-junit4</artifactId>            <version>${powermock.version}</version>            <scope>test</scope>        </dependency>        <dependency>            <groupId>org.powermock</groupId>            <artifactId>powermock-api-mockito</artifactId>            <version>${powermock.version}</version>            <scope>test</scope>        </dependency>        <dependency>            <groupId>org.easymock</groupId>            <artifactId>easymock</artifactId>            <version>3.2</version>        </dependency>        <dependency>            <groupId>org.powermock</groupId>            <artifactId>powermock-api-easymock</artifactId>            <version>${powermock.version}</version>            <scope>test</scope>        </dependency>        <dependency>            <groupId>ch.qos.logback</groupId>            <artifactId>logback-core</artifactId>            <version>0.9.26</version>        </dependency>        <dependency>            <groupId>ch.qos.logback</groupId>            <artifactId>logback-classic</artifactId>            <version>0.9.26</version>        </dependency>        <dependency>            <groupId>net.sf.opencsv</groupId>            <artifactId>opencsv</artifactId>            <version>2.0</version>        </dependency>        <dependency>            <groupId>org.jgrapht</groupId>            <artifactId>jgrapht-jdk1.5</artifactId>            <version>0.7.3</version>        </dependency>        <dependency>            <groupId>jgraph</groupId>            <artifactId>jgraph</artifactId>            <version>5.13.0.0</version>        </dependency>        <dependency>            <groupId>com.googlecode.soundlibs</groupId>            <artifactId>jlayer</artifactId>            <version>1.0.1-1</version>        </dependency>        <dependency>            <groupId>com.javadocmd</groupId>            <artifactId>simplelatlng</artifactId>            <version>1.3.0</version>        </dependency>        <!-- Overpass stuff (start) -->        <dependency>            <groupId>se.kodapan.osm.common</groupId>            <artifactId>core</artifactId>            <version>0.0.2-SNAPSHOT</version>        </dependency>        <dependency>            <groupId>se.kodapan.osm.common</groupId>            <artifactId>java</artifactId>            <version>0.0.2-SNAPSHOT</version>        </dependency>        <dependency>            <groupId>org.apache.httpcomponents</groupId>            <artifactId>httpclient</artifactId>            <version>4.1.2</version>        </dependency>        <dependency>            <groupId>commons-io</groupId>            <artifactId>commons-io</artifactId>            <version>2.3</version>        </dependency>        <!-- Overpass stuff (end) -->        <dependency>            <groupId>org.javatuples</groupId>            <artifactId>javatuples</artifactId>            <version>1.2</version>            <scope>compile</scope>        </dependency>        <dependency>            <groupId>com.vividsolutions</groupId>            <artifactId>jts</artifactId>            <version>1.12</version>        </dependency>    </dependencies></project>
23700828	[u'class);', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'out', u'key == ', u'equals', u'add', u'add', u'add', u'add', u'iterator', u'hasNext', u'next', u'isAVertex', u'addVertex', u'out']	I want to have a DirectedWeightedMultigraph with "customized" Vertex and Edges.With this code, I would like to have only three vertices because v1 and v4 have the same key, but I have four.         DirectedWeightedMultigraph<Vertex, Edge> graph = new DirectedWeightedMultigraph<Vertex, Edge>(Edge.class);     Vertex v1 = new Vertex("a", "o1");     Vertex v2 = new Vertex("b", "o2");     Vertex v3 = new Vertex("c", "o1");     Vertex v4 = new Vertex("a", "o3");     graph.addVertex(v1);     graph.addVertex(v2);     graph.addVertex(v3);     graph.addVertex(v4);     System.out.println("#vertex: "+ graph.vertexSet().size());This is how my vertex looks like:public class Vertex {String key;String other;public Vertex(String id, String o){    key = id;    other = o;}public boolean equals(Object object) {    if (object == null || !(object instanceof Vertex)) {        return false;    }           return (this.key == ((Vertex) object).key);}   public boolean isAVertex(Set<Vertex> set) {    boolean result = false;     for (Vertex v : set) {            if (this.equals(v)) {                 result = true;                break;            }     }    return result;}}My edges looks likepublic class Edge {int cost;   }Before using edges, I read this and this about equals and hashCode for vertex and edge. I also try to use ParanoidGraph but it does'nt work. To solve that problem, I chose to "manually" check if a vertex with a specific key is in the vertexSet before add a vertex. But I miss what's wrong in my code. I still have four vertices:         List<Vertex> rowVertices = new ArrayList<Vertex>();     rowVertices.add(v1);     rowVertices.add(v2);     rowVertices.add(v3);     rowVertices.add(v4);     Iterator it = rowVertices.iterator();     while (it.hasNext()) {         Vertex currentVertex = (Vertex) it.next();         if (!currentVertex.isAVertex(graph.vertexSet())) {             graph.addVertex(currentVertex);         }                }     System.out.println("#vertex: "+ graph.vertexSet().size());
23851737	[u'len; i++) {', u'len; j++) {']	Consider a directed graph, like this:Where, (A) initially, the solid black edges are asserted: 0 &rightarrow; {1,3} 1 &rightarrow; {2}3 &rightarrow; {4}4 &rightarrow; {2}Then (B) the transitive closure has then been computed to add the following (dashed) edges:0 &rightarrow; {2,4} 3 &rightarrow; {2}For any vertex in this final graph, how can I efficiently compute the 'immediate' neighbors accessible by some edge which aren't accessible by a different, longer path? The output I want is shown in (A). I am not distinguishing between edges which were asserted  (bold) or inferred (dashed).Is there a well-known name to this problem, and is there a straightforward way of achieving this with JGraphT?Thoughts:Perhaps this is possible by using a topological sort of the vertices, e.g. TS = [0,1,3,4,2].for(i=0, i<TS.len; i++) {  var v0 = TS[i]  for (j=i+1; i<TS.len; j++) {    var v1 = TS[j]    if (edge exists v0 -> v1) {      var otherPath = false      for (k=i+1; k<j; k++) {        var v2 = TS[k]        if (path exists v0 -> v2 && path exists v2 -> v1) {          otherPath = true           break        }      }      if (!otherPath) {        record (v0 -> v1)      }    }  } }Basically, I'm thinking that (v0 &rightarrow; v1) is a solution when no other longer path (v0 &rightarrow; ... v2 ... &rightarrow; v1) exists where v0 > v2 > v1 in the topological sort. Does this look correct, and/or is there a more efficient way?
23896339	[u'vertexSet', u'hasNext', u'containsVertex', u'edgeSet', u'hasNext', u'containsEdge', u'addVertex', u'out', u'out', u'hashCode', u'addEdge', u'addEdge', u'setSourceP', u'setTargetP']	I tried to simply equals two jgraphT instances and it returns false, even though they are identical.I then tried to override the equals with an implementation of mine:public boolean equals(MyGraph<CustomV, CustomE> otherGraph){    boolean result = true;    Iterator<CustomV> vertexes = otherGraph.vertexSet().iterator();    while(result && vertexes.hasNext()){        result = this.containsVertex((V) vertexes.next());      }    Iterator<CustomE> edges = otherGraph.edgeSet().iterator();    while(result && edges.hasNext())        result = this.containsEdge((E) edges.next());    return result;}and saw that the containsEdge() method fails if that edge is not the EXACT object. This is strange as I made sure to override the equals methods of both edges and switches...edit: made this experiment:CustomV aNode = new CustomV(1,2);myGraph.addVertex(aNode);System.out.println(myGraph.containsVertex(aNode)); //trueSystem.out.println(myGraph.containsVertex(new CustomV(1,2))); //false..but should be trueand as you can see the containsVertex() method does not seem working..edit2:Thanks to silly freak I almost solved: I had to override hashcode() method too.Now, this worked for Vertexes but for edges I get a null pointer exception on the hashcode, this is my overridden method:@Overridepublic int hashCode() {    return (getSource().hashCode()+getTarget().hashcode());}I get a null pointer when I try to create an edge on a graph (I suppose hashcode() is called here):myGraph.addEdge(a,b);Problem is that getSource() and getTarget() seem to return null when called in that moment...how to solve?This is the exception stack:Exception in thread "main" java.lang.NullPointerException      at org.at.network.types.CustomE.hashCode(CustomE.java:71)      at java.util.HashMap.hash(HashMap.java:366)      at java.util.HashMap.getEntry(HashMap.java:466)      at java.util.HashMap.containsKey(HashMap.java:453)      at org.jgrapht.graph.AbstractBaseGraph.containsEdge(AbstractBaseGraph.java:359)      at org.jgrapht.graph.AbstractBaseGraph.addEdge(AbstractBaseGraph.java:208)      at org.jgrapht.graph.GraphDelegator.addEdge(GraphDelegator.java:131)      at org.jgrapht.graph.DefaultListenableGraph.addEdge(DefaultListenableGraph.java:162)      at org.at.network.types.MyGraph.addCustomEdge(MyGraph.java:27)      at org.at.network.Test.main(Test.java:220)The addcustomedge method is the following:public CustomE addCustomEdge(V sourceVertex, Port sourcePort,         V targetVertex, Port targetPort){    CustomE l = (CustomE)super.addEdge(sourceVertex, targetVertex);    l.setSourceP(sourcePort);    l.setTargetP(targetPort);    return l;}Port is just a simple datastructure for a couple of strings.
23899471	[u'addEdge', u'createEdge', u'addEdge', u'setSourceP', u'setTargetP', u'hashCode', u'createEdge', u'addEdge']	For the answer to the intial problem: Overriding equals and hashCode in JavaWhenever a.equals(b), then a.hashCode() must be same as b.hashCode()that's especially relevant when using hash based data structures, as elements are put in buckets according to their hash codes, and only those in the same bucket are compared using equals().myGraph.addEdge(a,b); implicitly creates the edge using an EdgeFactory (presumably a ClassBasedEdgeFactory). Look at lines 206 and following in AbstractBaseGraph, where the exception is coming from:E e = edgeFactory.createEdge(sourceVertex, targetVertex);if (containsEdge(e)) { // this restriction should stay!As you said yourself, you use a default constructor to construct the edge (by the way, you don't even seem to set the vertexes at all):CustomE l = (CustomE)super.addEdge(sourceVertex, targetVertex);l.setSourceP(sourcePort);l.setTargetP(targetPort); that means, at the time the edge is used by containsEdge, it is not fully initialized! Generally, before exposing an object to code you don't have absolute control over, it should be initialized. You have just experienced one of many problems that can come up when you expose uninitialized objects. In particular, as source and target are still null when containsEdge performs a hash-based lookup, this code:(getSource() == null? 0:getSource().hashCode())throws a NullPointerException.The fix to the problem is to fully initialize the edge before passing it to the JGraphT API. As you not only set source and target vertex but also port, it seems that the EdgeFactory.createEdge() does not have enough information to do so. Luckily, there seems to be an overloaded method Graph.addEdge(V sourceVertex, V targetVertex, E e). I would advise you to use it like this:public CustomE addCustomEdge(V sourceVertex, Port sourcePort,         V targetVertex, Port targetPort){    CustomE l = new CustomE(sourceVertex, sourcePort, targetVertex, targetPort);    boolean added = addEdge(sourceVertex, targetVertex, l);    if(added) return l;    else return null;}of course you first have to create that CustomE constructor.
23923484	[u'out', u'out', u'out', u'out', u'edgeSet', u'getEdgeSource', u'getEdgeTarget', u'removeEdge', u'add', u'addEdge', u'hasNext', u'next', u'equals', u'edgeSet', u'getEdgeSource', u'getEdgeTarget', u'add', u'hasNext', u'next', u'put', u'get', u'add', u'isEmpty', u'remove', u'equals', u'outgoingEdgesOf', u'getEdgeSource', u'getEdgeTarget', u'equals', u'getEdgeTarget', u'contains', u'get', u'add', u'add', u'class);', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addVertex', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge', u'addEdge']	The approach mentioned in the comments, implemented with JGraphT:It simply iterates over all edges, removes each edge temporarily, and checks whether the vertices of the edge are still connected (using a simple Breadth-First-Search). If they are no longer connected, then the edge is added to the result set (before it is re-inserted into the graph).This is rather trivial, so I assume that there is a more sophisticated solution. Particularly the checks for the existence of a path (even with a simple BFS) might become prohibitively expensive for "larger" graphs. EDIT: Extended the code with a first attempt (!) of implementing the topological constraint that was mentioned in the original question. It basically follows the same concept as the simple approach: For each edge, it checks whether the vertices of the edge are still connected if the edge was removed. However, this check whether the vertices are connected is not done with a simple BFS, but with a "constrained" BFS. This BFS skips all vertices whose topological index is greater than the topological index of the end vertex of the edge. Although this delivers the same result as the simple approach, the topological sort and the implied constraint are somewhat brain-twisting and its feasibility should be analyzed in a more formal way. This means: I am NOT sure whether the result is correct in every case. IF the result is correct, it could indeed be more efficient. The program prints the number of vertices that are scanned during the simple BFS and during the constrained BFS. The number of vertices for the constrained BFS is lower, and this advantage should become greater when the graph becomes larger: The simple BFS will basically always have have to scan all edges, resulting in the worst case of O(e), and a complexity of O(e*e) for the whole algorithm. The complexity of the topological sorting depends on the structure of the graph, but should be linear for the graphs in question. However, I did not explicitly analyze what the complexity of the constrained BFS will be.import java.util.ArrayDeque;import java.util.LinkedHashMap;import java.util.LinkedHashSet;import java.util.LinkedList;import java.util.Map;import java.util.Queue;import java.util.Set;import org.jgrapht.DirectedGraph;import org.jgrapht.Graph;import org.jgrapht.graph.DefaultEdge;import org.jgrapht.graph.SimpleDirectedGraph;import org.jgrapht.traverse.BreadthFirstIterator;import org.jgrapht.traverse.TopologicalOrderIterator;public class TransitiveGraphTest{    public static void main(String[] args)    {        DirectedGraph<String, DefaultEdge> g =             createTestGraph();        Set<DefaultEdge> resultSimple = compute(g);        Set<DefaultEdge> resultTopological = computeTopological(g);        System.out.println("Result simple      "+resultSimple);        System.out.println("Visited            "+debugCounterSimple);        System.out.println("Result topological "+resultTopological);        System.out.println("Visited            "+debugCounterTopological);    }    private static int debugCounterSimple = 0;    private static int debugCounterTopological = 0;    //========================================================================    // Simple approach: For each edge, check with a BFS whether its vertices    // are still connected after removing the edge    private static <V, E> Set<E> compute(DirectedGraph<V, E> g)    {        Set<E> result = new LinkedHashSet<E>();        Set<E> edgeSet = new LinkedHashSet<E>(g.edgeSet());        for (E e : edgeSet)        {            V v0 = g.getEdgeSource(e);            V v1 = g.getEdgeTarget(e);            g.removeEdge(e);            if (!connected(g, v0, v1))            {                result.add(e);            }            g.addEdge(v0, v1);        }        return result;    }    private static <V, E> boolean connected(Graph<V, E> g, V v0, V v1)    {        BreadthFirstIterator<V, E> i =             new BreadthFirstIterator<V, E>(g, v0);        while (i.hasNext())        {            V n = i.next();            debugCounterSimple++;            if (n.equals(v1))            {                return true;            }        }        return false;    }    //========================================================================    // Topological approach: For each edge, check whether its vertices    // are still connected after removing the edge, using a BFS that    // is "constrained", meaning that it does not traverse past     // vertices whose topological index is greater than the end    // vertex of the edge    private static <V, E> Set<E> computeTopological(DirectedGraph<V, E> g)    {        Map<V, Integer> indices = computeTopologicalIndices(g);        Set<E> result = new LinkedHashSet<E>();        Set<E> edgeSet = new LinkedHashSet<E>(g.edgeSet());        for (E e : edgeSet)        {            V v0 = g.getEdgeSource(e);            V v1 = g.getEdgeTarget(e);            boolean constrainedConnected =                constrainedConnected(g, v0, v1, indices);            if (!constrainedConnected)            {                result.add(e);            }        }                return result;    }    private static <V, E> Map<V, Integer> computeTopologicalIndices(        DirectedGraph<V, E> g)    {        Queue<V> q = new ArrayDeque<V>();        TopologicalOrderIterator<V, E> i =             new TopologicalOrderIterator<V, E>(g, q);        Map<V, Integer> indices = new LinkedHashMap<V, Integer>();        int index = 0;        while (i.hasNext())        {            V v = i.next();            indices.put(v, index);            index++;        }        return indices;    }    private static <V, E> boolean constrainedConnected(        DirectedGraph<V, E> g, V v0, V v1, Map<V, Integer> indices)    {        Integer indexV1 = indices.get(v1);        Set<V> visited = new LinkedHashSet<V>();        Queue<V> q = new LinkedList<V>();        q.add(v0);        while (!q.isEmpty())        {            V v = q.remove();            debugCounterTopological++;            if (v.equals(v1))            {                return true;            }            Set<E> outs = g.outgoingEdgesOf(v);            for (E out : outs)            {                V ev0 = g.getEdgeSource(out);                V ev1 = g.getEdgeTarget(out);                if (ev0.equals(v0) && ev1.equals(v1))                {                    continue;                }                V n = g.getEdgeTarget(out);                if (visited.contains(n))                {                    continue;                }                Integer indexN = indices.get(n);                if (indexN <= indexV1)                {                    q.add(n);                }                visited.add(n);            }        }        return false;    }    private static DirectedGraph<String, DefaultEdge> createTestGraph()    {        DirectedGraph<String, DefaultEdge> g =            new SimpleDirectedGraph<String, DefaultEdge>(DefaultEdge.class);        String v0 = "0";        String v1 = "1";        String v2 = "2";        String v3 = "3";        String v4 = "4";        g.addVertex(v0);        g.addVertex(v1);        g.addVertex(v2);        g.addVertex(v3);        g.addVertex(v4);        g.addEdge(v0, v1);        g.addEdge(v0, v3);        g.addEdge(v1, v2);        g.addEdge(v3, v4);        g.addEdge(v4, v2);        g.addEdge(v0, v2);        g.addEdge(v0, v4);        g.addEdge(v3, v2);        return g;    }}
24058877	[]	I'm new in web app development and I hope I can explain well my problem.I want to create a web app in Eclipse using these elements:some java classes (calling these core classes) from an existing project I've made (these classes use JGraphT)a JavaScript for the calendarthe JavaScript class OpenLayers, that need two folders: theme and imgJSP pages as user interfaceTomcat 7.0 as server in localhost (on the server there is Geoserver to manage some maps)the core classes and Geoserver access to a PostgreSQL db to load maps, some geospatial data (like coordinates and routes) and working on themNow the question is: How assemble all in a web project in Eclipse?I'm not sure how create the dependences and the tree of folders, to do that all works. I don't know in which folder create the JSP pages.I don't know how import the core classes in the JSPs, create objects and using them.Please help me. Thanks.
