
bulk_delete
all
get_object
cdnfailed
os_options=os_options
prefix
sleep
find_user_by_email
replace_policy
whose
batches
to
'all'
project_id
spec
cooldown=none
updated
returned
getattr
msg:
updates
difference
client_class=client_class
nosuchcontainer
list
upload
get_default_region
convenience
:?
context=self
@assure_instance
force
json-schema
second
pass
implemented
baseclient
_set_description
list_user_access
supplied
launch
version
head_object
new
public
metadata
tags
error
here
get_new_client
clouddatabaseinstance
path
property
'id'
options
appropriately
min_entities
replace
put
list_all
sort_dir=none
total
personality=personality
takes
restore_backup
_make_cdn_connection
auth_version=
call
size_min=none
type
until
basemanager
object_count=hdrs
particular
imagemembermanager
must
none
endpoint
rights
work
container=container
notimplementederror
[0]
list_backups
exceptions
root
def
key=pw_key
##################################################################
share
_client_private
object_prefix=
visibility=visibility
'force=true'
information
users/%s/os-ksadm/credentials
rather
verify
feature
nosuchdatabase
@property
snapshotnotavailable
description
cdn_request
insecure
after
policy_count
catalog
disk_config=disk_config
webhooks
list_credentials
list_members
response
types
a
preauthurl=preauthurl
alias
oname
nosuchclient
cached=false
url_type
disables
'undo'
held
ckey
same
existence
its
name=oname
before
member_status=none
_local_files
img
image_tasks
403
_convert_head_object_last_modified_to_local
401
kwargs
clt
409
_non_display
then
them
return
primary
std_headers
they
detach
**kwargs
get_setting
force=force
httplib
gets
queues
volume_type
full_listing=true
load_balancer_args
found
isn't
status
is_percent=is_percent
string_types
case_insensitive_update
passwords
verify_ssl=verify_ssl
unsharableimage
404:
re
etag
_client
storageobject
get
backupref
/%s/%s/launch
'public'
resume
standard
reason
base
members
is_percent=false
[cname]
set_object_metadata
pairs
retained
server_args[
thread
created
creates
api_key
att
group's
add_image_member
_resolve_name
http_log_debug=http_log_debug
already
number
instances
another
'rejected'
admin=false
internalurl
uri_base
display_name=display_name
guess
service
content_type=obj_info[
returns
preauthtoken=preauthtoken
needed
2
listed
passed
_resolve_lbs
[a-za-z0-9\-\
store
list_public_containers
replace_launch_config
rejected
'pending'
/%s/images
new_container
notfound
scheme
update_image_member
enabled
key_name=none
project
headers
str
enables
new_ctype
metadata=none
description=none
imageref
cdn_url:
raw
_list_backups_for_instance
status=none
badrequest
self
tuple
private_url
also
internal
clouddatabasevolume
/%s
user's
object
scaling_group=scaling_group
'private_url'
marker=none
regular
'data'
data[
services
data=data
exc
cdn_connection
sort_key=none
_backup_manager
folderuploader
container=none
'delete
cdn
/%s/%s
delete_webhook
networks
_call
current
display_name
parameters
prefix=none
completes
pretty
override
indexerror:
personality
new_obj_name=none
db
get_container_metadata
during
method_patch
restart
update_policy
bytes
method
pw_key
bad
underlying
cont:
new_meta[ckey]
set
reference
response:
cloudblockstoragemanager
tenantnotfound
see
are
close
guess=false
`db_names`
currently
2-tuples
lm_str
available
we
creating
assure_snapshot
container_meta_prefix
/%s/members
scalingpolicies
member_status=member_status
len
personality=none
description:
received
grant_user_access
'x-container-meta-'
against
connection
fnc
'headers'
login
_configure_manager
finds
]+
_resolve_id
'available'
launch_config_type
simple
whatever
represented
simply
update_webhook_metadata
along
getheaders
currently-authenticated
user_id
raise
display_name=none
db_names
been
restarts
x-container-bytes-used
basic
create_backup
containers
object_store
update_launch_config
update_launch_metadata
key_name
objnames
else
flavor_ref
_schema_manager
_get_flavor_ref
[snap
exception
handling
collate=none
usernotfound
behavior
applies
user=none
endpoints
content-length
cont
is
<=
it
_creds_style
non-password
itself
in
id
instance=instance
if
containing
authenticated
x-delete-after
make
clear:
used
server_name=server_name
launch_config_type=launch_config_type
make_container_private
_list_tenants
user
x-account-container-count
lower
task
database
flavorref
uploading
urlparse
client
the
latter
just
cached=true
obj_info
cooldown
mysql
display_description=display_description
openstack
yet
password
conn_class
_make_connections
databases=none
snap
has
rgn
change_object_content_type
preauthtoken=none
background
networks=networks
specific
continue
get_container
size_max=none
group_id
creation
some
key/value
txt
paginated
for
/
get_database
update_metadata
either
flavors
id]
deleted
object_store[rgn]
from
super
by
deletes
guess_type
@wraps
description=description
][0]
key_name=key_name
accepts
status:
create_snapshot
get_launch_config
tenants
block
total_bytes=int
raised
into
[]
curr_meta:
appropriate
splitlines
policy=self
wrap
method_delete
assure_image
status=status
retrieving
limit=limit
'%s'
class
authorized
:
was
files
head
resource_class=none
[tenant
public_url
removes
failure
retrying
active
info
rgn_ep
throw
imagetasksmanager
autoscaleclient
clouddatabasedatabasemanager
declarations
attached
up
image=image
http_status
more
called
delete
x-copy-from
defined
request
user:
upload_key
invalidimagememberstatus
exist
parsed
authurl=auth_endpoint
execute_policy
%
instance=none
no
disk_config
when
invalid
test
/%s/tasks
cooldown=cooldown
users
_get_flavor
update
generated
hostnames
_create_launch_config_body
change=none
e
restores
required
svc
obj
time
x-account-meta-
img_format
requires
once
code
_flavor_manager
existing
manager
manages
gb
get_uploaded
public=public
scaling_group=self
note:
tag=tag
retry_interval
include
uploaded
string
webhook
policy_type
args=args
container's
clouddatabasedatabase
swiftclient
baseidentity
volume=none
try
get_object_names
_default_region
to_delete
deleting
special=false
upper
new_cont
os_options=none
dealing
get_flavor
port
else:
auth_endpoint
_thread
appear
clt_class
giving
/%s/%s/members/%s
access
values
baseresource
body
443
respectively
metadata=metadata
response_dict=extra_info
objects
groups
address
method_get
resource_class=image
[
wait
lowtype
desired_capacity=desired_capacity
last-modified
`public=false`
os-dcf:diskconfig
method_post
obj=none
get_container_cdn_metadata
tasks
contents=none
private
api
names
marker
apply
cloud
'status'
use
etag=obj_info[
invalidimagemember
non-standard
working
only
next
object_cdn_url
handles
https
msg
region_name
get_webhook
visibility=none
clouddatabasebackupmanager
cases
name:
account
this
clients
detaches
image_members
response_key=
owner=owner
obvious
can
of
dtstr
making
resource_class=cloudblockstoragesnapshot
point
links
process
attribute
none:
tag
insecure=insecure
prefix=object_prefix
x-account-bytes-used
schemas
content_type=new_ctype
requirements
holds
regions
@assure_volume
instead
native
parameter
management_url=url
rgn][0]
may
disk_config=none
resource_class=cloudblockstoragevolume
such
data
compatibility
_snapshot_manager
'extra_info'
clear=true
tenants]
content-type
cdn_enabled:
or
so
allow
elif
users/%s
status_code
entity
pyrax
referencing
non-none
still
thann
1
accepted
group
server_name
post_container
_make_policies
<
pending
docs
scaling
not
cname:
force=false
name
handle_swiftclient_exception
get_policy
scalinggroupmanager
clouddatabasebackup
retrieve
populated
%s/%s
snapshots
scalinggroup
obj_url
meta
list_databases
_ep_for_region
80
@_valid_upload_key
ep
special
'groupconfiguration'
container
reload
display_description
marker=marker
dictionary
received:
retrieved
args
_auth_endpoint
enable_root_user
groupconfiguration[
sort_key=sort_key
desired_capacity=none
e:
conflicts
tag=none
tenant
data=none
could
assure_instance
[ep
loadbalancers
cname
uri_base=
resumes
support
first
one
imagemanager
directly
owner
get_client
size
doesn't
given
mapped_service
list_webhooks
system
region_name=self
cdn_url=none
last_modified=dtstr
cloudblockstoragesnapshotmanager
public=true
gives
clouddatabasemanager
massaged
in-progress
localnames
completed
policy_type=none
clt:
][
copy
than
specify
users=none
list_users
r
were
prepended
result
and
_tasks_manager
false
delay
size_min=size_min
have
need
tenants/%s
launchconfiguration
any
_types_manager
able
instance
change=change
which
async=true
httpsconnection
service_mapping
jsonschemamanager
=
200
sure
multiple
expires
#
autoscalewebhook
remove_from_cache
device
load_balancers
]
hdrs[
[0-9]
_manager
url
tenant_id
name][0]
uri
get_details
snapshot
databases
supported
copy_object
help
'volume'
based
networks=none
try:
true
missingname
don't
'public_url'
should
entities
'private'
dict
clouddatabaseflavor
handle
means
==
restorepoint
mgr
cannot
tenant_name=tenant_name
delete_user
following
_container_cache[cname]
resource
cached
calling
threading
through
where
enabled=true
exists
auth_token
ttl
cloudblockstoragesnapshot
obj_info[
set_container_metadata
_container_cache
_create_client
fails
autoscale
interacting
get_configuration
attempting
state
owner=none
load_balancers=none
publicurl
email
[db
_should_abort_folder_upload
_flavor
/%s/%s/backups
configuration
swift
preauthurl=none
pass-through
collate=collate
'reason'
admin
region
flavor_id
cached:
attributes
otherwise
maxentities
filtering
attr_map
user=username
volumenotavailable
img_id
create_database
cf
pop
authenticated:
_cdn_set_access
imagetasks
300:
server_args
verify_ssl
[clouddatabasebackup
optional
keys
copies
'cached=false'
json
_set_name
httpconnection
port:
client_class=none
valueerror
username
resource_class=imagetask
optionally
corresponding
'error'
*args
policy
get_id
present
case
auth_version=auth_version
cloudblockstoragevolumetype
value
will
std_headers=true
minentities
policies
clientexception
instance-specific
adds
novaclient
name=none
utils
parse
canceled
converts
groupconfiguration
limit=none
__init__
different
handled
_create_body
verify_ssl=true
check
member
authentication
get_info
document
character_set=character_set
'clear'
hdrs
add_member
_set_flavor
_delete_objects_not_in_list
strict=strict
volume_id
name=cname
six
identity
volume=volume
connect_to_cloudfiles
well
netloc
sets
clear=false
'image'
being
autoscalepolicy
resp
privateurl
stored
flavor
isinstance
403:
prefix=
supply
list_image_members
except
timeout=connection_timeout
add
valid
%s
obj=obj
match
around
represents
read
sort_dir=sort_dir
get_state
credentials
execution
load_balancers=load_balancers
total_bytes=hdrs
header
ep:
server
put_object
account_meta_prefix
curr_meta
cloudblockstoragevolume
accessible
searching
tenantid
new_meta
specified
images
cdn_url
authenticate
x-container-object-count
cdn_uri
@handle_swiftclient_exception
admin=true
token
_repr_properties
'accepted'
imagetagmanager
does
resp_body
provides
?
seconds
host
policy=policy
max_entities
tenant_name=none
on
oh
is_ssl
extra_info=none
region=self
size_max=size_max
backup
create
communication
image
_massage_metakeys
determine
strip
head_container
backups
strict=true
img_format=none
list_snapshots
character_set=none
additional
val
folder_upload_status[upload_key][
there
plural_response_key=
resource_class=cloudblockstoragevolumetype
_get_description
_user_manager
display_description=none
complete
scaling_group
flavor=flavor
match:
but
volume
be
trying
with
new_obj_name
made
compute
default
wish
authorizationfailure
method_put
os_options
limit
empty
headers=hdrs
subclasses
body=body
admin=admin
include:
int
certain
cached=cached
headers=none
an
as
at
svc:
_get_client
executes
list_policies
again
name=name
storage
detail
cdn-enabled
_get_name
that
other
5
details
flavor=none
you
connect_to_cloudservers
volume:
policy_type=policy_type
@ensure_cdn
mimetypes
409:
delete_object_in_seconds
`cached=false`
patch
@assure_image
http_log_debug=none
using
notauthenticated
volumes
metadata=curr_meta
update_tenant
args=none
